[
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1316,
    "lines": "java.sql.ResultSet.class.isAssignableFrom(\n                    method.getReturnType())"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1094,
    "lines": "java.sql.ResultSet.class.isAssignableFrom(\n                        method.getReturnType())"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 0,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SetFunction.java",
    "startLineNumber": 352,
    "lines": "if (!NumberType.isInLongLimits(bi)) {\n                            throw Error.error(ErrorCode.X_22015);\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SetFunction.java",
    "startLineNumber": 408,
    "lines": "if (!NumberType.isInLongLimits(bi)) {\n                            throw Error.error(ErrorCode.X_22015);\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SetFunction.java",
    "startLineNumber": 372,
    "lines": "if (!NumberType.isInLongLimits(bi)) {\n                            throw Error.error(ErrorCode.X_22015);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SetFunction.java, /hsqldb/src/org/hsqldb/SetFunction.java & more ...",
  "id": 1,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1852,
    "lines": "params[ALLOC_BLOCKS.BLOCK_COUNT]  = ValuePool.getInt(count);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1835,
    "lines": "params[ALLOC_BLOCKS.BLOCK_COUNT]  = ValuePool.getInt(count);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 2,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 251,
    "lines": "return precision >= other.precision ? this\n                                                        : getCharacterType(\n                                                        typeCode,\n                                                        other.precision,\n                                                        other.getCollation());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 244,
    "lines": "return precision >= other.precision ? this\n                                                    : getCharacterType(\n                                                    typeCode, other.precision,\n                                                    other.getCollation());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 3,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 6096,
    "lines": "if (index == -1) {\n            throw Error.error(ErrorCode.X_42501, token.tokenString);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 6122,
    "lines": "if (index == -1) {\n            throw Error.error(ErrorCode.X_42501, token.tokenString);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 4,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1489,
    "lines": "{\n                    token.tokenString = Tokens.T_NOT_EQUALS;\n                    token.tokenType   = Tokens.NOT_EQUALS;\n                    currentPosition   += 2;\n                    token.isDelimiter = true;\n\n                    return;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1506,
    "lines": "{\n                    token.tokenString = Tokens.T_NOT_EQUALS;\n                    token.tokenType   = Tokens.NOT_EQUALS;\n                    currentPosition   += 2;\n                    token.isDelimiter = true;\n\n                    return;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 5,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 940,
    "lines": "{\n                session.sessionContext.isReadOnly = Boolean.TRUE;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 942,
    "lines": "{\n                session.sessionContext.isReadOnly = Boolean.TRUE;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 6,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreRAFile.java",
    "startLineNumber": 137,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreInJar.java",
    "startLineNumber": 65,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreInJar.java",
    "startLineNumber": 83,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreInJar.java",
    "startLineNumber": 110,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreRAFile.java",
    "startLineNumber": 80,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreRAFile.java",
    "startLineNumber": 100,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreRAFile.java",
    "startLineNumber": 178,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreRAFile.java",
    "startLineNumber": 166,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreRAFile.java",
    "startLineNumber": 118,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreRAFile.java",
    "startLineNumber": 154,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreRAFile.java",
    "startLineNumber": 62,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.DATA_FILE_ERROR, t);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobStoreRAFile.java, /hsqldb/src/org/hsqldb/persist/LobStoreInJar.java & more ...",
  "id": 7,
  "numClones": 11,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 644,
    "lines": "return o == null ? 0.0\n                         : ((Number) o).doubleValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 704,
    "lines": "return o == null ? 0.0\n                         : ((Number) o).doubleValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 8,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 267,
    "lines": "if (e.getType() == OpTypes.ROW) {\n            throw Error.error(ErrorCode.X_42564);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 237,
    "lines": "if (e.getType() == OpTypes.ROW) {\n            throw Error.error(ErrorCode.X_42564);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QuerySpecification.java, /hsqldb/src/org/hsqldb/QuerySpecification.java",
  "id": 9,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1524,
    "lines": "nodes[2].dataType =\n                        ((NumberType) nodes[2].dataType).getIntegralType();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1696,
    "lines": "nodes[2].dataType =\n                    ((NumberType) nodes[2].dataType).getIntegralType();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 10,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 857,
    "lines": "java.sql.Timestamp value = new java.sql.Timestamp(millis);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 906,
    "lines": "java.sql.Timestamp value = new java.sql.Timestamp(millis);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 11,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 639,
    "lines": "return o == null ? 0\n                         : ((Number) o).longValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 574,
    "lines": "return o == null ? 0\n                         : ((Number) o).longValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
  "id": 12,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 438,
    "lines": "assertEquals(\"Statement <\" + sql + \"> returned wrong value.\",\n                         expectedTrees[rowCount], results.getString(2));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 210,
    "lines": "assertEquals(\"Statement <\" + sql + \"> returned wrong value.\",\n                         expectedTrees[rowCount], results.getString(2));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSubselect.java, /hsqldb/src/org/hsqldb/test/TestSubselect.java",
  "id": 13,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3539,
    "lines": "addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"UDT_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"MAXIMUM_CARDINALITY\", CARDINAL_NUMBER);\n            addColumn(t, \"DTD_IDENTIFIER\", SQL_IDENTIFIER);\n            addColumn(t, \"DECLARED_DATA_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"DECLARED_NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"DECLARED_NUMERIC_SCALE\", CARDINAL_NUMBER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5750,
    "lines": "addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);          //\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);        //\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4266,
    "lines": "addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4266,
    "lines": "addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"UDT_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"MAXIMUM_CARDINALITY\", CARDINAL_NUMBER);\n            addColumn(t, \"DTD_IDENTIFIER\", SQL_IDENTIFIER);\n            addColumn(t, \"DECLARED_DATA_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"DECLARED_NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"DECLARED_NUMERIC_SCALE\", CARDINAL_NUMBER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7844,
    "lines": "addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3364,
    "lines": "addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 14,
  "numClones": 6,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Charset.java",
    "startLineNumber": 259,
    "lines": "if (ch > ranges[i][1]) {\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Charset.java",
    "startLineNumber": 237,
    "lines": "if (ch > ranges[i][1]) {\n                    continue;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/Charset.java, /hsqldb/src/org/hsqldb/types/Charset.java",
  "id": 15,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 1028,
    "lines": "Table table =\n                        session.database.schemaManager.getTable(session,\n                            name.name, name.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 961,
    "lines": "Table table =\n                        session.database.schemaManager.getTable(session,\n                            name.name, name.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 873,
    "lines": "Table table =\n                        session.database.schemaManager.getTable(session,\n                            name.name, name.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 993,
    "lines": "Table table =\n                        session.database.schemaManager.getTable(session,\n                            name.name, name.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 921,
    "lines": "Table table =\n                        session.database.schemaManager.getTable(session,\n                            name.name, name.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 1009,
    "lines": "Table table =\n                        session.database.schemaManager.getTable(session,\n                            name.name, name.schema.name);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementCommand.java & more ...",
  "id": 16,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 227,
    "lines": "if (node.nLeft == null || !node.nLeft.isInMemory()) {\n            node.nLeft         = findNode(store, node.iLeft);\n            node.nLeft.nParent = node;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 183,
    "lines": "if (node.nLeft == null || !node.nLeft.isInMemory()) {\n            node.nLeft         = findNode(store, node.iLeft);\n            node.nLeft.nParent = node;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
  "id": 17,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 307,
    "lines": "boolean mode = ((Boolean) parameters[0]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 618,
    "lines": "boolean mode = ((Boolean) parameters[0]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 753,
    "lines": "boolean mode = ((Boolean) parameters[0]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 393,
    "lines": "boolean mode = ((Boolean) parameters[0]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 655,
    "lines": "boolean mode = ((Boolean) parameters[0]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 615,
    "lines": "boolean mode = ((Boolean) parameters[0]).booleanValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementCommand.java & more ...",
  "id": 18,
  "numClones": 6,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 383,
    "lines": "if (reportProgress && (i + 1) % 10000 == 0) {\n                System.out.println(\"insert \" + (i + 1) + \" : \"\n                                   + sw.elapsedTime());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 463,
    "lines": "if (reportProgress && (i + 1) % 10000 == 0) {\n                System.out.println(\"insert \" + (i + 1) + \" : \"\n                                   + sw.elapsedTime());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java",
  "id": 19,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2215,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3129,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 648,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7522,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 554,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4\n            }, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 20,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 203,
    "lines": "{\n                Object[] list = session.rowActionList.getArray();\n\n                mergeTransaction(list, 0, limit, session.actionTimestamp);\n                finaliseRows(session, list, 0, limit);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 151,
    "lines": "{\n                Object[] list = session.rowActionList.getArray();\n\n                mergeTransaction(list, 0, limit, session.actionTimestamp);\n                finaliseRows(session, list, 0, limit);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java, /hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
  "id": 21,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobType.java",
    "startLineNumber": 156,
    "lines": "/** @todo - implement */\n    public Object convertToTypeLimits(SessionInterface session, Object a) {\n        return a;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BooleanType.java",
    "startLineNumber": 141,
    "lines": "public Object convertToTypeLimits(SessionInterface session, Object a) {\n        return a;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/OtherType.java",
    "startLineNumber": 129,
    "lines": "public Object convertToTypeLimits(SessionInterface session, Object a) {\n        return a;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobType.java, /hsqldb/src/org/hsqldb/types/BooleanType.java & more ...",
  "id": 22,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1543,
    "lines": "if (columnIndexes == null || columnIndexes.length == 0) {\n            throw JDBCUtil.invalidArgument(\"columnIndexes\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1351,
    "lines": "if (columnIndexes == null || columnIndexes.length == 0) {\n            throw JDBCUtil.invalidArgument(\"columnIndexes\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
  "id": 23,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
    "startLineNumber": 702,
    "lines": "public synchronized void setWritable(JDBCResultSet result, int index) {\n\n        isWritable = true;\n        resultSet  = result;\n        colIndex   = index;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java",
    "startLineNumber": 355,
    "lines": "public synchronized void setWritable(JDBCResultSet result, int index) {\n\n        isWritable = true;\n        resultSet  = result;\n        colIndex   = index;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java",
  "id": 24,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java",
    "startLineNumber": 236,
    "lines": "return (previousEnd < 1) ? s\n                                 : (sb.toString() + s.substring(previousEnd));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java",
    "startLineNumber": 284,
    "lines": "return (previousEnd < 1) ? s\n                                 : (sb.toString() + s.substring(previousEnd));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java, /hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java",
  "id": 25,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/OtherType.java",
    "startLineNumber": 58,
    "lines": "public int displaySize() {\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobType.java",
    "startLineNumber": 59,
    "lines": "public int displaySize() {\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 89,
    "lines": "public int displaySize() {\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 90,
    "lines": "public int displaySize() {\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobType.java",
    "startLineNumber": 58,
    "lines": "public int displaySize() {\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/OtherType.java, /hsqldb/src/org/hsqldb/types/ClobType.java & more ...",
  "id": 26,
  "numClones": 5,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 659,
    "lines": "for (int i = 0; i < targetRangeVariables.length; i++) {\n                    sb.append(targetRangeVariables[i].describe(session,\n                            blanks)).append('\\n');\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 643,
    "lines": "for (int i = 0; i < targetRangeVariables.length; i++) {\n                    sb.append(targetRangeVariables[i].describe(session,\n                            blanks)).append('\\n');\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 683,
    "lines": "for (int i = 0; i < targetRangeVariables.length; i++) {\n                    sb.append(targetRangeVariables[i].describe(session,\n                            blanks)).append('\\n');\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDMQL.java, /hsqldb/src/org/hsqldb/StatementDMQL.java & more ...",
  "id": 27,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3679,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (i > 0) {\n                sb.append(',');\n            }\n\n            sb.append(nodes[i].getSQL());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 321,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    if (i > 0) {\n                        sb.append(',');\n                    }\n\n                    sb.append(nodes[i].getSQL());\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 335,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    if (i > 0) {\n                        sb.append(',');\n                    }\n\n                    sb.append(nodes[i].getSQL());\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 351,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    if (i > 0) {\n                        sb.append(',');\n                    }\n\n                    sb.append(nodes[i].getSQL());\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/Expression.java & more ...",
  "id": 28,
  "numClones": 4,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 406,
    "lines": "/**\n     * add a list of actions to the end of queue\n     */\n    void addToCommittedQueue(Session session, Object[] list) {\n\n        synchronized (committedTransactionTimestamps) {\n\n            // add the txList according to commit timestamp\n            committedTransactions.addLast(list);\n\n            // get session commit timestamp\n            committedTransactionTimestamps.addLast(session.actionTimestamp);\n/* debug 190\n            if (committedTransactions.size() > 64) {\n                System.out.println(\"******* excessive transaction queue\");\n            }\n// debug 190 */\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 636,
    "lines": "/**\n     * add a list of actions to the end of queue\n     */\n    void addToCommittedQueue(Session session, Object[] list) {\n\n        synchronized (committedTransactionTimestamps) {\n\n            // add the txList according to commit timestamp\n            committedTransactions.addLast(list);\n\n            // get session commit timestamp\n            committedTransactionTimestamps.addLast(session.actionTimestamp);\n/* debug 190\n            if (committedTransactions.size() > 64) {\n                System.out.println(\"******* excessive transaction queue\");\n            }\n// debug 190 */\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 29,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java",
    "startLineNumber": 243,
    "lines": "catch (Throwable t) {\n            database.logger.logWarningEvent(JVM_ERROR, t);\n\n            IOException io = JavaSystem.toIOException(t);\n\n            throw io;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java",
    "startLineNumber": 158,
    "lines": "catch (Throwable t) {\n            database.logger.logWarningEvent(JVM_ERROR, t);\n\n            IOException io = JavaSystem.toIOException(t);\n\n            throw io;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java",
    "startLineNumber": 226,
    "lines": "catch (Throwable t) {\n            database.logger.logWarningEvent(JVM_ERROR, t);\n\n            IOException io = JavaSystem.toIOException(t);\n\n            throw io;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java",
    "startLineNumber": 292,
    "lines": "catch (Throwable t) {\n            database.logger.logWarningEvent(JVM_ERROR, t);\n\n            IOException io = JavaSystem.toIOException(t);\n\n            throw io;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java",
    "startLineNumber": 308,
    "lines": "catch (Throwable t) {\n            database.logger.logWarningEvent(JVM_ERROR, t);\n\n            IOException io = JavaSystem.toIOException(t);\n\n            throw io;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java",
    "startLineNumber": 324,
    "lines": "catch (Throwable t) {\n            database.logger.logWarningEvent(JVM_ERROR, t);\n\n            IOException io = JavaSystem.toIOException(t);\n\n            throw io;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java",
    "startLineNumber": 260,
    "lines": "catch (Throwable t) {\n            database.logger.logWarningEvent(JVM_ERROR, t);\n\n            IOException io = JavaSystem.toIOException(t);\n\n            throw io;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java, /hsqldb/src/org/hsqldb/persist/RAFileNIO.java & more ...",
  "id": 30,
  "numClones": 7,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3619,
    "lines": "if (type.isDistinctType() || type.isDomainType()\n                        || !type.isArrayType()) {\n                    continue;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3731,
    "lines": "if (type.isDistinctType() || type.isDomainType()\n                        || !type.isArrayType()) {\n                    continue;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 31,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1318,
    "lines": "try {\n                latch.await();\n            } catch (InterruptedException e) {\n                abortTransaction = true;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1372,
    "lines": "try {\n                    latch.await();\n                } catch (InterruptedException e) {\n                    abortTransaction = true;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 32,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1532,
    "lines": "data[0] = Type.SQL_INTEGER.convertToType(session, data[0],\n                        nodes[0].getDataType());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1796,
    "lines": "data[0] = Type.SQL_INTEGER.convertToType(session, data[0],\n                        nodes[0].getDataType());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 33,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2798,
    "lines": "if (id == null) {\n                    id = (Number) identitySequence.getValueObject();\n                    data[identityColumn] = id;\n                } else {\n                    identitySequence.userUpdate(id.longValue());\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2840,
    "lines": "if (id == null) {\n                id = (Number) identitySequence.getValueObject();\n                data[identityColumn] = id;\n            } else {\n                identitySequence.userUpdate(id.longValue());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 34,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2946,
    "lines": "Constraint c =\n                    new Constraint(constName, set,\n                                   SchemaObject.ConstraintTypes.PRIMARY_KEY);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2713,
    "lines": "Constraint c =\n                new Constraint(constName, set,\n                               SchemaObject.ConstraintTypes.PRIMARY_KEY);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3068,
    "lines": "Constraint c = new Constraint(\n                        constName, set,\n                        SchemaObject.ConstraintTypes.PRIMARY_KEY);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 35,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 1158,
    "lines": "database.nameManager.newAutoName(\"CT\",\n                table.getSchemaName(), table.getName(),\n                SchemaObject.CONSTRAINT)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3715,
    "lines": "database.nameManager.newAutoName(\"CT\",\n                    table.getSchemaName(), table.getName(),\n                    SchemaObject.CONSTRAINT)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3087,
    "lines": "database.nameManager.newAutoName(\"CT\",\n                                table.getSchemaName(), table.getName(),\n                                SchemaObject.CONSTRAINT)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3645,
    "lines": "database.nameManager.newAutoName(\"CT\",\n                    table.getSchemaName(), table.getName(),\n                    SchemaObject.CONSTRAINT)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3121,
    "lines": "database.nameManager.newAutoName(\"CT\",\n                                table.getSchemaName(), table.getName(),\n                                SchemaObject.CONSTRAINT)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3161,
    "lines": "database.nameManager.newAutoName(\"CT\",\n                                table.getSchemaName(), table.getName(),\n                                SchemaObject.CONSTRAINT)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 36,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 607,
    "lines": "if (map.containsKey(name.name)) {\n            throw Error.error(ErrorCode.X_28503, name.name);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 586,
    "lines": "if (map.containsKey(name.name)) {\n            throw Error.error(ErrorCode.X_28503, name.name);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java, /hsqldb/src/org/hsqldb/rights/GranteeManager.java",
  "id": 37,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4921,
    "lines": "while (true) {\n            checkIsSimpleName();\n            granteeList.add(token.tokenString);\n            read();\n\n            if (token.tokenType == Tokens.COMMA) {\n                read();\n            } else {\n                break;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4820,
    "lines": "while (true) {\n            checkIsSimpleName();\n            granteeList.add(token.tokenString);\n            read();\n\n            if (token.tokenType == Tokens.COMMA) {\n                read();\n            } else {\n                break;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 38,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2031,
    "lines": "try {\n                    row[check_clause] = constraint.getCheckSQL();\n                } catch (Exception e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1998,
    "lines": "try {\n                    row[check_clause] = constraint.getCheckSQL();\n                } catch (Exception e) {}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 39,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementResultUpdate.java",
    "startLineNumber": 209,
    "lines": "switch (type) {\n\n            case StatementTypes.CALL : {\n                break;\n            }\n            case StatementTypes.INSERT : {\n                session.getGrantee().checkInsert(targetTable,\n                                                 insertCheckColumns);\n\n                break;\n            }\n            case StatementTypes.SELECT_CURSOR :\n                break;\n\n            case StatementTypes.DELETE_WHERE : {\n                session.getGrantee().checkDelete(targetTable);\n\n                break;\n            }\n            case StatementTypes.UPDATE_WHERE : {\n                session.getGrantee().checkUpdate(targetTable,\n                                                 updateCheckColumns);\n\n                break;\n            }\n            case StatementTypes.MERGE : {\n                session.getGrantee().checkInsert(targetTable,\n                                                 insertCheckColumns);\n                session.getGrantee().checkUpdate(targetTable,\n                                                 updateCheckColumns);\n\n                break;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 437,
    "lines": "switch (type) {\n\n            case StatementTypes.CALL : {\n                break;\n            }\n            case StatementTypes.INSERT : {\n                session.getGrantee().checkInsert(targetTable,\n                                                 insertCheckColumns);\n\n                break;\n            }\n            case StatementTypes.SELECT_CURSOR :\n                break;\n\n            case StatementTypes.DELETE_WHERE : {\n                session.getGrantee().checkDelete(targetTable);\n\n                break;\n            }\n            case StatementTypes.UPDATE_WHERE : {\n                session.getGrantee().checkUpdate(targetTable,\n                                                 updateCheckColumns);\n\n                break;\n            }\n            case StatementTypes.MERGE : {\n                session.getGrantee().checkInsert(targetTable,\n                                                 insertCheckColumns);\n                session.getGrantee().checkUpdate(targetTable,\n                                                 updateCheckColumns);\n\n                break;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementResultUpdate.java, /hsqldb/src/org/hsqldb/StatementDMQL.java",
  "id": 40,
  "numClones": 2,
  "cloneSize": 28
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 706,
    "lines": "{\n                    throw Error.error(ErrorCode.X_42608,\n                                      Tokens.T_READS + ' ' + Tokens.T_SQL);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 675,
    "lines": "{\n                        throw Error.error(ErrorCode.X_42608,\n                                          Tokens.T_READS + ' ' + Tokens.T_SQL);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 41,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 428,
    "lines": "{\n            if (n != null) {\n                n = n.setParent(store, null);\n            }\n\n            store.setAccessor(index, n);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 449,
    "lines": "{\n            if (n != null) {\n                n = n.setParent(store, null);\n            }\n\n            store.setAccessor(index, n);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVL.java",
    "startLineNumber": 214,
    "lines": "{\n            if (n != null) {\n                n = n.setParent(store, null);\n            }\n\n            store.setAccessor(index, n);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java, /hsqldb/src/org/hsqldb/index/NodeAVLDisk.java & more ...",
  "id": 42,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1183,
    "lines": "return new TimeData((int) (millis / 1000), 0,\n                                    ((TimeData) a).getZone());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1215,
    "lines": "return new TimeData((int) (millis / 1000), 0,\n                                    ((TimeData) a).getZone());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 43,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6599,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 4, 5, 6\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3288,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 4, 5, 6\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3385,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 4, 5, 6\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7869,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 4, 5, 6\n            }, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 44,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 491,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ').append(Tokens.UNIQUE)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 504,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ').append(Tokens.UNIQUE)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 497,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ').append(Tokens.UNIQUE)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java & more ...",
  "id": 45,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 1593,
    "lines": "if (!(a instanceof BigDecimal)) {\n                    a = convertToDefaultType(null, a);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 1536,
    "lines": "if (!(a instanceof BigDecimal)) {\n                    a = convertToDefaultType(null, a);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/NumberType.java, /hsqldb/src/org/hsqldb/types/NumberType.java",
  "id": 46,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 512,
    "lines": "mask           = ((source & 0xff) << 8) >>> shift;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 546,
    "lines": "mask           = ((source & 0xff) << 8) >>> shift;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 586,
    "lines": "mask           = ((source & 0xff) << 8) >>> shift;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BitMap.java, /hsqldb/src/org/hsqldb/map/BitMap.java & more ...",
  "id": 47,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 692,
    "lines": "{\n                        if (targetTable.colDefaults[columnMap[i]] == null\n                                && targetTable.identityColumn\n                                   != columnMap[i]) {\n                            throw Error.error(ErrorCode.X_42544);\n                        }\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 735,
    "lines": "{\n                    if (targetTable.colDefaults[columnMap[i]] == null\n                            && targetTable.identityColumn != columnMap[i]) {\n                        throw Error.error(ErrorCode.X_42544);\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDML.java",
  "id": 48,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6285,
    "lines": "while ((i = isr.read(readBfr)) > -1)\n                sWriter.write(readBfr, 0, i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6324,
    "lines": "while ((i = isr.read(readBfr)) > -1) sWriter.write(readBfr, 0, i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 49,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 341,
    "lines": "(MemoryWatcher.max / 1024) + \";\"\n                         + (MemoryWatcher.min / 1024) + \";\"\n                         + failed_transactions + \";\" + rate + \"\\n\""
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 352,
    "lines": "(MemoryWatcher.max / 1024) + \";\"\n                          + (MemoryWatcher.min / 1024) + \";\"\n                          + failed_transactions + \";\" + rate + \"\\n\""
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 50,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 214,
    "lines": "if (firstindex < 0) {\n            firstindex = list.length - 1;\n\n            if (endindex == 0) {\n                endindex = list.length;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 162,
    "lines": "if (firstindex < 0) {\n            firstindex = list.length - 1;\n\n            if (endindex == 0) {\n                endindex = list.length;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java, /hsqldb/src/org/hsqldb/lib/LongDeque.java",
  "id": 51,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 96,
    "lines": "int limit = session.rowActionList.size();\n\n            // new actionTimestamp used for commitTimestamp\n            session.actionTimestamp         = getNextGlobalChangeTimestamp();\n            session.transactionEndTimestamp = session.actionTimestamp;\n\n            endTransaction(session);\n\n            for (int i = 0; i < limit; i++) {\n                RowAction action = (RowAction) session.rowActionList.get(i);\n\n                action.commit(session);\n            }\n\n            adjustLobUsage(session);\n            persistCommit(session);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 120,
    "lines": "int limit = session.rowActionList.size();\n\n            // new actionTimestamp used for commitTimestamp\n            session.actionTimestamp         = getNextGlobalChangeTimestamp();\n            session.transactionEndTimestamp = session.actionTimestamp;\n\n            endTransaction(session);\n\n            for (int i = 0; i < limit; i++) {\n                RowAction action = (RowAction) session.rowActionList.get(i);\n\n                action.commit(session);\n            }\n\n            adjustLobUsage(session);\n            persistCommit(session);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
  "id": 52,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 314,
    "lines": "public String getString(int i1, int i2) {\n        return vrb.getString(this, i1, i2);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 149,
    "lines": "public String getString(int i1, int i2) {\n        return vrb.getString(this, i1, i2);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java, /hsqldb/src/org/hsqldb/lib/tar/RB.java",
  "id": 53,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFile.java",
    "startLineNumber": 216,
    "lines": "if (readLength > buffer.length) {\n            readLength = buffer.length;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileInJar.java",
    "startLineNumber": 104,
    "lines": "if (readLength > buffer.length) {\n            readLength = buffer.length;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RAFile.java, /hsqldb/src/org/hsqldb/persist/RAFileInJar.java",
  "id": 54,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 363,
    "lines": "if (result.generateKeys == ResultConstants\n                        .RETURN_GENERATED_KEYS_COL_NAMES || result\n                        .generateKeys == ResultConstants\n                        .RETURN_GENERATED_KEYS_COL_INDEXES) {\n                    result.generatedMetaData = new ResultMetaData(in);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 388,
    "lines": "if (result.generateKeys == ResultConstants\n                        .RETURN_GENERATED_KEYS_COL_NAMES || result\n                        .generateKeys == ResultConstants\n                        .RETURN_GENERATED_KEYS_COL_INDEXES) {\n                    result.generatedMetaData = new ResultMetaData(in);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/Result.java, /hsqldb/src/org/hsqldb/result/Result.java",
  "id": 55,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java",
    "startLineNumber": 132,
    "lines": "System.out.println(\"Match? \" + (rs.getInt(\"c\") > 0));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java",
    "startLineNumber": 170,
    "lines": "System.out.println(\"Match? \" + (rs.getInt(\"c\") > 0));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java, /hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java",
  "id": 56,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 167,
    "lines": "public String getString(String s1, int i2, int i3) {\n        return vrb.getString(this, s1, i2, i3);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 332,
    "lines": "public String getString(String s1, int i2, int i3) {\n        return vrb.getString(this, s1, i2, i3);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/RB.java, /hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
  "id": 57,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2324,
    "lines": "for (int i = 0; i < specifics.length; i++) {\n                        removeSchemaObject(specifics[i].getSpecificName());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2308,
    "lines": "for (int i = 0; i < specifics.length; i++) {\n                        removeSchemaObject(specifics[i].getSpecificName());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 58,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1375,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = nodes[0].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2844,
    "lines": "if (nodes[1].dataType == null) {\n                        nodes[1].dataType = nodes[0].dataType;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2251,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = nodes[0].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1401,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = nodes[0].dataType;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 59,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1964,
    "lines": "if (s.length() > 43) {\n            s = s.substring(0, 40) + \"...\";\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1169,
    "lines": "if (s.length() > 43) {\n            s = s.substring(0, 40) + \"...\";\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java",
  "id": 60,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 489,
    "lines": "Table mainT = database.schemaManager.getUserTable(session,\n                    c.core.mainTable.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 482,
    "lines": "Table mainT = database.schemaManager.getUserTable(session,\n                    c.core.mainTable.getName());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 61,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1684,
    "lines": "rangeGroups[0] = context == null ? routine\n                                         : context;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1848,
    "lines": "rangeGroups[0] = context == null ? routine\n                                         : context;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1048,
    "lines": "rangeGroups[0] = context == null ? routine\n                                         : context;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java & more ...",
  "id": 62,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 820,
    "lines": "String aString = new String(ArrayUtil.byteArrayToChars(aBytes),\n                                            0, (int) aLimit);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 999,
    "lines": "String aString = new String(ArrayUtil.byteArrayToChars(aBytes), 0,\n                                        (int) aLimit);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 63,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 485,
    "lines": "if (!targets[i].getDataType().canBeAssignedFrom(\n                    expression.getNodeDataType(i))) {\n                throw Error.parseError(ErrorCode.X_42561, null,\n                                       scanner.getLineNumber());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 422,
    "lines": "if (!targets[i].getDataType().canBeAssignedFrom(\n                    expression.getNodeDataType(i))) {\n                throw Error.parseError(ErrorCode.X_42561, null,\n                                       scanner.getLineNumber());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java",
  "id": 64,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 818,
    "lines": "if (offset > end || end < 0) {\n\n            // return zero length data\n            offset = 0;\n            end    = 0;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 613,
    "lines": "if (offset > end || end < 0) {\n\n            // return zero length data\n            offset = 0;\n            end    = 0;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 455,
    "lines": "if (offset > end || end < 0) {\n\n            // return zero length data\n            offset = 0;\n            end    = 0;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java & more ...",
  "id": 65,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 926,
    "lines": "boolean isSystem =\n            ((Integer) metaData[HsqlProperties.indexType]).intValue()\n            == SYSTEM_PROPERTY;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 891,
    "lines": "boolean isSystem =\n            ((Integer) metaData[HsqlProperties.indexType]).intValue()\n            == SYSTEM_PROPERTY;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
  "id": 66,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/sample/TriggerSample.java",
    "startLineNumber": 332,
    "lines": "sb.append(trn);\n        sb.append(' ');\n        sb.append(getWhenSpec(typ));\n        sb.append(' ');\n        sb.append(getOperationSpec(typ));\n        sb.append(\" ON \");\n        sb.append(tab);\n        sb.append(' ');\n        sb.append(getForEachSpec(typ));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/sample/TriggerSample.java",
    "startLineNumber": 356,
    "lines": "sb.append(trn);\n        sb.append(' ');\n        sb.append(getWhenSpec(typ));\n        sb.append(' ');\n        sb.append(getOperationSpec(typ));\n        sb.append(\" ON \");\n        sb.append(tab);\n        sb.append(' ');\n        sb.append(getForEachSpec(typ));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/sample/TriggerSample.java, /hsqldb/src/org/hsqldb/sample/TriggerSample.java",
  "id": 67,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestMultiInsert.java",
    "startLineNumber": 143,
    "lines": "catch (Exception e) {\n            e.printStackTrace();\n            System.out.println(\"TestSql.tearDown() error: \" + e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBug785429.java",
    "startLineNumber": 154,
    "lines": "catch (Exception e) {\n            e.printStackTrace();\n            System.out.println(\"TestSql.tearDown() error: \" + e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSql.java",
    "startLineNumber": 917,
    "lines": "catch (Exception e) {\n            e.printStackTrace();\n            System.out.println(\"TestSql.tearDown() error: \" + e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
    "startLineNumber": 584,
    "lines": "catch (Exception e) {\n            e.printStackTrace();\n            System.out.println(\"TestSql.tearDown() error: \" + e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestMerge.java",
    "startLineNumber": 398,
    "lines": "catch (Exception e) {\n            e.printStackTrace();\n            System.out.println(\"TestSql.tearDown() error: \" + e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHTTPKeepAlive.java",
    "startLineNumber": 107,
    "lines": "catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.out.println(\"TestSql.tearDown() error: \" + e.getMessage());\n\t\t}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestMultiInsert.java, /hsqldb/src/org/hsqldb/test/TestBug785429.java & more ...",
  "id": 68,
  "numClones": 6,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 197,
    "lines": "if (typeCode == other.typeCode) {\n            return precision >= other.precision ? this\n                                                : other;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 131,
    "lines": "if (typeCode == other.typeCode) {\n            return precision >= other.precision ? this\n                                                : other;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 236,
    "lines": "if (typeCode == other.typeCode) {\n            return precision >= other.precision ? this\n                                                : other;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BinaryType.java, /hsqldb/src/org/hsqldb/types/BitType.java & more ...",
  "id": 69,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1312,
    "lines": "seconds = ((TimestampData) data[0]).getSeconds();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1306,
    "lines": "seconds = ((TimestampData) data[0]).getSeconds();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 70,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/PgType.java",
    "startLineNumber": 353,
    "lines": "try {\n                    o = hType.convertToType(session, o, Type.SQL_VARCHAR);\n                } catch (HsqlException e) {\n                    PgType.throwError(e);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/PgType.java",
    "startLineNumber": 370,
    "lines": "try {\n                    o = hType.convertToType(session, o, Type.SQL_VARCHAR);\n                } catch (HsqlException e) {\n                    PgType.throwError(e);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/PgType.java, /hsqldb/src/org/hsqldb/server/PgType.java",
  "id": 71,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1425,
    "lines": "c.getConstraintType() == SchemaObject.ConstraintTypes.MAIN\n                    || c.getConstraintType()\n                       == SchemaObject.ConstraintTypes.FOREIGN_KEY"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1337,
    "lines": "c.getConstraintType() == SchemaObject\n                    .ConstraintTypes.MAIN || c\n                    .getConstraintType() == SchemaObject.ConstraintTypes\n                    .FOREIGN_KEY"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 72,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java",
    "startLineNumber": 333,
    "lines": "mName.getText() != null\n                        && mName.getText().trim().length() != 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
    "startLineNumber": 317,
    "lines": "mName.getText() != null\n                        && mName.getText().trim().length() != 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java, /hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
  "id": 73,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 369,
    "lines": "ColumnSchema column  = getColumn(j);\n            String       colname = column.getName().statementName;\n            Type         type    = column.getDataType();\n\n            if (j > 0) {\n                sb.append(',');\n            }\n\n            sb.append(colname);\n            sb.append(' ');\n            sb.append(type.getTypeDefinition());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 644,
    "lines": "ColumnSchema column  = getColumn(j);\n            String       colname = column.getName().statementName;\n            Type         type    = column.getDataType();\n\n            if (j > 0) {\n                sb.append(',');\n            }\n\n            sb.append(colname);\n            sb.append(' ');\n            sb.append(type.getTypeDefinition());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 74,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1621,
    "lines": "public void clearStructures(Session session) {\n        session.sessionContext.clearStructures(this);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 819,
    "lines": "public void clearStructures(Session session) {\n        session.sessionContext.clearStructures(this);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDMQL.java",
  "id": 75,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2770,
    "lines": "{\n\n        Row row = (Row) store.getNewCachedObject(session, data, false);\n\n        store.indexRow(session, row);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2781,
    "lines": "{\n\n        Row row = (Row) store.getNewCachedObject(session, data, false);\n\n        store.indexRow(session, row);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 76,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 394,
    "lines": "throw Error.error(t, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_DataFileCache_open, new Object[] {\n                t.toString(), dataFileName\n            });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCacheSession.java",
    "startLineNumber": 91,
    "lines": "throw Error.error(t, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_DataFileCache_open, new Object[] {\n                t.toString(), dataFileName\n            });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 499,
    "lines": "throw Error.error(t, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_DataFileCache_open, new Object[] {\n                t.toString(), dataFileName\n            });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java, /hsqldb/src/org/hsqldb/persist/DataFileCacheSession.java & more ...",
  "id": 77,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 105,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 199,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 150,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 174,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 129,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 284,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 127,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 115,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 174,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 158,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 224,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 100,
    "lines": "RowAction action = (RowAction) session.rowActionList.get(i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerCommon.java & more ...",
  "id": 78,
  "numClones": 12,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5645,
    "lines": "addColumn(t, \"SPECIFIC_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SPECIFIC_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SPECIFIC_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"ROUTINE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"ROUTINE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"ROUTINE_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_NAME\", SQL_IDENTIFIER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5056,
    "lines": "addColumn(t, \"SPECIFIC_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SPECIFIC_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SPECIFIC_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"ROUTINE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"ROUTINE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"ROUTINE_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_NAME\", SQL_IDENTIFIER);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 79,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
    "startLineNumber": 117,
    "lines": "ps = c.prepareStatement(s, new String[]{ \"I\", \"C\" });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
    "startLineNumber": 231,
    "lines": "ps = c.prepareStatement(s, new String[]{ \"I\", \"C\" });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java, /hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
  "id": 80,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1741,
    "lines": "cal.get(Calendar.MONTH) + cal.get(Calendar.YEAR) * 12"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1722,
    "lines": "cal.get(Calendar.MONTH) + cal.get(Calendar.YEAR) * 12"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 81,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 639,
    "lines": "if (isObjectValue) {\n            objectValueTable[lookup] = objectValue;\n        } else if (isIntValue) {\n            intValueTable[lookup] = (int) longValue;\n        } else if (isLongValue) {\n            longValueTable[lookup] = longValue;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 444,
    "lines": "if (isObjectValue) {\n            objectValueTable[lookup] = objectValue;\n        } else if (isIntValue) {\n            intValueTable[lookup] = (int) longValue;\n        } else if (isLongValue) {\n            longValueTable[lookup] = longValue;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 82,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 386,
    "lines": "switch (token.tokenType) {\n\n                    case Tokens.ROUTINE :\n                    case Tokens.PROCEDURE :\n                    case Tokens.FUNCTION :\n                        read();\n                        break;\n\n                    default :\n                        throw unexpectedToken();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4714,
    "lines": "switch (token.tokenType) {\n\n                    case Tokens.ROUTINE :\n                    case Tokens.PROCEDURE :\n                    case Tokens.FUNCTION :\n                        read();\n                        break;\n\n                    default :\n                        throw unexpectedToken();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 83,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1129,
    "lines": "if (extraUpdateTables != null) {\n            for (int i = 0; i < extraUpdateTables.size(); i++) {\n                Table currentTable = (Table) extraUpdateTables.get(i);\n\n                currentTable.fireTriggers(session, Trigger.UPDATE_AFTER,\n                                          navigator);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1387,
    "lines": "if (extraUpdateTables != null) {\n            for (int i = 0; i < extraUpdateTables.size(); i++) {\n                Table currentTable = (Table) extraUpdateTables.get(i);\n\n                currentTable.fireTriggers(session, Trigger.UPDATE_AFTER,\n                                          navigator);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 84,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 2287,
    "lines": "if (cost < Index.minimumSelectivity) {\n                            cost = Index.minimumSelectivity;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 2254,
    "lines": "if (cost < Index.minimumSelectivity) {\n                    cost = Index.minimumSelectivity;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 2358,
    "lines": "if (cost < Index.minimumSelectivity) {\n            cost = Index.minimumSelectivity;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java & more ...",
  "id": 85,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 644,
    "lines": "((Integer) data[LOBS.BLOCK_COUNT]).intValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1791,
    "lines": "((Integer) data[LOBS.BLOCK_COUNT]).intValue()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 86,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringUtil.java",
    "startLineNumber": 256,
    "lines": "for (int i = 0; i < len; i++) {\n            sb.append(quote);\n            sb.append(s[i]);\n            sb.append(quote);\n\n            if (i + 1 < len) {\n                sb.append(separator);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringUtil.java",
    "startLineNumber": 222,
    "lines": "for (int i = 0; i < len; i++) {\n            sb.append(quote);\n            sb.append(s[i]);\n            sb.append(quote);\n\n            if (i + 1 < len) {\n                sb.append(separator);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringUtil.java",
    "startLineNumber": 274,
    "lines": "for (int i = 0; i < len; i++) {\n            sb.append(quote);\n            sb.append(s[i]);\n            sb.append(quote);\n\n            if (i + 1 < len) {\n                sb.append(separator);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/StringUtil.java, /hsqldb/src/org/hsqldb/lib/StringUtil.java & more ...",
  "id": 87,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobType.java",
    "startLineNumber": 121,
    "lines": "/** @todo - collation comparison */\n    public int compare(Session session, Object a, Object b) {\n        return compare(session, a, b, OpTypes.EQUAL);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 343,
    "lines": "public int compare(Session session, Object a, Object b) {\n        return compare(session, a, b, OpTypes.EQUAL);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ClobType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 88,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1334,
    "lines": "if (abortTransaction) {\n                rollback(false);\n\n                sessionContext.currentStatement = null;\n\n                return Result.newErrorResult(Error.error(ErrorCode.X_40001));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1308,
    "lines": "if (abortTransaction) {\n                rollback(false);\n\n                sessionContext.currentStatement = null;\n\n                return Result.newErrorResult(Error.error(ErrorCode.X_40001));\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 89,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1731,
    "lines": "Calendar calendar   = cal == null ? session.getCalendar()\n                : cal;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 4822,
    "lines": "Calendar calendar = cal == null ? session.getCalendar()\n                    : cal;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 4929,
    "lines": "Calendar calendar = cal == null ? session.getCalendar()\n                    : cal;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 1349,
    "lines": "Calendar calendar = cal == null ? session.getCalendar()\n                    : cal;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 1409,
    "lines": "Calendar calendar = cal == null ? session.getCalendar()\n                    : cal;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1656,
    "lines": "Calendar calendar   = cal == null ? session.getCalendar()\n                : cal;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1580,
    "lines": "Calendar calendar   = cal == null ? session.getCalendar()\n                : cal;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java & more ...",
  "id": 90,
  "numClones": 7,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2020,
    "lines": "for (int i = length; i < limit; i++) {\n            dataBuffer[i] = 0;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1998,
    "lines": "for (int i = length; i < limit; i++) {\n            dataBuffer[i] = 0;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 91,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 618,
    "lines": "if (maxLogSize > 0 && dbLogWriter.size() > maxLogSize) {\n            database.logger.setCheckpointRequired();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 644,
    "lines": "if (maxLogSize > 0 && dbLogWriter.size() > maxLogSize) {\n            database.logger.setCheckpointRequired();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 659,
    "lines": "if (maxLogSize > 0 && dbLogWriter.size() > maxLogSize) {\n            database.logger.setCheckpointRequired();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 603,
    "lines": "if (maxLogSize > 0 && dbLogWriter.size() > maxLogSize) {\n            database.logger.setCheckpointRequired();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 631,
    "lines": "if (maxLogSize > 0 && dbLogWriter.size() > maxLogSize) {\n            database.logger.setCheckpointRequired();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Log.java, /hsqldb/src/org/hsqldb/persist/Log.java & more ...",
  "id": 92,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/Server.java",
    "startLineNumber": 903,
    "lines": "try {\n            setProperties(p);\n        } catch (Exception e) {\n            throw Error.error(e, ErrorCode.GENERAL_ERROR,\n                              ErrorCode.M_Message_Pair,\n                              new String[]{ \"Failed to set properties\" });\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/Server.java",
    "startLineNumber": 948,
    "lines": "try {\n            setProperties(p);\n        } catch (Exception e) {\n            throw Error.error(e, ErrorCode.GENERAL_ERROR,\n                              ErrorCode.M_Message_Pair,\n                              new String[]{ \"Failed to set properties\" });\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/Server.java, /hsqldb/src/org/hsqldb/server/Server.java",
  "id": 93,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 858,
    "lines": "Object[] data = (Object[]) newData.getNext();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 823,
    "lines": "Object[] data = (Object[]) newData.getNext();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 849,
    "lines": "Object[] data = (Object[]) newData.getNext();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 813,
    "lines": "Object[] data = (Object[]) newData.getNext();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java & more ...",
  "id": 94,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 664,
    "lines": "{\n            Connection conn = DriverManager.getConnection(DBUrl, DBUser,\n                DBPassword);\n\n            return conn;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 756,
    "lines": "{\n            Connection conn = DriverManager.getConnection(DBUrl, DBUser,\n                DBPassword);\n\n            return conn;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 95,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 480,
    "lines": "if (rcParams != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_params_redundant.getString());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 473,
    "lines": "if (rcParams != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_params_redundant.getString());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java, /hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
  "id": 96,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 850,
    "lines": "File   file = new File(database.logger.tempDirectoryPath);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 870,
    "lines": "File file = new File(database.logger.tempDirectoryPath);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Log.java, /hsqldb/src/org/hsqldb/persist/Log.java",
  "id": 97,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Schema.java",
    "startLineNumber": 238,
    "lines": "routine.dataImpact == Routine.NO_SQL\n                    || routine.dataImpact == Routine.CONTAINS_SQL"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaObjectSet.java",
    "startLineNumber": 403,
    "lines": "routine.dataImpact == Routine.NO_SQL\n                            || routine.dataImpact == Routine.CONTAINS_SQL"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Schema.java, /hsqldb/src/org/hsqldb/SchemaObjectSet.java",
  "id": 98,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1655,
    "lines": "Object[] data = (Object[]) navigator.getNext();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1928,
    "lines": "Object[] data = (Object[]) navigator.getNext();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1101,
    "lines": "Object[] data = (Object[]) navigator.getNext();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QuerySpecification.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java & more ...",
  "id": 99,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 916,
    "lines": "if (!set.add(Tokens.NULL) || routine.isProcedure()) {\n                        throw unexpectedToken();\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 897,
    "lines": "if (!set.add(Tokens.NULL) || routine.isProcedure()) {\n                        throw unexpectedToken();\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java",
  "id": 100,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1061,
    "lines": "IntervalSecondData interval =\n                            (IntervalSecondData) t.subtract(session, a, b,\n                                                            null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1072,
    "lines": "IntervalSecondData interval =\n                            (IntervalSecondData) t.subtract(session, a, b,\n                                                            null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 101,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java",
    "startLineNumber": 572,
    "lines": "if (i + 1 < len) {\n                sb.append(',');\n                sb.append(' ');\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCColumnMetaData.java",
    "startLineNumber": 152,
    "lines": "if (i + 1 < len) {\n                sb.append(',');\n                sb.append(' ');\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java, /hsqldb/src/org/hsqldb/jdbc/JDBCColumnMetaData.java",
  "id": 102,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 815,
    "lines": "{\n            writeLockNames =\n                (HsqlName[]) ArrayUtil.toAdjustedArray(writeLockNames,\n                    mainTableName, writeLockNames.length, 1);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3700,
    "lines": "{\n            writeLockNames =\n                (HsqlName[]) ArrayUtil.toAdjustedArray(writeLockNames,\n                    mainTableName, writeLockNames.length, 1);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 103,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 6201,
    "lines": "round == 0 && token.tokenType == Tokens.HOLD"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 6187,
    "lines": "round == 0 && token.tokenType == Tokens.HOLD"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 104,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 338,
    "lines": "Object[] row = (Object[]) array[i];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 353,
    "lines": "Object[] row   = (Object[]) array[i];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java, /hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
  "id": 105,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2335,
    "lines": "part = getTSIToken((String) nodes[0].valueData);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2291,
    "lines": "part               = getTSIToken((String) nodes[0].valueData);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 106,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2008,
    "lines": "row[icat]          = cat;\n        row[ischem]        = schem;\n        row[ipname]        = pName;\n        row[iinput_parms]  = ip;\n        row[ioutput_parms] = op;\n        row[iresult_sets]  = rs;\n        row[iremark]       = remark;\n        row[iptype]        = pType;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2115,
    "lines": "// Do it.\n        row[icat]       = cat;\n        row[ischem]     = schem;\n        row[iname]      = pName;\n        row[icol_name]  = cName;\n        row[icol_type]  = cType;\n        row[idata_type] = dType;\n        row[itype_name] = tName;\n        row[iprec]      = prec;\n        row[ilength]    = len;\n        row[iscale]     = scale;\n        row[iradix]     = radix;\n        row[inullable]  = nullability;\n        row[iremark]    = remark;\n\n        // JDBC 4.0\n        row[icol_default]      = colDefault;\n        row[isql_data_type]    = sqlDataType;\n        row[isql_datetime_sub] = sqlDateTimeSub;\n        row[ichar_octet_len]   = charOctetLength;\n        row[iordinal_position] = ordinalPosition;\n        row[iis_nullable]      = isNullable;\n        row[ispecific_name]    = specificName;\n\n        t.insertSys(session, store, row);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2027,
    "lines": "row[icat]          = cat;\n                row[ischem]        = schem;\n                row[ipname]        = pName;\n                row[iinput_parms]  = ip;\n                row[ioutput_parms] = op;\n                row[iresult_sets]  = rs;\n                row[iremark]       = remark;\n                row[iptype]        = pType;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2147,
    "lines": "row[icat]       = cat;\n                row[ischem]     = schem;\n                row[iname]      = pName;\n                row[icol_name]  = cName;\n                row[icol_type]  = cType;\n                row[idata_type] = dType;\n                row[itype_name] = tName;\n                row[iprec]      = prec;\n                row[ilength]    = len;\n                row[iscale]     = scale;\n                row[iradix]     = radix;\n                row[inullable]  = nullability;\n                row[iremark]    = remark;\n\n                // JDBC 4.0\n                row[icol_default]      = colDefault;\n                row[isql_data_type]    = sqlDataType;\n                row[isql_datetime_sub] = sqlDateTimeSub;\n                row[ichar_octet_len]   = charOctetLength;\n                row[iordinal_position] = ordinalPosition;\n                row[iis_nullable]      = isNullable;\n                row[ispecific_name]    = specificName;\n\n                t.insertSys(session, store, row);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java & more ...",
  "id": 107,
  "numClones": 4,
  "cloneSize": 21
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
    "startLineNumber": 338,
    "lines": "public CachedObject getAccessor(Index key) {\n\n        NodeAVL node = (NodeAVL) accessorList[key.getPosition()];\n\n        if (node == null) {\n            return null;\n        }\n\n        RowAVL row = (RowAVL) get(node.getRow(this), false);\n\n        node                            = row.getNode(key.getPosition());\n        accessorList[key.getPosition()] = node;\n\n        return node;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 323,
    "lines": "public CachedObject getAccessor(Index key) {\n\n        NodeAVL node = (NodeAVL) accessorList[key.getPosition()];\n\n        if (node == null) {\n            return null;\n        }\n\n        RowAVL row = (RowAVL) get(node.getRow(this), false);\n\n        node                            = row.getNode(key.getPosition());\n        accessorList[key.getPosition()] = node;\n\n        return node;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
  "id": 108,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/CodeSwitcher.java",
    "startLineNumber": 401,
    "lines": "if (vSwitches.indexOf(s) == -1) {\n                            vSwitches.addElement(s);\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/CodeSwitcher.java",
    "startLineNumber": 375,
    "lines": "if (vSwitches.indexOf(s) == -1) {\n                            vSwitches.addElement(s);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/CodeSwitcher.java, /hsqldb/src/org/hsqldb/util/CodeSwitcher.java",
  "id": 109,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 181,
    "lines": "/**\n     * <!-- start generic documentation -->\n     * Retrieves the contents of the SQL <code>ARRAY</code> value designated by this\n     * <code>Array</code> object.\n     * This method uses\n     * the specified <code>map</code> for type map customizations\n     * unless the base type of the array does not match a user-defined\n     * type in <code>map</code>, in which case it\n     * uses the standard mapping. This version of the method\n     * <code>getArray</code> uses either the given type map or the standard mapping;\n     * it never uses the type map associated with the connection.\n     * <p>\n     * <strong>Note:</strong> When <code>getArray</code> is used to materialize\n     * a base type that maps to a primitive data type, then it is\n     * implementation-defined whether the array returned is an array of\n     * that primitive data type or an array of <code>Object</code>.\n     *\n     * <!-- end generic documentation -->\n     * <!-- start release-specific documentation -->\n     * <div class=\"ReleaseSpecificDocumentation\">\n     * <h3>HSQLDB-Specific Information:</h3> <p>\n     *\n     * HSQLDB always returns an array of <code>Object</code>.\n     *\n     * </div>\n     * <!-- end release-specific documentation -->\n     *\n     * @param map a <code>java.util.Map</code> object that contains mappings\n     *            of SQL type names to classes in the Java programming language\n     * @return an array in the Java programming language that contains the ordered\n     *         elements of the SQL array designated by this object\n     * @exception SQLException if an error occurs while attempting to\n     *                         access the array\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.2\n     */\n    public Object getArray(java.util.Map<String,\n            Class<?>> map) throws SQLException {\n        return getArray();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 170,
    "lines": "/**\n     * <!-- start generic documentation -->\n     * Retrieves the contents of the SQL <code>ARRAY</code> value designated by this\n     * <code>Array</code> object.\n     * This method uses\n     * the specified <code>map</code> for type map customizations\n     * unless the base type of the array does not match a user-defined\n     * type in <code>map</code>, in which case it\n     * uses the standard mapping. This version of the method\n     * <code>getArray</code> uses either the given type map or the standard mapping;\n     * it never uses the type map associated with the connection.\n     * <p>\n     * <strong>Note:</strong> When <code>getArray</code> is used to materialize\n     * a base type that maps to a primitive data type, then it is\n     * implementation-defined whether the array returned is an array of\n     * that primitive data type or an array of <code>Object</code>.\n     *\n     * <!-- end generic documentation -->\n     * <!-- start release-specific documentation -->\n     * <div class=\"ReleaseSpecificDocumentation\">\n     * <h3>HSQLDB-Specific Information:</h3> <p>\n     *\n     * HSQLDB always returns an array of <code>Object</code>.\n     *\n     * </div>\n     * <!-- end release-specific documentation -->\n     *\n     * @param map a <code>java.util.Map</code> object that contains mappings\n     *            of SQL type names to classes in the Java programming language\n     * @return an array in the Java programming language that contains the ordered\n     *         elements of the SQL array designated by this object\n     * @exception SQLException if an error occurs while attempting to\n     *                         access the array\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.2\n     */\n    public Object getArray(java.util.Map<String,\n            Class<?>> map) throws SQLException {\n        return getArray();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
  "id": 110,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Grid.java",
    "startLineNumber": 602,
    "lines": "{\n        return (((String[]) (vData.elementAt(y)))[x]);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Grid.java",
    "startLineNumber": 591,
    "lines": "{\n        return (((String[]) (vData.elementAt(y)))[x]);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Grid.java, /hsqldb/src/org/hsqldb/util/Grid.java",
  "id": 111,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
    "startLineNumber": 203,
    "lines": "if (newcount > buf.length) {\n            buf = copyOf(buf, Math.max(buf.length << 1, newcount));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
    "startLineNumber": 133,
    "lines": "if (newcount > buf.length) {\n            buf = copyOf(buf, Math.max(buf.length << 1, newcount));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
    "startLineNumber": 165,
    "lines": "if (newcount > buf.length) {\n            buf = copyOf(buf, Math.max(buf.length << 1, newcount));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
    "startLineNumber": 138,
    "lines": "if (newcount > buf.length) {\n            buf = copyOf(buf, Math.max(buf.length << 1, newcount));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
    "startLineNumber": 170,
    "lines": "if (newcount > buf.length) {\n            buf = copyOf(buf, Math.max(buf.length << 1, newcount));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java, /hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java & more ...",
  "id": 112,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 313,
    "lines": "java.lang.Class<?> iface"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7003,
    "lines": "java.lang.Class<?> iface"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPool.java",
    "startLineNumber": 197,
    "lines": "java.lang.Class<?> iface"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 869,
    "lines": "java.lang.Class<?> iface"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDataSource.java",
    "startLineNumber": 245,
    "lines": "java.lang.Class<?> iface"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1761,
    "lines": "java.lang.Class<?> iface"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDatabaseMetaData.java",
    "startLineNumber": 5830,
    "lines": "java.lang.Class<?> iface"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 3251,
    "lines": "java.lang.Class<?> iface"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 3834,
    "lines": "java.lang.Class<?> iface"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java & more ...",
  "id": 113,
  "numClones": 9,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDbBackup.java",
    "startLineNumber": 59,
    "lines": "try {\n            Class.forName(\"org.hsqldb.jdbc.JDBCDriver\");\n        } catch (ClassNotFoundException cnfe) {\n            throw new RuntimeException(\n                \"<clinit> failed.  JDBC Driver class not in CLASSPATH\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/AbstractTestOdbc.java",
    "startLineNumber": 81,
    "lines": "try {\n            Class.forName(\"org.hsqldb.jdbc.JDBCDriver\");\n        } catch (ClassNotFoundException cnfe) {\n            throw new RuntimeException(\n                \"<clinit> failed.  JDBC Driver class not in CLASSPATH\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDbBackup.java, /hsqldb/src/org/hsqldb/test/AbstractTestOdbc.java",
  "id": 114,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1928,
    "lines": "String item = ((row[j] == null) ? \"\"\n                                                : row[j].toString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1892,
    "lines": "String item = ((row[j] == null) ? \"\"\n                                                : row[j].toString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 115,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 1024,
    "lines": "if (pos < 0) {\n                throw new IllegalArgumentException(\"pos: \" + pos);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 827,
    "lines": "if (pos < 0) {\n                throw new IllegalArgumentException(\"pos: \" + pos);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 1089,
    "lines": "if (pos < 0) {\n                throw new IllegalArgumentException(\"pos: \" + pos);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 869,
    "lines": "if (pos < 0) {\n                throw new IllegalArgumentException(\"pos: \" + pos);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java & more ...",
  "id": 116,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 436,
    "lines": "typeNumber == Types.SQL_BLOB\n                       || typeNumber == Types.SQL_CLOB"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 359,
    "lines": "typeNumber == Types.SQL_BLOB\n                                || typeNumber == Types.SQL_CLOB"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 117,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryData.java",
    "startLineNumber": 98,
    "lines": "if (length > Integer.MAX_VALUE) {\n            throw Error.error(ErrorCode.X_22001);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 841,
    "lines": "if (length > Integer.MAX_VALUE) {\n                throw Error.error(ErrorCode.X_22001);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BinaryData.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 118,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 2270,
    "lines": "nodes[LEFT].opType == OpTypes.COLUMN\n                                && nodes[LEFT].getRangeVariable()\n                                   == rangeVar"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 2336,
    "lines": "nodes[LEFT].opType == OpTypes.COLUMN\n                && nodes[LEFT].getRangeVariable() == rangeVar"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 2320,
    "lines": "nodes[LEFT].opType == OpTypes.COLUMN\n                && nodes[LEFT].getRangeVariable() == rangeVar"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java & more ...",
  "id": 119,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLibSpeed.java",
    "startLineNumber": 115,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 330,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLibSpeed.java",
    "startLineNumber": 133,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 173,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 385,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 837,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 709,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 749,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 525,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 598,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 930,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 250,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 879,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 563,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 791,
    "lines": "java.util.Random randomgen = new java.util.Random();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLibSpeed.java, /hsqldb/src/org/hsqldb/test/TestAllTypes.java & more ...",
  "id": 120,
  "numClones": 15,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1017,
    "lines": "if (queryExpression.sortAndSlice == null) {\n            queryExpression.addSortAndSlice(sortAndSlice);\n        } else {\n            if (queryExpression.sortAndSlice.hasLimit()) {\n                if (sortAndSlice.hasLimit()) {\n                    throw Error.error(ErrorCode.X_42549);\n                }\n\n                for (int i = 0; i < sortAndSlice.exprList.size(); i++) {\n                    Expression e = (Expression) sortAndSlice.exprList.get(i);\n\n                    queryExpression.sortAndSlice.addOrderExpression(e);\n                }\n            } else {\n                queryExpression.addSortAndSlice(sortAndSlice);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1109,
    "lines": "if (queryExpression.sortAndSlice == null) {\n                    queryExpression.addSortAndSlice(sortAndSlice);\n                } else {\n                    if (queryExpression.sortAndSlice.hasLimit()) {\n                        if (sortAndSlice.hasLimit()) {\n                            throw Error.error(ErrorCode.X_42549);\n                        }\n\n                        for (int i = 0; i < sortAndSlice.exprList.size();\n                                i++) {\n                            Expression e =\n                                (Expression) sortAndSlice.exprList.get(i);\n\n                            queryExpression.sortAndSlice.addOrderExpression(e);\n                        }\n                    } else {\n                        queryExpression.addSortAndSlice(sortAndSlice);\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 121,
  "numClones": 2,
  "cloneSize": 17
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3397,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2911,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3302,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3242,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3286,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3334,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3314,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_VARCHAR;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 122,
  "numClones": 7,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2564,
    "lines": "if (!nodes[1].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3342,
    "lines": "if (!nodes[1].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3322,
    "lines": "if (!nodes[1].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 123,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2219,
    "lines": "permitUnset = (s.charAt(b + 2) == ':');"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2255,
    "lines": "permitUnset = (s.charAt(b + 2) == ':');"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 124,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 688,
    "lines": "((CharacterType) nodes[0].dataType).size(session,\n                            data[0])"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 671,
    "lines": "((CharacterType) nodes[0].dataType).size(session,\n                            data[0])"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 655,
    "lines": "((CharacterType) nodes[0].dataType).size(session,\n                    data[0])"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 125,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1358,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_INTEGER;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2473,
    "lines": "if (nodes[1].dataType == null) {\n                            nodes[1].dataType = Type.SQL_INTEGER;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2404,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_INTEGER;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2999,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_INTEGER;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3123,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_INTEGER;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 126,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 512,
    "lines": "if (!JDBCClobClient.isInLimits(data.length, position, count)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }\n\n        Type[] types = new Type[2];\n\n        types[0] = Type.SQL_INTEGER;\n        types[1] = elementType;\n\n        ResultMetaData meta = ResultMetaData.newSimpleResultMetaData(types);\n\n        meta.columnLabels = new String[] {\n            \"C1\", \"C2\"\n        };\n        meta.colIndexes   = new int[] {\n            -1, -1\n        };\n        meta.columns      = new ColumnBase[2];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 555,
    "lines": "if (!JDBCClobClient.isInLimits(data.length, position, count)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }\n\n        Type[] types = new Type[2];\n\n        types[0] = Type.SQL_INTEGER;\n        types[1] = elementType;\n\n        ResultMetaData meta = ResultMetaData.newSimpleResultMetaData(types);\n\n        meta.columnLabels = new String[] {\n            \"C1\", \"C2\"\n        };\n        meta.colIndexes   = new int[] {\n            -1, -1\n        };\n        meta.columns      = new ColumnBase[2];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
  "id": 127,
  "numClones": 2,
  "cloneSize": 14
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/InputStreamWrapper.java",
    "startLineNumber": 74,
    "lines": "public int read(byte bytes[]) throws IOException {\n        return read(bytes, 0, bytes.length);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAShadowFile.java",
    "startLineNumber": 271,
    "lines": "public int read(byte bytes[]) throws IOException {\n            return read(bytes, 0, bytes.length);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/InputStreamWrapper.java, /hsqldb/src/org/hsqldb/persist/RAShadowFile.java",
  "id": 128,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 243,
    "lines": "while (Statement.charAt(Statement.length() - 1) == ';') {\n                        Statement = Statement.substring(0, Statement.length()\n                                                        - 1);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 211,
    "lines": "while (Statement.charAt(Statement.length() - 1) == ';') {\n                        Statement = Statement.substring(0, Statement.length()\n                                                        - 1);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 275,
    "lines": "while (Statement.charAt(Statement.length() - 1) == ';') {\n                        Statement = Statement.substring(0, Statement.length()\n                                                        - 1);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 179,
    "lines": "while (Statement.charAt(Statement.length() - 1) == ';') {\n                        Statement = Statement.substring(0, Statement.length()\n                                                        - 1);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 426,
    "lines": "while (Statement.charAt(Statement.length() - 1) == ';') {\n                        Statement = Statement.substring(0, Statement.length()\n                                                        - 1);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 394,
    "lines": "while (Statement.charAt(Statement.length() - 1) == ';') {\n                        Statement = Statement.substring(0, Statement.length()\n                                                        - 1);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferTable.java, /hsqldb/src/org/hsqldb/util/TransferTable.java & more ...",
  "id": 129,
  "numClones": 6,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 421,
    "lines": "if (check == i % 2) {\n                hIt.remove();\n                uMap.remove(key);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 396,
    "lines": "if (check == i % 2) {\n                hIt.remove();\n                uMap.remove(key);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java, /hsqldb/src/org/hsqldb/test/TestHashStructures.java",
  "id": 130,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 640,
    "lines": "int size = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 647,
    "lines": "int size = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 792,
    "lines": "int size = ((Integer) parameters[0]).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSession.java, /hsqldb/src/org/hsqldb/StatementSession.java & more ...",
  "id": 131,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 123,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.TEXT_FILE_IO, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/TextFileReader.java",
    "startLineNumber": 179,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.TEXT_FILE_IO, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 134,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.TEXT_FILE_IO, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/TextFileReader.java",
    "startLineNumber": 164,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.TEXT_FILE_IO, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/TextFileReader.java",
    "startLineNumber": 304,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.TEXT_FILE_IO, e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java, /hsqldb/src/org/hsqldb/persist/TextFileReader.java & more ...",
  "id": 132,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntValueHashMap.java",
    "startLineNumber": 138,
    "lines": "public boolean remove(Object key) {\n\n        int oldSize = size();\n\n        super.addOrRemove(0, 0, key, null, true);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongValueHashMap.java",
    "startLineNumber": 137,
    "lines": "public boolean remove(Object key) {\n\n        int oldSize = size();\n\n        super.addOrRemove(0, 0, key, null, true);\n\n        return oldSize != size();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntValueHashMap.java, /hsqldb/src/org/hsqldb/lib/LongValueHashMap.java",
  "id": 133,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 99,
    "lines": "for (int i = 0; i < limit; i++) {\n                RowAction action = (RowAction) session.rowActionList.get(i);\n\n                action.prepareCommit(session);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 126,
    "lines": "for (int i = 0; i < limit; i++) {\n                RowAction action = (RowAction) session.rowActionList.get(i);\n\n                action.prepareCommit(session);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 134,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FileUtil.java",
    "startLineNumber": 435,
    "lines": "for (int i = 0; i < fileList.length; i++) {\n            fileList[i].delete();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FileUtil.java",
    "startLineNumber": 411,
    "lines": "for (int i = 0; i < fileList.length; i++) {\n            fileList[i].delete();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/FileUtil.java, /hsqldb/src/org/hsqldb/lib/FileUtil.java",
  "id": 135,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4489,
    "lines": "if (!htmlMode) {\n                for (int i = 0; i < headerArray.length; i++)\n                    condlPrint(((i > 0) ? \"  \" : \"\")\n                            + SqlFile.divider(maxWidth[i]), false);\n\n                condlPrintln(\"\", false);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4096,
    "lines": "if (!htmlMode) {\n                            for (int i = 0; i < headerArray.length; i++)\n                                condlPrint(((i > 0) ? \"  \"\n                                                    : \"\") + SqlFile.divider(\n                                                        maxWidth[i]), false);\n\n                            condlPrintln(\"\", false);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 136,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 609,
    "lines": "{\n                currValue += ((value - currValue + increment) / increment)\n                             * increment;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 604,
    "lines": "{\n                currValue += ((value - currValue + increment) / increment)\n                             * increment;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/NumberSequence.java, /hsqldb/src/org/hsqldb/NumberSequence.java",
  "id": 137,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1274,
    "lines": "Boolean r1 = (Boolean) nodes[LEFT].getValue(session);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1293,
    "lines": "Boolean r1 = (Boolean) nodes[LEFT].getValue(session);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 138,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 824,
    "lines": "if (iTransferMode == TRFM_DUMP) {\n                iSelectionStep = Transfer.SELECT_SOURCE_TABLES;\n            } else {\n                iSelectionStep++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 340,
    "lines": "if (iTransferMode == TRFM_DUMP) {\n                    iSelectionStep = Transfer.SELECT_SOURCE_TABLES;\n                } else {\n                    iSelectionStep++;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Transfer.java, /hsqldb/src/org/hsqldb/util/Transfer.java",
  "id": 139,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1122,
    "lines": "if (nodes[3] != null) {\n                    if (data[3] == null) {\n                        return null;\n                    }\n\n                    value = Type.SQL_BIGINT.convertToType(session, data[3],\n                                                          nodes[3].dataType);\n                    length = ((Number) value).longValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1025,
    "lines": "if (nodes[3] != null) {\n                    if (data[3] == null) {\n                        return null;\n                    }\n\n                    value = Type.SQL_BIGINT.convertToType(session, data[3],\n                                                          nodes[3].dataType);\n                    length = ((Number) value).longValue();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 140,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/OracleTransferHelper.java",
    "startLineNumber": 116,
    "lines": "String HSQLDB_func = Funcs[Idx][HSQLDB];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java",
    "startLineNumber": 138,
    "lines": "String HSQLDB_func = Funcs[Idx][HSQLDB];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/OracleTransferHelper.java, /hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java",
  "id": 141,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStressInsert.java",
    "startLineNumber": 159,
    "lines": "if (i % 100 == 0) {\n                long t3 = System.currentTimeMillis();\n\n                System.out.println(\"inserted \" + i + \", 100 in \" + (t3 - t2));\n\n                t2 = t3;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStressInsert.java",
    "startLineNumber": 182,
    "lines": "if (i % 100 == 0) {\n                long t3 = System.currentTimeMillis();\n\n                System.out.println(\"inserted \" + i + \", 100 in \" + (t3 - t2));\n\n                t2 = t3;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestStressInsert.java, /hsqldb/src/org/hsqldb/test/TestStressInsert.java",
  "id": 142,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java",
    "startLineNumber": 500,
    "lines": "int low  = ((Integer) meta[indexRangeLow]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java",
    "startLineNumber": 532,
    "lines": "int low  = ((Integer) meta[indexRangeLow]).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlProperties.java",
  "id": 143,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1985,
    "lines": "statement = new StatementExpression(session, compileContext,\n                                                StatementTypes.CONDITION,\n                                                condition);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 2086,
    "lines": "statement = new StatementExpression(session, compileContext,\n                                                StatementTypes.CONDITION,\n                                                condition);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 2050,
    "lines": "statement = new StatementExpression(session, compileContext,\n                                                StatementTypes.CONDITION,\n                                                condition);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java & more ...",
  "id": 144,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 191,
    "lines": "while (node != null) {\n            count++;\n\n            node = node.nNext;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 118,
    "lines": "while (node != null) {\n            count++;\n\n            node = node.nNext;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
  "id": 145,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1672,
    "lines": "if (e2 == null) {\n                throw Error.error(ErrorCode.X_42563,\n                                  ErrorCode.M_INVALID_LIMIT);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1594,
    "lines": "if (e2 == null) {\n                throw Error.error(ErrorCode.X_42563,\n                                  ErrorCode.M_INVALID_LIMIT);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 146,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 1957,
    "lines": "Exception ex = (cause instanceof Exception) ? (Exception) cause\n                    : new Exception(cause);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 1942,
    "lines": "Exception ex = (cause instanceof Exception) ? (Exception) cause\n                    : new Exception(cause);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 1910,
    "lines": "Exception ex = (cause instanceof Exception) ? (Exception) cause\n                    : new Exception(cause);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 1894,
    "lines": "Exception ex = (cause instanceof Exception) ? (Exception) cause\n                    : new Exception(cause);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 1926,
    "lines": "Exception ex = (cause instanceof Exception) ? (Exception) cause\n                    : new Exception(cause);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java, /hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java & more ...",
  "id": 147,
  "numClones": 5,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4606,
    "lines": "ResultLob resultLob =\n                        ResultLob.newLobCreateClobRequest(session.getId(), id,\n                            reader, length);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4591,
    "lines": "ResultLob resultLob =\n                        ResultLob.newLobCreateClobRequest(session.getId(), id,\n                            reader, length);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 148,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2683,
    "lines": "row[is_nullable]      = column.isNullable() ? \"YES\"\n                                                            : \"NO\";"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 1767,
    "lines": "row[is_nullable] = column.isNullable() ? \"YES\"\n                                                           : \"NO\";"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 149,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 488,
    "lines": "{\n\n        if (pattern == null) {\n            throw new IllegalArgumentException(\"Pattern must  not be null.\");\n        } else if (pattern.length < 2) {\n            throw new IllegalArgumentException(\"Pattern length must be > 1.\");\n        }\n\n        int[] table = new int[pattern.length];\n        int   i     = 2;\n        int   j     = 0;\n\n        table[0] = -1;\n        table[1] = 0;\n\n        while (i < pattern.length) {\n            if (pattern[i - 1] == pattern[j]) {\n                table[i] = j + 1;\n\n                j++;\n                i++;\n            } else if (j > 0) {\n                j = table[j];\n            } else {\n                table[i] = 0;\n\n                i++;\n\n                j = 0;\n            }\n        }\n\n        return table;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 449,
    "lines": "{\n\n        if (pattern == null) {\n            throw new IllegalArgumentException(\"Pattern must  not be null.\");\n        } else if (pattern.length < 2) {\n            throw new IllegalArgumentException(\"Pattern length must be > 1.\");\n        }\n\n        //\n        final int[] table = new int[pattern.length];\n        int         i     = 2;\n        int         j     = 0;\n\n        //\n        table[0] = -1;\n        table[1] = 0;\n\n        //\n        while (i < pattern.length) {\n            if (pattern[i - 1] == pattern[j]) {\n                table[i] = j + 1;\n\n                j++;\n                i++;\n            } else if (j > 0) {\n                j = table[j];\n            } else {\n                table[i] = 0;\n\n                i++;\n\n                j = 0;\n            }\n        }\n\n        //\n        return table;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java, /hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
  "id": 150,
  "numClones": 2,
  "cloneSize": 26
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1600,
    "lines": "token.tokenString = sqlString.substring(currentPosition\n                            + 2, pos);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1629,
    "lines": "token.tokenString = sqlString.substring(currentPosition\n                            + 2, pos);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1581,
    "lines": "token.tokenString = sqlString.substring(currentPosition\n                            + 2, pos);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java & more ...",
  "id": 151,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 953,
    "lines": "data[1] = Type.SQL_BIGINT.convertToType(session, data[1],\n                        nodes[1].getDataType());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1590,
    "lines": "data[1] = Type.SQL_BIGINT.convertToType(session,\n                                data[1], nodes[1].getDataType());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 152,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 104,
    "lines": "for (int i = 0; i < limit; i++) {\n                RowAction action = (RowAction) session.rowActionList.get(i);\n\n                action.commit(session);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 128,
    "lines": "for (int i = 0; i < limit; i++) {\n                RowAction action = (RowAction) session.rowActionList.get(i);\n\n                action.commit(session);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 173,
    "lines": "for (int i = 0; i < limit; i++) {\n                RowAction action = (RowAction) session.rowActionList.get(i);\n\n                action.commit(session);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java & more ...",
  "id": 153,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobInputStream.java",
    "startLineNumber": 98,
    "lines": "public long skip(long n) throws IOException {\n\n        checkClosed();\n\n        if (n <= 0) {\n            return 0;\n        }\n\n        if (currentPosition + n > availableLength) {\n            n = availableLength - currentPosition;\n        }\n\n        currentPosition += n;\n\n        return n;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobInputStream.java",
    "startLineNumber": 117,
    "lines": "public long skip(long n) throws IOException {\n\n        checkClosed();\n\n        if (n <= 0) {\n            return 0;\n        }\n\n        if (currentPosition + n > availableLength) {\n            n = availableLength - currentPosition;\n        }\n\n        currentPosition += n;\n\n        return n;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobInputStream.java, /hsqldb/src/org/hsqldb/types/ClobInputStream.java",
  "id": 154,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 321,
    "lines": "(scanner.token.isUndelimitedIdentifier\n                   || scanner.token.isDelimitedIdentifier)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 307,
    "lines": "(scanner.token.isUndelimitedIdentifier\n                   || scanner.token.isDelimitedIdentifier)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserBase.java, /hsqldb/src/org/hsqldb/ParserBase.java",
  "id": 155,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 269,
    "lines": "try {\n            reader = new InputStreamReader(fis, \"ISO-8859-1\");\n        } catch (Exception e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 138,
    "lines": "try {\n                reader = new InputStreamReader(fis, \"ISO-8859-1\");\n            } catch (Exception e) {}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 156,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 550,
    "lines": "if (limitstart != 0) {\n            reset();\n\n            for (int i = 0; i < limitstart; i++) {\n                next();\n                removeCurrent();\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 550,
    "lines": "if (limitstart != 0) {\n            reset();\n\n            for (int i = 0; i < limitstart; i++) {\n                next();\n                removeCurrent();\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
  "id": 157,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 646,
    "lines": "throw Error.error(t, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_LOAD_SAVE_PROPERTIES, new Object[] {\n                t.toString(), fileName\n            });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 575,
    "lines": "throw Error.error(t, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_LOAD_SAVE_PROPERTIES, new Object[] {\n                t.toString(), fileName\n            });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
  "id": 158,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 1166,
    "lines": "(Type) granteeManager.database.schemaManager\n                                .findSchemaObject(hsqlname.name,\n                                                  hsqlname.schema.name,\n                                                  SchemaObject.DOMAIN)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 1149,
    "lines": "(Type) granteeManager.database.schemaManager\n                                .findSchemaObject(hsqlname.name,\n                                                  hsqlname.schema.name,\n                                                  SchemaObject.DOMAIN)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/Grantee.java, /hsqldb/src/org/hsqldb/rights/Grantee.java",
  "id": 159,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3632,
    "lines": "new StringBuffer(name).append('(').append(\n                    nodes[0].getSQL())"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3647,
    "lines": "new StringBuffer(name).append('(').append(\n                    nodes[0].getSQL())"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3614,
    "lines": "new StringBuffer(name).append('(').append(\n                    nodes[0].getSQL())"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 160,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java",
    "startLineNumber": 533,
    "lines": "int high = ((Integer) meta[indexRangeHigh]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java",
    "startLineNumber": 501,
    "lines": "int high = ((Integer) meta[indexRangeHigh]).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlProperties.java",
  "id": 161,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 374,
    "lines": "if (more) {\n            rs = cs.getResultSet();\n\n            rs.next();\n            assertEquals(\"INFORMATION_SCHEMA\", rs.getString(2));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 349,
    "lines": "if (more) {\n            rs = cs.getResultSet();\n\n            rs.next();\n            assertEquals(\"INFORMATION_SCHEMA\", rs.getString(2));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java, /hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
  "id": 162,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 348,
    "lines": "for (int i = 0; i < dataTypes.length; i++) {\n            newTypes[i] = dataTypes[i].getAggregateType(otherTypes[i]);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 320,
    "lines": "for (int i = 0; i < dataTypes.length; i++) {\n            newTypes[i] = dataTypes[i].getAggregateType(otherTypes[i]);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/RowType.java, /hsqldb/src/org/hsqldb/types/RowType.java",
  "id": 163,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java",
    "startLineNumber": 257,
    "lines": "(d.width - size.width) / 2"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
    "startLineNumber": 258,
    "lines": "(d.width - size.width) / 2"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/CommonSwing.java",
    "startLineNumber": 157,
    "lines": "(d.width - size.width) / 2"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 416,
    "lines": "(d.width - size.width) / 2"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 481,
    "lines": "(d.width - size.width) / 2"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java, /hsqldb/src/org/hsqldb/util/ConnectionDialog.java & more ...",
  "id": 164,
  "numClones": 5,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 949,
    "lines": "if (routine.getType() == SchemaObject.FUNCTION\n                            || !set.add(Tokens.SAVEPOINT)) {\n                        throw unexpectedToken();\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 962,
    "lines": "if (routine.getType() == SchemaObject.FUNCTION\n                            || !set.add(Tokens.SAVEPOINT)) {\n                        throw unexpectedToken();\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java",
  "id": 165,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 230,
    "lines": "sb.append(Tokens.T_BY).append(' ').append(Tokens.T_DEFAULT);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 262,
    "lines": "sb.append(Tokens.T_BY).append(' ').append(Tokens.T_DEFAULT);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/NumberSequence.java, /hsqldb/src/org/hsqldb/NumberSequence.java",
  "id": 166,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/auth/LdapAuthBean.java",
    "startLineNumber": 297,
    "lines": "/**\n     * String wrapper for method setRoleSchemaValuePattern(Pattern)\n     *\n     * Use the (x?) Pattern constructs to set options.\n     *\n     * @throws java.util.regex.PatternSyntaxException\n     * @see #setRoleSchemaValuePattern(Pattern)\n     */\n    public void setRoleSchemaValuePatternString(String patternString) {\n        setRoleSchemaValuePattern(Pattern.compile(patternString));\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/auth/JaasAuthBean.java",
    "startLineNumber": 188,
    "lines": "/**\n     * String wrapper for method setRoleSchemaValuePattern(Pattern)\n     *\n     * Use the (x?) Pattern constructs to set options.\n     *\n     * @throws java.util.regex.PatternSyntaxException\n     * @see #setRoleSchemaValuePattern(Pattern)\n     */\n    public void setRoleSchemaValuePatternString(String patternString) {\n        setRoleSchemaValuePattern(Pattern.compile(patternString));\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/auth/LdapAuthBean.java, /hsqldb/src/org/hsqldb/auth/JaasAuthBean.java",
  "id": 167,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4439,
    "lines": "{\n                        row[character_maximum_length] =\n                            ValuePool.getLong(type.precision);\n                        row[character_octet_length] =\n                            ValuePool.getLong(type.precision);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7971,
    "lines": "{\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3823,
    "lines": "{\n            row[character_maximum_length] = ValuePool.getLong(type.precision);\n            row[character_octet_length]   = ValuePool.getLong(type.precision);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3826,
    "lines": "{\n            row[character_maximum_length] = ValuePool.getLong(type.precision);\n            row[character_octet_length]   = ValuePool.getLong(type.precision);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4434,
    "lines": "{\n                        row[character_maximum_length] =\n                            ValuePool.getLong(type.precision);\n                        row[character_octet_length] =\n                            ValuePool.getLong(type.precision);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3486,
    "lines": "{\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6017,
    "lines": "{\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2737,
    "lines": "{\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3481,
    "lines": "{\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6012,
    "lines": "{\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7976,
    "lines": "{\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2732,
    "lines": "{\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 168,
  "numClones": 12,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestTextTables.java",
    "startLineNumber": 210,
    "lines": "st   = conn.createStatement();\n\n        rs = st.executeQuery(\"select count(*) from tmsingle\");\n\n        assertTrue(rs.next());\n        assertEquals(20, rs.getInt(1));\n\n        rs = st.executeQuery(\"select count(*) from tident\");\n\n        assertTrue(rs.next());\n        assertEquals(20, rs.getInt(1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestTextTables.java",
    "startLineNumber": 226,
    "lines": "st   = conn.createStatement();\n\n        rs = st.executeQuery(\"select count(*) from tmsingle\");\n\n        assertTrue(rs.next());\n        assertEquals(20, rs.getInt(1));\n\n        rs = st.executeQuery(\"select count(*) from tident\");\n\n        assertTrue(rs.next());\n        assertEquals(20, rs.getInt(1));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestTextTables.java, /hsqldb/src/org/hsqldb/test/TestTextTables.java",
  "id": 169,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 430,
    "lines": "nodes[LEFT].dataType == null || nodes[RIGHT].dataType == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLike.java",
    "startLineNumber": 148,
    "lines": "nodes[LEFT].dataType == null || nodes[RIGHT].dataType == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 900,
    "lines": "nodes[LEFT].dataType == null\n                    || nodes[RIGHT].dataType == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 849,
    "lines": "nodes[LEFT].dataType == null || nodes[RIGHT].dataType == null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionLike.java & more ...",
  "id": 170,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7063,
    "lines": "row[sequence_schema]  = refName.schema.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5588,
    "lines": "row[sequence_schema]  = refName.schema.name;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 171,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5283,
    "lines": "try {\n                curLine = dsvReader.nextRecord();\n            } catch (IOException ioe) {\n                throw new SqlToolError(ioe);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5566,
    "lines": "try {\n                    curLine = dsvReader.nextRecord();\n                } catch (IOException ioe) {\n                    throw new SqlToolError(ioe);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 172,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 1418,
    "lines": "{\n                    deleteFile(database, backupFileName);\n\n                    if (fa.isStreamElement(backupFileName)) {\n                        throw Error.error(ErrorCode.DATA_FILE_ERROR,\n                                          \"cannot delete old backup file\");\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 1403,
    "lines": "{\n                    deleteFile(database, backupFileName);\n\n                    if (fa.isStreamElement(backupFileName)) {\n                        throw Error.error(ErrorCode.DATA_FILE_ERROR,\n                                          \"cannot delete old backup file\");\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java, /hsqldb/src/org/hsqldb/persist/DataFileCache.java",
  "id": 173,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 856,
    "lines": "baseTable.triggerLists[Trigger.INSERT_AFTER_ROW].length > 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 887,
    "lines": "baseTable.triggerLists[Trigger.INSERT_AFTER_ROW].length > 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 174,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 175,
    "lines": "catch (BadPaddingException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 152,
    "lines": "catch (BadPaddingException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Crypto.java, /hsqldb/src/org/hsqldb/persist/Crypto.java",
  "id": 175,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java",
    "startLineNumber": 326,
    "lines": "if (!isInLimits(Long.MAX_VALUE, pos - 1, length)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java",
    "startLineNumber": 91,
    "lines": "if (!isInLimits(Long.MAX_VALUE, pos - 1, length)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
    "startLineNumber": 663,
    "lines": "if (!isInLimits(Long.MAX_VALUE, pos - 1, length)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
    "startLineNumber": 264,
    "lines": "if (!isInLimits(Long.MAX_VALUE, pos - 1, length)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java & more ...",
  "id": 176,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 351,
    "lines": "{\n            sb.append(Tokens.T_EXTERNAL).append(' ').append(Tokens.T_NAME);\n            sb.append(' ').append('\\'').append(methodName).append('\\'');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 331,
    "lines": "{\n            sb.append(Tokens.T_EXTERNAL).append(' ').append(Tokens.T_NAME);\n            sb.append(' ').append('\\'').append(methodName).append('\\'');\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 177,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4550,
    "lines": "ResultLob resultLob =\n                        ResultLob.newLobCreateBlobRequest(session.getId(), id,\n                            stream, length);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4565,
    "lines": "ResultLob resultLob =\n                        ResultLob.newLobCreateBlobRequest(session.getId(), id,\n                            stream, length);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 178,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 807,
    "lines": "type == Types.CHAR || type == Types.VARCHAR"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 816,
    "lines": "type == Types.CHAR || type == Types.VARCHAR"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferDb.java, /hsqldb/src/org/hsqldb/util/TransferDb.java",
  "id": 179,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1537,
    "lines": "conditions[condIndex].nonIndexCondition != null\n                        && !conditions[condIndex].nonIndexCondition\n                            .testCondition(session)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1503,
    "lines": "conditions[condIndex].nonIndexCondition != null\n                        && !conditions[condIndex].nonIndexCondition\n                            .testCondition(session)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariable.java",
  "id": 180,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 953,
    "lines": "{\n            if (type.isIntervalType()) {\n                type = ((IntervalType) type).getCharacterType();\n            } else if (type.isDateTimeTypeWithZone()) {\n                type = ((DateTimeType) type).getDateTimeTypeWithoutZone();\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 366,
    "lines": "{\n            if (type.isIntervalType()) {\n                type = ((IntervalType) type).getCharacterType();\n            } else if (type.isDateTimeTypeWithZone()) {\n                type = ((DateTimeType) type).getDateTimeTypeWithoutZone();\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 754,
    "lines": "{\n                    if (type.isIntervalType()) {\n                        type = ((IntervalType) type).getCharacterType();\n                    } else if (type.isDateTimeTypeWithZone()) {\n                        type = ((DateTimeType) type)\n                            .getDateTimeTypeWithoutZone();\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 949,
    "lines": "{\n                    if (type.isIntervalType()) {\n                        type = ((IntervalType) type).getCharacterType();\n                    } else if (type.isDateTimeTypeWithZone()) {\n                        type = ((DateTimeType) type)\n                            .getDateTimeTypeWithoutZone();\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2573,
    "lines": "{\n                if (type.isIntervalType()) {\n                    type = ((IntervalType) type).getCharacterType();\n                } else if (type.isDateTimeTypeWithZone()) {\n                    type = ((DateTimeType) type).getDateTimeTypeWithoutZone();\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2728,
    "lines": "{\n                if (type.isIntervalType()) {\n                    type = ((IntervalType) type).getCharacterType();\n                } else if (type.isDateTimeTypeWithZone()) {\n                    type = ((DateTimeType) type).getDateTimeTypeWithoutZone();\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 1708,
    "lines": "{\n                        if (type.isIntervalType()) {\n                            type = ((IntervalType) type).getCharacterType();\n                        } else if (type.isDateTimeTypeWithZone()) {\n                            type = ((DateTimeType) type)\n                                .getDateTimeTypeWithoutZone();\n                        }\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java & more ...",
  "id": 181,
  "numClones": 7,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 387,
    "lines": "public void removeTransactionInfo(long id) {\n\n        rowActionMap.getWriteLock().lock();\n\n        try {\n            RowAction action = (RowAction) rowActionMap.get(id);\n\n            synchronized (action) {\n\n                // remove only if not changed\n                if (action.type == RowActionBase.ACTION_NONE) {\n                    rowActionMap.remove(id);\n                }\n            }\n        } finally {\n            rowActionMap.getWriteLock().unlock();\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 617,
    "lines": "public void removeTransactionInfo(long id) {\n\n        rowActionMap.getWriteLock().lock();\n\n        try {\n            RowAction action = (RowAction) rowActionMap.get(id);\n\n            synchronized (action) {\n\n                // remove only if not changed\n                if (action.type == RowActionBase.ACTION_NONE) {\n                    rowActionMap.remove(id);\n                }\n            }\n        } finally {\n            rowActionMap.getWriteLock().unlock();\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 182,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 564,
    "lines": "{\n\n        int k     = 0;\n        int limit = arra.length - start;\n\n        if (limit > arrb.length) {\n            limit = arrb.length;\n        }\n\n        for (int i = 0; i < limit; i++) {\n            if (arra[i + start] == arrb[i]) {\n                k++;\n            } else {\n                break;\n            }\n        }\n\n        return k;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 540,
    "lines": "{\n\n        int k     = 0;\n        int limit = arra.length - start;\n\n        if (limit > arrb.length) {\n            limit = arrb.length;\n        }\n\n        for (int i = 0; i < limit; i++) {\n            if (arra[i + start] == arrb[i]) {\n                k++;\n            } else {\n                break;\n            }\n        }\n\n        return k;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
  "id": 183,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4594,
    "lines": "if (tokens[0] == null || tokens[2] == null) return !negate;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4608,
    "lines": "if (tokens[0] == null || tokens[2] == null) return !negate;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 184,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1146,
    "lines": "for (int j = 0; j < array.length; j++) {\n                    if (j > 0) {\n                        sb.append(',');\n                    }\n\n                    sb.append(array[j].getId());\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1129,
    "lines": "for (int j = 0; j < array.length; j++) {\n                    if (j > 0) {\n                        sb.append(',');\n                    }\n\n                    sb.append(array[j].getId());\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 185,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultMetaData.java",
    "startLineNumber": 296,
    "lines": "for (int i = 0; i < columnCount; i++) {\n                    colIndexes[i] = in.readInt();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultMetaData.java",
    "startLineNumber": 359,
    "lines": "for (int i = 0; i < columnCount; i++) {\n                        colIndexes[i] = in.readInt();\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/ResultMetaData.java, /hsqldb/src/org/hsqldb/result/ResultMetaData.java",
  "id": 186,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConfiguration.java",
    "startLineNumber": 165,
    "lines": "for (int i = 0; i < addrs.length; i++) {\n                set.add(addrs[i].getHostAddress());\n                set.add(addrs[i].getHostName());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConfiguration.java",
    "startLineNumber": 155,
    "lines": "for (int i = 0; i < addrs.length; i++) {\n                set.add(addrs[i].getHostAddress());\n                set.add(addrs[i].getHostName());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConfiguration.java",
    "startLineNumber": 148,
    "lines": "for (int i = 0; i < addrs.length; i++) {\n                set.add(addrs[i].getHostAddress());\n                set.add(addrs[i].getHostName());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConfiguration.java",
    "startLineNumber": 172,
    "lines": "for (int i = 0; i < addrs.length; i++) {\n                set.add(addrs[i].getHostAddress());\n                set.add(addrs[i].getHostName());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/ServerConfiguration.java, /hsqldb/src/org/hsqldb/server/ServerConfiguration.java & more ...",
  "id": 187,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4926,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n            } else {\n                break;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4997,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                    read();\n                } else {\n                    break;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 2043,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                    read();\n                } else {\n                    break;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4811,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n            } else {\n                break;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4825,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n            } else {\n                break;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1146,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                    read();\n                } else {\n                    break;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDQL.java & more ...",
  "id": 188,
  "numClones": 6,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Tokenizer.java",
    "startLineNumber": 109,
    "lines": "while(currentIndex < len &&\n                    Character.isDigit(cmd.charAt(currentIndex))) {\n                currentIndex++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Tokenizer.java",
    "startLineNumber": 118,
    "lines": "while(currentIndex < len &&\n                    Character.isDigit(cmd.charAt(currentIndex))) {\n                currentIndex++;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/preprocessor/Tokenizer.java, /hsqldb/src/org/hsqldb/util/preprocessor/Tokenizer.java",
  "id": 189,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 363,
    "lines": "if (nodes[RIGHT].dataType.isIntervalType()) {\n                            nodes[LEFT].dataType =\n                                Type.SQL_TIMESTAMP_WITH_TIME_ZONE;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 381,
    "lines": "if (nodes[RIGHT].dataType.isIntervalType()) {\n                            nodes[LEFT].dataType =\n                                Type.SQL_TIMESTAMP_WITH_TIME_ZONE;\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
  "id": 190,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1631,
    "lines": "opType == OpTypes.MATCH_PARTIAL\n                            || opType == OpTypes.MATCH_UNIQUE_PARTIAL"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1419,
    "lines": "opType == OpTypes.MATCH_PARTIAL\n                        || opType == OpTypes.MATCH_UNIQUE_PARTIAL"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 191,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 503,
    "lines": "{\n                if (session.tempSet.isEmpty()) {\n                    lockTablesTPL(session, cs);\n\n                    // we don't set other sessions that would now be waiting for this one too\n                } else {\n                    setWaitingSessionTPL(session);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 298,
    "lines": "{\n                if (session.tempSet.isEmpty()) {\n                    lockTablesTPL(session, cs);\n\n                    // we don't set other sessions that would now be waiting for this one too\n                    // next lock release will do it\n                } else {\n                    setWaitingSessionTPL(session);\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManager2PL.java",
  "id": 192,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Tree.java",
    "startLineNumber": 122,
    "lines": "fFont        = new Font(\"Dialog\", Font.PLAIN, 12);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Grid.java",
    "startLineNumber": 141,
    "lines": "fFont = new Font(\"Dialog\", Font.PLAIN, 12);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Tree.java, /hsqldb/src/org/hsqldb/util/Grid.java",
  "id": 193,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionContext.java",
    "startLineNumber": 215,
    "lines": "if (stack == null) {\n            stack = new HsqlArrayList(32, true);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionContext.java",
    "startLineNumber": 142,
    "lines": "if (stack == null) {\n            stack = new HsqlArrayList(32, true);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SessionContext.java, /hsqldb/src/org/hsqldb/SessionContext.java",
  "id": 194,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 745,
    "lines": "if (abalancesum != bbalancesum || bbalancesum != tbalancesum\n                    || tbalancesum != deltasum) {\n                System.out.println(\"sums don't match!\");\n            } else {\n                System.out.println(\"sums match!\");\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 832,
    "lines": "if (abalancesum != bbalancesum || bbalancesum != tbalancesum\n                    || tbalancesum != deltasum) {\n                System.out.println(\"sums don't match!\");\n            } else {\n                System.out.println(\"sums match!\");\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 195,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2605,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1559,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1500,
    "lines": "if (nodes[0].dataType == null) {\n\n                    // in 20.6 parameter not allowed as type cannot be determined as binary or char\n                    // throw Error.error(ErrorCode.X_42567);\n                    nodes[0].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3028,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3096,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3387,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3119,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2579,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3043,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 196,
  "numClones": 9,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 456,
    "lines": "{\n                if (isIncremental) {\n                    preexists = restoreBackupIncremental();\n                } else {\n                    preexists = restoreBackup();\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 340,
    "lines": "{\n                if (isIncremental) {\n                    preexists = restoreBackupIncremental();\n                } else {\n                    preexists = restoreBackup();\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java, /hsqldb/src/org/hsqldb/persist/DataFileCache.java",
  "id": 197,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1379,
    "lines": "if (nodes[0].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3196,
    "lines": "if (nodes[0].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1324,
    "lines": "if (nodes[0].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2507,
    "lines": "if (nodes[0].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1474,
    "lines": "if (nodes[0].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1350,
    "lines": "if (nodes[0].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1405,
    "lines": "if (nodes[0].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1337,
    "lines": "if (nodes[0].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 198,
  "numClones": 8,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 307,
    "lines": "if (role == null) {\n            throw Error.error(ErrorCode.X_0P000, roleName);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 348,
    "lines": "if (role == null) {\n                throw Error.error(ErrorCode.X_0P000, roleName);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java, /hsqldb/src/org/hsqldb/rights/GranteeManager.java",
  "id": 199,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 320,
    "lines": "while (other.hasNext()) {\n            Object[] currentData = other.getNext();\n\n            addAdjusted(currentData, rightColumnIndexes);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 342,
    "lines": "while (other.hasNext()) {\n            Object[] currentData = other.getNext();\n\n            addAdjusted(currentData, rightColumnIndexes);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
  "id": 200,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 223,
    "lines": "if (dbObject instanceof Routine) {\n            name = ((Routine) dbObject).getSpecificName();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 430,
    "lines": "if (dbObject instanceof Routine) {\n            name = ((Routine) dbObject).getSpecificName();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java, /hsqldb/src/org/hsqldb/rights/GranteeManager.java",
  "id": 201,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 484,
    "lines": "if (condition != null) {\n                condition =\n                    condition.replaceColumnReferences(rangeVariables[0],\n                                                      baseSelect.exprColumns);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 597,
    "lines": "if (condition != null) {\n                condition =\n                    condition.replaceColumnReferences(rangeVariables[0],\n                                                      baseSelect.exprColumns);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDML.java",
  "id": 202,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 948,
    "lines": "if (tableAlias != null) {\n            sb.append(b).append(\"alias=\").append(tableAlias.name).append(\"\\n\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableJoined.java",
    "startLineNumber": 362,
    "lines": "if (tableAlias != null) {\n            sb.append(b).append(\"alias=\").append(tableAlias.name).append(\"\\n\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariableJoined.java",
  "id": 203,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 658,
    "lines": "new Constraint(name, table, index,\n                           SchemaObject.ConstraintTypes.UNIQUE)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3656,
    "lines": "new Constraint(name, table, index,\n                                      SchemaObject.ConstraintTypes.UNIQUE)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 204,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSql.java",
    "startLineNumber": 475,
    "lines": "if (rs.next()) {\n                    int max = rs.getInt(1);\n\n                    System.out.println(\"Max value for ID: \" + max);\n                } else {\n                    System.out.println(\"Max value for ID not returned\");\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
    "startLineNumber": 550,
    "lines": "if (rs.next()) {\n                    int max = rs.getInt(1);\n\n                    System.out.println(\"Max value for ID: \" + max);\n                } else {\n                    System.out.println(\"Max value for ID not returned\");\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSql.java, /hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
  "id": 205,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1952,
    "lines": "for (int i = 0; i < iMaxRecent; i++) {\n            if (s.equals(sRecent[i])) {\n                return;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1157,
    "lines": "for (int i = 0; i < iMaxRecent; i++) {\n            if (s.equals(sRecent[i])) {\n                return;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java",
  "id": 206,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 110,
    "lines": "public abstract void add(Session session, CachedObject object, boolean tx);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStore.java",
    "startLineNumber": 78,
    "lines": "/** add new object */\n    void add(Session session, CachedObject object, boolean tx);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java, /hsqldb/src/org/hsqldb/persist/PersistentStore.java",
  "id": 207,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 807,
    "lines": "TimeData t = (TimeData) getColumnInType(parameterIndex, Type.SQL_TIME);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 1339,
    "lines": "TimeData t = (TimeData) getColumnInType(parameterIndex, Type.SQL_TIME);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
  "id": 208,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2041,
    "lines": "int bPartLength = (int) bParts[i][ALLOC_PART.PART_LENGTH];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2074,
    "lines": "int bPartLength = (int) bParts[i][ALLOC_PART.PART_LENGTH];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 209,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 1304,
    "lines": "catch (HsqlException he) {\n                                    throw new RecoverableOdbcFailure(\n                                        \"Failed to change transaction state: \"\n                                        + he.getMessage(), he.getSQLState());\n                                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 1975,
    "lines": "catch (HsqlException he) {\n                throw new RecoverableOdbcFailure(\n                    \"Failed to change transaction state: \" + he.getMessage(),\n                    he.getSQLState());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 595,
    "lines": "catch (HsqlException he) {\n                            throw new RecoverableOdbcFailure(\n                                \"Failed to change transaction state: \"\n                                + he.getMessage(), he.getSQLState());\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/ServerConnection.java, /hsqldb/src/org/hsqldb/server/ServerConnection.java & more ...",
  "id": 210,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementResultUpdate.java",
    "startLineNumber": 154,
    "lines": "data[baseColumnMap[i]] = args[i];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementResultUpdate.java",
    "startLineNumber": 121,
    "lines": "data[baseColumnMap[i]]        = args[i];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementResultUpdate.java, /hsqldb/src/org/hsqldb/StatementResultUpdate.java",
  "id": 211,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1369,
    "lines": "if (isSimpleName() && !isReservedKey()) {\n            if (label == null) {\n                throw unexpectedToken();\n            }\n\n            if (!label.name.equals(token.tokenString)) {\n                throw Error.error(ErrorCode.X_42508, token.tokenString);\n            }\n\n            read();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1749,
    "lines": "if (isSimpleName() && !isReservedKey()) {\n            if (label == null) {\n                throw unexpectedToken();\n            }\n\n            if (!label.name.equals(token.tokenString)) {\n                throw Error.error(ErrorCode.X_42508, token.tokenString);\n            }\n\n            read();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1823,
    "lines": "if (isSimpleName() && !isReservedKey()) {\n            if (label == null) {\n                throw unexpectedToken();\n            }\n\n            if (!label.name.equals(token.tokenString)) {\n                throw Error.error(ErrorCode.X_42508, token.tokenString);\n            }\n\n            read();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1875,
    "lines": "if (isSimpleName() && !isReservedKey()) {\n            if (label == null) {\n                throw unexpectedToken();\n            }\n\n            if (!label.name.equals(token.tokenString)) {\n                throw Error.error(ErrorCode.X_42508, token.tokenString);\n            }\n\n            read();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1791,
    "lines": "if (isSimpleName() && !isReservedKey()) {\n            if (label == null) {\n                throw unexpectedToken();\n            }\n\n            if (!label.name.equals(token.tokenString)) {\n                throw Error.error(ErrorCode.X_42508, token.tokenString);\n            }\n\n            read();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java & more ...",
  "id": 212,
  "numClones": 5,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 445,
    "lines": "try {\n                InputStream fis =\n                    getClass().getResourceAsStream(resourceFileName);\n\n                fis    = getClass().getResourceAsStream(resourceFileName);\n                reader = new InputStreamReader(fis, \"ISO-8859-1\");\n\n                for (int i = 0; i < 100; i++) {\n                    reader.read();\n                }\n            } catch (Exception e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 471,
    "lines": "//\n            try {\n                InputStream fis =\n                    getClass().getResourceAsStream(resourceFileName);\n\n                fis    = getClass().getResourceAsStream(resourceFileName);\n                reader = new InputStreamReader(fis, \"ISO-8859-1\");\n\n                for (int i = 0; i < 100; i++) {\n                    reader.read();\n                }\n            } catch (Exception e) {}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLobs.java, /hsqldb/src/org/hsqldb/test/TestLobs.java",
  "id": 213,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5696,
    "lines": "if (!session.getGrantee().isFullyAccessibleByRole(refName)) {\n                    continue;\n                }\n\n                row                   = t.getEmptyRowData();\n                row[specific_catalog] = database.getCatalogName().name;\n                row[specific_schema]  = routine.getSchemaName().name;\n                row[specific_name]    = routine.getSpecificName().name;\n                row[routine_catalog]  = database.getCatalogName().name;\n                row[routine_schema]   = routine.getSchemaName().name;\n                row[routine_name]     = routine.getName().name;\n                row[table_catalog]    = database.getCatalogName().name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5108,
    "lines": "if (!session.getGrantee().isFullyAccessibleByRole(refName)) {\n                    continue;\n                }\n\n                row = t.getEmptyRowData();\n\n                //\n                row[specific_catalog] = database.getCatalogName().name;\n                row[specific_schema]  = routine.getSchemaName().name;\n                row[specific_name]    = routine.getSpecificName().name;\n                row[routine_catalog]  = database.getCatalogName().name;\n                row[routine_schema]   = routine.getSchemaName().name;\n                row[routine_name]     = routine.getName().name;\n                row[table_catalog]    = database.getCatalogName().name;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 214,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementProcedure.java",
    "startLineNumber": 274,
    "lines": "{\n            row    = new Object[1];\n            row[0] = o;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementProcedure.java",
    "startLineNumber": 279,
    "lines": "{\n            row    = new Object[1];\n            row[0] = o;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementProcedure.java, /hsqldb/src/org/hsqldb/StatementProcedure.java",
  "id": 215,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 281,
    "lines": "public NodeAVL child(PersistentStore store, boolean isleft) {\n        return isleft ? getLeft(store)\n                      : getRight(store);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVL.java",
    "startLineNumber": 192,
    "lines": "public NodeAVL child(PersistentStore store, boolean isleft) {\n        return isleft ? getLeft(store)\n                      : getRight(store);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 325,
    "lines": "public NodeAVL child(PersistentStore store, boolean isleft) {\n        return isleft ? getLeft(store)\n                      : getRight(store);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java, /hsqldb/src/org/hsqldb/index/NodeAVL.java & more ...",
  "id": 216,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1406,
    "lines": "if (columnNames == null || columnNames.length == 0) {\n            throw JDBCUtil.invalidArgument(\"columnIndexes\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1610,
    "lines": "if (columnNames == null || columnNames.length == 0) {\n            throw JDBCUtil.invalidArgument(\"columnIndexes\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
  "id": 217,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1032,
    "lines": "g[0] = g[1] = \"n/a\";"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1855,
    "lines": "g[0] = g[1] = \"n/a\";"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 218,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestGroupByHaving.java",
    "startLineNumber": 273,
    "lines": "Object[][] expected = new Object[][]{};"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestGroupByHaving.java",
    "startLineNumber": 287,
    "lines": "Object[][] expected = new Object[][]{};"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestGroupByHaving.java, /hsqldb/src/org/hsqldb/test/TestGroupByHaving.java",
  "id": 219,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 886,
    "lines": "if (srcStatement != null) {\n            try {\n                srcStatement.close();\n            } catch (SQLException e) {}\n\n            srcStatement = null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 108,
    "lines": "if (srcStatement != null) {\n            try {\n                srcStatement.close();\n            } catch (SQLException e) {}\n\n            srcStatement = null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 125,
    "lines": "if (srcStatement != null) {\n            try {\n                srcStatement.close();\n            } catch (SQLException e) {}\n\n            srcStatement = null;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferDb.java, /hsqldb/src/org/hsqldb/util/TransferDb.java & more ...",
  "id": 220,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SortAndSlice.java",
    "startLineNumber": 337,
    "lines": "((ExpressionColumn) e).getRangeVariable()\n                != select.rangeVariables[0]"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SortAndSlice.java",
    "startLineNumber": 248,
    "lines": "((ExpressionColumn) e).getRangeVariable()\n                    != select.rangeVariables[0]"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SortAndSlice.java, /hsqldb/src/org/hsqldb/SortAndSlice.java",
  "id": 221,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 328,
    "lines": "System.out.println(\"Time to execute \" + transaction_count\n                           + \" transactions: \" + completion_time\n                           + \" seconds.\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 337,
    "lines": "System.out.println(\"Time to execute \" + transaction_count\n                           + \" transactions: \" + completion_time\n                           + \" seconds.\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 222,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 824,
    "lines": "for (int i = 0; i < data.length; i++) {\n                    if (data[i] == null) {\n                        return null;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1574,
    "lines": "for (int i = 0; i < data.length; i++) {\n                    if (data[i] == null) {\n                        return null;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1745,
    "lines": "for (int i = 0; i < data.length; i++) {\n                    if (data[i] == null) {\n                        return null;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1725,
    "lines": "for (int i = 0; i < data.length; i++) {\n                    if (data[i] == null) {\n                        return null;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1780,
    "lines": "for (int i = 0; i < data.length; i++) {\n                    if (data[i] == null) {\n                        return null;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1820,
    "lines": "for (int i = 0; i < data.length; i++) {\n                    if (data[i] == null) {\n                        return null;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1675,
    "lines": "for (int i = 0; i < data.length; i++) {\n                    if (data[i] == null) {\n                        return null;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 903,
    "lines": "for (int i = 0; i < data.length; i++) {\n                    if (data[i] == null) {\n                        return null;\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 223,
  "numClones": 8,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java",
    "startLineNumber": 140,
    "lines": "database.logger.writeDeleteStatement(session, (Table) table,\n                                                     data);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 229,
    "lines": "database.logger.writeDeleteStatement(session, (Table) table,\n                                                     data);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
  "id": 224,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 795,
    "lines": "grantee instanceof User && ((User) grantee).isExternalOnly"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 284,
    "lines": "grantee instanceof User && ((User) grantee).isExternalOnly"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java, /hsqldb/src/org/hsqldb/rights/GranteeManager.java",
  "id": 225,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6007,
    "lines": "if (matcher.groupCount() > 1 && matcher.group(2) != null\n                        && matcher.group(2).length() > 0)\n                    newVal.append(matcher.group(2));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6036,
    "lines": "if (matcher.groupCount() > 1 && matcher.group(2) != null\n                            && matcher.group(2).length() > 0)\n                        newVal.append(matcher.group(2));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 226,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java",
    "startLineNumber": 52,
    "lines": "String[][]        Funcs      = {\n        {\n            \"now()\", \"\\'now\\'\"\n        }\n    };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/OracleTransferHelper.java",
    "startLineNumber": 51,
    "lines": "String[][]        Funcs  = {\n        {\n            \"now()\", \"\\'now\\'\"\n        }\n    };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java, /hsqldb/src/org/hsqldb/util/OracleTransferHelper.java",
  "id": 227,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
    "startLineNumber": 859,
    "lines": "private static final long MAX_POS = 1L + (long) Integer.MAX_VALUE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 732,
    "lines": "public static final long MAX_POS = 1L + (long) Integer.MAX_VALUE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
  "id": 228,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java",
    "startLineNumber": 187,
    "lines": "ps.setTimestamp(1, java.sql.Timestamp.valueOf(\"2008-10-27 0:00:00\"));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java",
    "startLineNumber": 150,
    "lines": "ps.setTimestamp(1, java.sql.Timestamp.valueOf(\"2008-10-27 0:00:00\"));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java, /hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java",
  "id": 229,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 887,
    "lines": "pstmt1.setInt(1, delta);\n                pstmt1.setInt(2, aid);\n                pstmt1.executeUpdate();\n                pstmt1.clearWarnings();\n                pstmt2.setInt(1, aid);\n\n                ResultSet RS = pstmt2.executeQuery();\n\n                pstmt2.clearWarnings();\n\n                while (RS.next()) {\n                    aBalance = RS.getInt(1);\n                }\n\n                pstmt3.setInt(1, delta);\n                pstmt3.setInt(2, tid);\n                pstmt3.executeUpdate();\n                pstmt3.clearWarnings();\n                pstmt4.setInt(1, delta);\n                pstmt4.setInt(2, bid);\n                pstmt4.executeUpdate();\n                pstmt4.clearWarnings();\n                pstmt5.setInt(1, tid);\n                pstmt5.setInt(2, bid);\n                pstmt5.setInt(3, aid);\n                pstmt5.setInt(4, delta);\n                pstmt5.executeUpdate();\n                pstmt5.clearWarnings();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 965,
    "lines": "pstmt1.setInt(1, delta);\n                    pstmt1.setInt(2, aid);\n                    pstmt1.executeUpdate();\n                    pstmt1.clearWarnings();\n                    pstmt2.setInt(1, aid);\n\n                    ResultSet RS = pstmt2.executeQuery();\n\n                    pstmt2.clearWarnings();\n\n                    while (RS.next()) {\n                        aBalance = RS.getInt(1);\n                    }\n\n                    pstmt3.setInt(1, delta);\n                    pstmt3.setInt(2, tid);\n                    pstmt3.executeUpdate();\n                    pstmt3.clearWarnings();\n                    pstmt4.setInt(1, delta);\n                    pstmt4.setInt(2, bid);\n                    pstmt4.executeUpdate();\n                    pstmt4.clearWarnings();\n                    pstmt5.setInt(1, tid);\n                    pstmt5.setInt(2, bid);\n                    pstmt5.setInt(3, aid);\n                    pstmt5.setInt(4, delta);\n                    pstmt5.executeUpdate();\n                    pstmt5.clearWarnings();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 230,
  "numClones": 2,
  "cloneSize": 24
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3458,
    "lines": "row[numeric_precision] = ValuePool.getLong(\n                    ((NumberType) type).getNumericPrecisionInRadix());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7950,
    "lines": "row[numeric_precision] = ValuePool.getLong(\n                    ((NumberType) type).getNumericPrecisionInRadix());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5988,
    "lines": "row[numeric_precision] = ValuePool.getLong(\n                        ((NumberType) type).getNumericPrecisionInRadix());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3800,
    "lines": "row[numeric_precision] = ValuePool.getLong(\n                ((NumberType) type).getNumericPrecisionInRadix());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2708,
    "lines": "row[numeric_precision] = ValuePool.getLong(\n                        ((NumberType) type).getNumericPrecisionInRadix());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4416,
    "lines": "row[numeric_precision] = ValuePool.getLong(\n                            ((NumberType) type).getNumericPrecisionInRadix());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 231,
  "numClones": 6,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 590,
    "lines": "String columnName = columnAliases == null ? column.getName().name\n                                                      : (String) columnAliases\n                                                          .get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 546,
    "lines": "String columnName = columnAliases == null ? column.getName().name\n                                                      : (String) columnAliases\n                                                          .get(i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariable.java",
  "id": 232,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLibSpeed.java",
    "startLineNumber": 182,
    "lines": "for (int j = 0; j < count; j++) {\n                for (int i = 0; i < sNumeric.length; i++) {\n                    int r = randomgen.nextInt(sNumeric.length);\n\n                    doubleIntLookup.findFirstEqualKeyIndex(r);\n\n                    dummy += r;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLibSpeed.java",
    "startLineNumber": 220,
    "lines": "for (int j = 0; j < count; j++) {\n                for (int i = 0; i < sNumeric.length; i++) {\n                    int r = randomgen.nextInt(sNumeric.length);\n\n                    doubleIntLookup.findFirstEqualKeyIndex(r);\n\n                    dummy += r;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLibSpeed.java, /hsqldb/src/org/hsqldb/test/TestLibSpeed.java",
  "id": 233,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 104,
    "lines": "if (elementCount == 0) {\n            firstindex = endindex = 0;\n        } else if (firstindex == list.length) {\n            firstindex = 0;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 147,
    "lines": "if (elementCount == 0) {\n            firstindex = endindex = 0;\n        } else if (firstindex == list.length) {\n            firstindex = 0;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongDeque.java, /hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
  "id": 234,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 388,
    "lines": "int  newScale     = scale > other.scale ? scale\n                                                : other.scale;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 545,
    "lines": "int newScale = scale > other.scale ? scale\n                                           : other.scale;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalType.java, /hsqldb/src/org/hsqldb/types/NumberType.java",
  "id": 235,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 137,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/AbstractTestOdbc.java",
    "startLineNumber": 195,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 760,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 336,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 692,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1368,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 992,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 184,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 664,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 952,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 148,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 324,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1157,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1321,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1197,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 453,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1117,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 605,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 725,
    "lines": "catch (SQLException se) { junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1077,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 365,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1037,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1590,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 394,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 214,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 154,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 798,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 514,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1410,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1538,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 831,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 911,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1279,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 483,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 423,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 307,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 635,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 543,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 871,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 243,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 239,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 343,
    "lines": "catch (SQLException se) {\n            junit.framework.AssertionFailedError ase\n                = new junit.framework.AssertionFailedError(se.getMessage());\n            ase.initCause(se);\n            throw ase;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java, /hsqldb/src/org/hsqldb/test/AbstractTestOdbc.java & more ...",
  "id": 236,
  "numClones": 42,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 4263,
    "lines": "Type   sourceType = parameterMetaData.columnTypes[parameterIndex - 1];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 1181,
    "lines": "Type   sourceType = parameterMetaData.columnTypes[parameterIndex - 1];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 1133,
    "lines": "Type   sourceType = parameterMetaData.columnTypes[parameterIndex - 1];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java & more ...",
  "id": 237,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 486,
    "lines": "if (nodes[LEFT].opType == OpTypes.VALUE\n                && nodes[RIGHT].opType == OpTypes.VALUE) {\n            setAsConstantValue(session, parent);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 984,
    "lines": "if (nodes[LEFT].opType == OpTypes.VALUE\n                    && nodes[RIGHT].opType == OpTypes.VALUE) {\n                setAsConstantValue(session, parent);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 569,
    "lines": "if (nodes[LEFT].opType == OpTypes.VALUE\n                && nodes[RIGHT].opType == OpTypes.VALUE) {\n            setAsConstantValue(session, parent);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java & more ...",
  "id": 238,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDataStructures.java",
    "startLineNumber": 405,
    "lines": "for (int i = 0; i < 12; i++) {\n            d.add(new Integer(i));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDataStructures.java",
    "startLineNumber": 395,
    "lines": "for (int i = 0; i < 12; i++) {\n            d.add(new Integer(i));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDataStructures.java, /hsqldb/src/org/hsqldb/test/TestDataStructures.java",
  "id": 239,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3632,
    "lines": "new StringBuffer(name).append('(').append(\n                    nodes[0].getSQL()).append(Tokens.T_COMMA).append(\n                    nodes[1].getSQL())"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3647,
    "lines": "new StringBuffer(name).append('(').append(\n                    nodes[0].getSQL()).append(Tokens.T_COMMA).append(\n                    nodes[1].getSQL())"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 240,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 145,
    "lines": "if (a == b) {\n            return 0;\n        }\n\n        if (a == null) {\n            return -1;\n        }\n\n        if (b == null) {\n            return 1;\n        }\n\n        Object[] arra   = (Object[]) a;\n        Object[] arrb   = (Object[]) b;\n        int      length = arra.length;\n\n        if (arrb.length < length) {\n            length = arrb.length;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 119,
    "lines": "if (a == b) {\n            return 0;\n        }\n\n        if (a == null) {\n            return -1;\n        }\n\n        if (b == null) {\n            return 1;\n        }\n\n        Object[] arra   = (Object[]) a;\n        Object[] arrb   = (Object[]) b;\n        int      length = arra.length;\n\n        if (arrb.length < length) {\n            length = arrb.length;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ArrayType.java, /hsqldb/src/org/hsqldb/types/RowType.java",
  "id": 241,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3225,
    "lines": "if (!nodes[0].dataType.isDateOrTimestampType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3254,
    "lines": "if (!nodes[0].dataType.isDateOrTimestampType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3270,
    "lines": "if (!nodes[0].dataType.isDateOrTimestampType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 242,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1685,
    "lines": "if (token.tokenType == Tokens.AND) {\n            read();\n\n            if (token.tokenType == Tokens.NO) {\n                read();\n            } else {\n                chain = true;\n            }\n\n            readThis(Tokens.CHAIN);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1800,
    "lines": "if (token.tokenType == Tokens.AND) {\n                read();\n\n                if (token.tokenType == Tokens.NO) {\n                    read();\n                } else {\n                    chain = true;\n                }\n\n                readThis(Tokens.CHAIN);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 243,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 919,
    "lines": "value = Type.SQL_BIGINT.convertToType(session, data[1],\n                                                      nodes[1].dataType);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1049,
    "lines": "value = Type.SQL_BIGINT.convertToType(session, data[1],\n                                                      nodes[1].dataType);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 244,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 209,
    "lines": "assertEquals(Integer.class, rs.getObject(\"si\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 947,
    "lines": "assertEquals(Integer.class, rs.getObject(\"si\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 245,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 425,
    "lines": "{\n\n                // bad character\n                token.tokenType   = Tokens.X_MALFORMED_BINARY_STRING;\n                token.isMalformed = true;\n\n                return;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 455,
    "lines": "{\n\n            // no end quote\n            token.tokenType   = Tokens.X_MALFORMED_BINARY_STRING;\n            token.isMalformed = true;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 446,
    "lines": "{\n\n            // odd nibbles\n            token.tokenType   = Tokens.X_MALFORMED_BINARY_STRING;\n            token.isMalformed = true;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 390,
    "lines": "{\n            token.tokenType   = Tokens.X_MALFORMED_BINARY_STRING;\n            token.isMalformed = true;\n\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java & more ...",
  "id": 246,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 323,
    "lines": "double completion_time = ((double) end_time - (double) start_time)\n                                 / 1000;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 297,
    "lines": "double completion_time = ((double) end_time - (double) start_time)\n                                 / 1000;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 247,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ClientConnection.java",
    "startLineNumber": 561,
    "lines": "{\n            TimeZone zone = TimeZone.getTimeZone(zoneString);\n\n            calendar = new GregorianCalendar(zone);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 2063,
    "lines": "{\n                TimeZone zone = TimeZone.getTimeZone(zoneString);\n\n                calendar = new GregorianCalendar(zone);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ClientConnection.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 248,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1340,
    "lines": "session.database.txManager.canRead(\n                        session, store, row, TransactionManager.ACTION_READ,\n                        null)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1419,
    "lines": "session.database.txManager.canRead(\n                    session, store, row, TransactionManager.ACTION_READ,\n                    null)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1275,
    "lines": "session.database.txManager.canRead(\n                        session, store, row, TransactionManager.ACTION_READ,\n                        null)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1387,
    "lines": "session.database.txManager.canRead(\n                    session, store, row, TransactionManager.ACTION_READ,\n                    null)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java & more ...",
  "id": 249,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 635,
    "lines": "if (randomAccessFile != null) {\n                try {\n                    randomAccessFile.close();\n                } catch (Exception ex) {}\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 508,
    "lines": "if (randomAccessFile != null) {\n                try {\n                    randomAccessFile.close();\n                } catch (Exception ex) {}\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
  "id": 250,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1287,
    "lines": "(schema != null) && !schema.trim().equals(\"\")"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2551,
    "lines": "(schema != null) && !schema.trim().equals(\"\")"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 251,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1313,
    "lines": "{\n                    throw Error.error(ErrorCode.X_42566, (String) data[1]);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1189,
    "lines": "{\n                        throw Error.error(ErrorCode.X_42566, (String) data[1]);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 252,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 1010,
    "lines": "throw Error.error(null, ErrorCode.X_23513,\n                                  ErrorCode.CONSTRAINT, info);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 800,
    "lines": "throw Error.error(null, ErrorCode.X_23513, ErrorCode.CONSTRAINT,\n                              info);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Constraint.java, /hsqldb/src/org/hsqldb/Constraint.java",
  "id": 253,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1146,
    "lines": "System.arraycopy(array, lookup + 1, array, lookup,\n                             lastPointer - lookup);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1137,
    "lines": "System.arraycopy(array, lookup + 1, array, lookup,\n                             lastPointer - lookup);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1119,
    "lines": "System.arraycopy(array, lookup + 1, array, lookup,\n                             lastPointer - lookup);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1155,
    "lines": "System.arraycopy(array, lookup + 1, array, lookup,\n                             lastPointer - lookup);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1128,
    "lines": "System.arraycopy(array, lookup + 1, array, lookup,\n                             lastPointer - lookup);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1164,
    "lines": "System.arraycopy(array, lookup + 1, array, lookup,\n                             lastPointer - lookup);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java & more ...",
  "id": 254,
  "numClones": 6,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 396,
    "lines": "if (label != null\n                           && label.name.equals(result.getMainString())) {\n                    result = Result.updateZeroResult;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 607,
    "lines": "if (label != null\n                            && label.name.equals(result.getMainString())) {\n                        result = Result.updateZeroResult;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCompound.java, /hsqldb/src/org/hsqldb/StatementCompound.java",
  "id": 255,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1578,
    "lines": "if (session.database.txManager.canRead(\n                        session, store, row, TransactionManager.ACTION_DUP,\n                        null)) {\n                    return true;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1604,
    "lines": "if (session.database.txManager.canRead(\n                        session, store, row, TransactionManager.ACTION_DUP,\n                        null)) {\n                    return true;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1556,
    "lines": "if (session.database.txManager.canRead(session, store, row,\n                                               TransactionManager.ACTION_DUP,\n                                               null)) {\n            return true;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java & more ...",
  "id": 256,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 589,
    "lines": "{\n                if (action.type == ACTION_DELETE) {\n                    if (actionType == ACTION_INSERT) {\n                        actionType = ACTION_INSERT_DELETE;\n                    } else {\n                        actionType = action.type;\n                    }\n                } else if (action.type == ACTION_INSERT) {\n                    actionType = action.type;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 557,
    "lines": "{\n                if (action.type == ACTION_DELETE) {\n                    if (actionType == ACTION_INSERT) {\n                        actionType = ACTION_INSERT_DELETE;\n                    } else {\n                        actionType = action.type;\n                    }\n                } else if (action.type == ACTION_INSERT) {\n                    actionType = action.type;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAction.java, /hsqldb/src/org/hsqldb/RowAction.java",
  "id": 257,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7129,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7019,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5439,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3922,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5546,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8186,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6910,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5338,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3060,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8304,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1792,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5\n            }, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 258,
  "numClones": 11,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 733,
    "lines": "catch (SQLException e) {\n            System.out.println(\"error : \" + random);\n            e.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 821,
    "lines": "catch (SQLException e) {\n            System.out.println(\"error : \" + random);\n            e.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 958,
    "lines": "catch (SQLException e) {\n            System.out.println(\"error : \" + random);\n            e.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 914,
    "lines": "catch (SQLException e) {\n            System.out.println(\"error : \" + random);\n            e.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 775,
    "lines": "catch (SQLException e) {\n            System.out.println(\"error : \" + random);\n            e.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 863,
    "lines": "catch (SQLException e) {\n            System.out.println(\"error : \" + random);\n            e.printStackTrace();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java & more ...",
  "id": 259,
  "numClones": 6,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SetFunction.java",
    "startLineNumber": 164,
    "lines": "if (Math.abs(currentLong)\n                                    >= DTIType.nanoScaleFactors[0]) {\n                                addLong(currentLong\n                                        / DTIType.nanoScaleFactors[0]);\n\n                                currentLong %= DTIType.nanoScaleFactors[0];\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SetFunction.java",
    "startLineNumber": 184,
    "lines": "if (Math.abs(currentLong)\n                                >= DTIType.nanoScaleFactors[0]) {\n                            addLong(currentLong / DTIType.nanoScaleFactors[0]);\n\n                            currentLong %= DTIType.nanoScaleFactors[0];\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SetFunction.java, /hsqldb/src/org/hsqldb/SetFunction.java",
  "id": 260,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3377,
    "lines": "// intermediate holders\n        Iterator tables;\n        Table    table;\n        Object[] row;\n\n        // column number mappings\n        final int grantor        = 0;\n        final int grantee        = 1;\n        final int table_catalog  = 2;\n        final int table_schema   = 3;\n        final int table_name     = 4;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2951,
    "lines": "Iterator tables;\n        Table    table;\n        Object[] row;\n\n// column number mappings\n        final int grantor        = 0;\n        final int grantee        = 1;\n        final int table_catalog  = 2;\n        final int table_schema   = 3;\n        final int table_name     = 4;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 261,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1335,
    "lines": "nodes[i].nodes[j].dataType = nodeDataTypes[j];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1342,
    "lines": "nodes[i].nodes[j].dataType = nodeDataTypes[j];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/Expression.java",
  "id": 262,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
    "startLineNumber": 457,
    "lines": "System.arraycopy(original, 0, copy, 0,\n                         Math.min(original.length, newLength));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
    "startLineNumber": 450,
    "lines": "System.arraycopy(original, 0, copy, 0,\n                         Math.min(original.length, newLength));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java, /hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
  "id": 263,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 140,
    "lines": "if (endindex == list.length) {\n            endindex = 0;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 192,
    "lines": "if (endindex == list.length) {\n            endindex = 0;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongDeque.java, /hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
  "id": 264,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 344,
    "lines": "{\n                if (accessCount > ACCESS_MAX) {\n                    resetAccessCount();\n                }\n\n                accessTable[lookup] = accessCount++;\n\n                return testValue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 113,
    "lines": "{\n                if (accessCount > ACCESS_MAX) {\n                    resetAccessCount();\n                }\n\n                accessTable[lookup] = accessCount++;\n\n                return testValue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 214,
    "lines": "{\n                if (accessCount > ACCESS_MAX) {\n                    resetAccessCount();\n                }\n\n                accessTable[lookup] = accessCount++;\n\n                return testValue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 386,
    "lines": "{\n                if (accessCount > ACCESS_MAX) {\n                    resetAccessCount();\n                }\n\n                accessTable[lookup] = accessCount++;\n\n                return testValue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 302,
    "lines": "{\n                if (accessCount > ACCESS_MAX) {\n                    resetAccessCount();\n                }\n\n                accessTable[lookup] = accessCount++;\n\n                return testValue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 155,
    "lines": "{\n                if (accessCount > ACCESS_MAX) {\n                    resetAccessCount();\n                }\n\n                accessTable[lookup] = accessCount++;\n\n                return testValue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 259,
    "lines": "{\n                if (accessCount > ACCESS_MAX) {\n                    resetAccessCount();\n                }\n\n                accessTable[lookup] = accessCount++;\n\n                return testValue;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java, /hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java & more ...",
  "id": 265,
  "numClones": 7,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1423,
    "lines": "table =\n                        (Table) schema.tableList.get(objectName.parent.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1410,
    "lines": "table =\n                        (Table) schema.tableList.get(objectName.parent.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1440,
    "lines": "table =\n                        (Table) schema.tableList.get(objectName.parent.name);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java & more ...",
  "id": 266,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2213,
    "lines": "checkClosed();\n\n        if (savepoint == null) {\n            throw JDBCUtil.nullArgument();\n        }\n\n        if (!(savepoint instanceof JDBCSavepoint)) {\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }\n        sp = (JDBCSavepoint) savepoint;\n\n        if (JDBCDatabaseMetaData.JDBC_MAJOR >= 4 && sp.name == null) {\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }\n\n        if (this != sp.connection) {\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }\n\n        if (JDBCDatabaseMetaData.JDBC_MAJOR >= 4 && getAutoCommit()) {\n            sp.name       = null;\n            sp.connection = null;\n\n            throw JDBCUtil.sqlException(ErrorCode.X_3B001);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2124,
    "lines": "checkClosed();\n\n        if (savepoint == null) {\n            throw JDBCUtil.nullArgument();\n        }\n\n        if (!(savepoint instanceof JDBCSavepoint)) {\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }\n        sp = (JDBCSavepoint) savepoint;\n\n        if (JDBCDatabaseMetaData.JDBC_MAJOR >= 4 && sp.name == null) {\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }\n\n        if (this != sp.connection) {\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }\n\n        if (JDBCDatabaseMetaData.JDBC_MAJOR >= 4 && getAutoCommit()) {\n            sp.name       = null;\n            sp.connection = null;\n\n            throw JDBCUtil.sqlException(ErrorCode.X_3B001);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java, /hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
  "id": 267,
  "numClones": 2,
  "cloneSize": 22
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 218,
    "lines": "if (patternIndex > 0) {\n                patternIndex = table[patternIndex];\n\n                patternIndex++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 149,
    "lines": "if (patternIndex > 0) {\n                patternIndex = table[patternIndex];\n\n                patternIndex++;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java, /hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
  "id": 268,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 702,
    "lines": "st1 = conn.createStatement();\n            rs  = st1.executeQuery(\"select sum(bbalance) from branches\");\n\n            rs.next();\n\n            bbalancesum = rs.getInt(1);\n\n            rs.close();\n\n            rs = st1.executeQuery(\"select sum(tbalance) from tellers\");\n\n            rs.next();\n\n            tbalancesum = rs.getInt(1);\n\n            rs.close();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 793,
    "lines": "st1 = conn.createStatement();\n            rs  = st1.executeQuery(\"select sum(bbalance) from branches\");\n\n            rs.next();\n\n            bbalancesum = rs.getInt(1);\n\n            rs.close();\n\n            rs = st1.executeQuery(\"select sum(tbalance) from tellers\");\n\n            rs.next();\n\n            tbalancesum = rs.getInt(1);\n\n            rs.close();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 269,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 1094,
    "lines": "for (--endindex; endindex >= 0 && s.charAt(endindex) == trim;\n                endindex--) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 928,
    "lines": "for (--endindex; endindex >= 0 && s.charAt(endindex) == trim;\n                    endindex--) {}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 270,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1627,
    "lines": "nodes[1].dataType.typeCode == Types.SQL_CLOB\n                            || nodes[1].dataType.isBinaryType()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1217,
    "lines": "nodes[1].dataType.typeCode == Types.SQL_CLOB\n                            || nodes[1].dataType.isBinaryType()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 271,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 1124,
    "lines": "if (object != null) {\n                if (keep) {\n                    object.keepInMemory(true);\n                }\n\n                return object;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 1029,
    "lines": "if (object != null) {\n                if (keep) {\n                    object.keepInMemory(true);\n                }\n\n                return object;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 1053,
    "lines": "if (object != null) {\n                if (keep) {\n                    object.keepInMemory(true);\n                }\n\n                return object;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 1002,
    "lines": "if (object != null) {\n                if (keep) {\n                    object.keepInMemory(true);\n                }\n\n                return object;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 974,
    "lines": "if (object != null) {\n                if (keep) {\n                    object.keepInMemory(true);\n                }\n\n                return object;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java, /hsqldb/src/org/hsqldb/persist/DataFileCache.java & more ...",
  "id": 272,
  "numClones": 5,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 672,
    "lines": "((String) a).getChars(0, slen, b, 0);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 428,
    "lines": "((String) a).getChars(0, slen, b, 0);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 273,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 822,
    "lines": "/**\n     * Returns an object that implements the given interface to allow access to\n     * non-standard methods, or standard methods not exposed by the proxy.\n     *\n     * If the receiver implements the interface then the result is the receiver\n     * or a proxy for the receiver. If the receiver is a wrapper\n     * and the wrapped object implements the interface then the result is the\n     * wrapped object or a proxy for the wrapped object. Otherwise return the\n     * the result of calling <code>unwrap</code> recursively on the wrapped object\n     * or a proxy for that result. If the receiver is not a\n     * wrapper and does not implement the interface, then an <code>SQLException</code> is thrown.\n     *\n     * @param iface A Class defining an interface that the result must implement.\n     * @return an object that implements the interface. May be a proxy for the actual implementing object.\n     * @throws java.sql.SQLException If no object found that implements the interface\n     * @since JDK 1.6, HSQLDB 1.8.x\n     */\n//#ifdef JAVA6\n    @SuppressWarnings(\"unchecked\")\n    public <T>T unwrap(java.lang.Class<T> iface) throws java.sql.SQLException {\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDataSource.java",
    "startLineNumber": 198,
    "lines": "/**\n     * Returns an object that implements the given interface to allow access to\n     * non-standard methods, or standard methods not exposed by the proxy.\n     *\n     * If the receiver implements the interface then the result is the receiver\n     * or a proxy for the receiver. If the receiver is a wrapper\n     * and the wrapped object implements the interface then the result is the\n     * wrapped object or a proxy for the wrapped object. Otherwise return the\n     * the result of calling <code>unwrap</code> recursively on the wrapped object\n     * or a proxy for that result. If the receiver is not a\n     * wrapper and does not implement the interface, then an <code>SQLException</code> is thrown.\n     *\n     * @param iface A Class defining an interface that the result must implement.\n     * @return an object that implements the interface. May be a proxy for the actual implementing object.\n     * @throws java.sql.SQLException If no object found that implements the interface\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n//#ifdef JAVA6\n    @SuppressWarnings(\"unchecked\")\n    public <T>T unwrap(java.lang.Class<T> iface) throws java.sql.SQLException {\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDatabaseMetaData.java",
    "startLineNumber": 5786,
    "lines": "/**\n     * Returns an object that implements the given interface to allow access to non-standard methods,\n     * or standard methods not exposed by the proxy.\n     * The result may be either the object found to implement the interface or a proxy for that object.\n     * If the receiver implements the interface then that is the object. If the receiver is a wrapper\n     * and the wrapped object implements the interface then that is the object. Otherwise the object is\n     *  the result of calling <code>unwrap</code> recursively on the wrapped object. If the receiver is not a\n     * wrapper and does not implement the interface, then an <code>SQLException</code> is thrown.\n     *\n     * @param iface A Class defining an interface that the result must implement.\n     * @return an object that implements the interface. May be a proxy for the actual implementing object.\n     * @throws java.sql.SQLException If no object found that implements the interface\n     * @since JDK 1.6, HSQLDB 1.9\n     */\n//#ifdef JAVA6\n    @SuppressWarnings(\"unchecked\")\n    public <T>T unwrap(java.lang.Class<T> iface) throws java.sql.SQLException {\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 6956,
    "lines": "/**\n     * Returns an object that implements the given interface to allow access to\n     * non-standard methods, or standard methods not exposed by the proxy.\n     *\n     * If the receiver implements the interface then the result is the receiver\n     * or a proxy for the receiver. If the receiver is a wrapper\n     * and the wrapped object implements the interface then the result is the\n     * wrapped object or a proxy for the wrapped object. Otherwise return the\n     * the result of calling <code>unwrap</code> recursively on the wrapped object\n     * or a proxy for that result. If the receiver is not a\n     * wrapper and does not implement the interface, then an <code>SQLException</code> is thrown.\n     *\n     * @param iface A Class defining an interface that the result must implement.\n     * @return an object that implements the interface. May be a proxy for the actual implementing object.\n     * @throws java.sql.SQLException If no object found that implements the interface\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n//#ifdef JAVA6\n    @SuppressWarnings(\"unchecked\")\n    public <T>T unwrap(java.lang.Class<T> iface) throws java.sql.SQLException {\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPool.java",
    "startLineNumber": 156,
    "lines": "/**\n     * Returns an object that implements the given interface to allow access to\n     * non-standard methods, or standard methods not exposed by the proxy.\n     *\n     * If the receiver implements the interface then the result is the receiver\n     * or a proxy for the receiver. If the receiver is a wrapper\n     * and the wrapped object implements the interface then the result is the\n     * wrapped object or a proxy for the wrapped object. Otherwise return the\n     * the result of calling <code>unwrap</code> recursively on the wrapped object\n     * or a proxy for that result. If the receiver is not a\n     * wrapper and does not implement the interface, then an <code>SQLException</code> is thrown.\n     *\n     * @param iface A Class defining an interface that the result must implement.\n     * @return an object that implements the interface. May be a proxy for the actual implementing object.\n     * @throws java.sql.SQLException If no object found that implements the interface\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T>T unwrap(java.lang.Class<T> iface) throws java.sql.SQLException {\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 266,
    "lines": "/**\n     * Returns an object that implements the given interface to allow access to\n     * non-standard methods, or standard methods not exposed by the proxy.\n     *\n     * If the receiver implements the interface then the result is the receiver\n     * or a proxy for the receiver. If the receiver is a wrapper\n     * and the wrapped object implements the interface then the result is the\n     * wrapped object or a proxy for the wrapped object. Otherwise return the\n     * the result of calling <code>unwrap</code> recursively on the wrapped object\n     * or a proxy for that result. If the receiver is not a\n     * wrapper and does not implement the interface, then an <code>SQLException</code> is thrown.\n     *\n     * @param iface A Class defining an interface that the result must implement.\n     * @return an object that implements the interface. May be a proxy for the actual implementing object.\n     * @throws java.sql.SQLException If no object found that implements the interface\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n//#ifdef JAVA6\n    @SuppressWarnings(\"unchecked\")\n    public <T>T unwrap(java.lang.Class<T> iface) throws java.sql.SQLException {\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCDataSource.java & more ...",
  "id": 274,
  "numClones": 6,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 111,
    "lines": "String right = getContextSQL(nodes.length > 1 ? nodes[RIGHT]\n                                                      : null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 192,
    "lines": "String       right = getContextSQL(nodes.length > 1 ? nodes[RIGHT]\n                                                            : null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 369,
    "lines": "String right = getContextSQL(nodes.length > 1 ? nodes[RIGHT]\n                                                      : null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionOp.java & more ...",
  "id": 275,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1523,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 60 * 60;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1515,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 60 * 60;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1519,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 60 * 60;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java & more ...",
  "id": 276,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DataOutputStream.java",
    "startLineNumber": 96,
    "lines": "tempBuffer[count++] = (byte) (v >>> 8);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DataOutputStream.java",
    "startLineNumber": 113,
    "lines": "tempBuffer[count++] = (byte) (v >>> 8);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DataOutputStream.java",
    "startLineNumber": 82,
    "lines": "tempBuffer[count++] = (byte) (v >>> 8);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DataOutputStream.java",
    "startLineNumber": 67,
    "lines": "tempBuffer[count++] = (byte) (v >>> 8);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/DataOutputStream.java, /hsqldb/src/org/hsqldb/lib/DataOutputStream.java & more ...",
  "id": 277,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 682,
    "lines": "if (r != null && !p.equals(r.getParent(store))) {\n            System.out.print(\"broken index - no parent\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
    "startLineNumber": 168,
    "lines": "if (r != null && !p.equals(r.getParent(store))) {\n            System.out.print(\"broken index - no parent\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
  "id": 278,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5738,
    "lines": "(dataVals[i].length() < 1 && autonulls[i])\n                                      || dataVals[i].equals(nullRepToken)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5639,
    "lines": "(dataVals[i].length() < 1 && autonulls[i])\n                              || dataVals[i].equals(nullRepToken)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5667,
    "lines": "(dataVals[i].length() < 1 && autonulls[i])\n                              || dataVals[i].equals(nullRepToken)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 279,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementExpression.java",
    "startLineNumber": 132,
    "lines": "public Result execute(Session session) {\n\n        Result result;\n\n        try {\n            if (subqueries.length > 0) {\n                materializeSubQueries(session);\n            }\n\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }\n\n        if (result.isError()) {\n            result.getException().setStatementType(group, type);\n        }\n\n        return result;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSet.java",
    "startLineNumber": 285,
    "lines": "public Result execute(Session session) {\n\n        Result result;\n\n        try {\n            if (subqueries.length > 0) {\n                materializeSubQueries(session);\n            }\n\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }\n\n        if (result.isError()) {\n            result.getException().setStatementType(group, type);\n        }\n\n        return result;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementExpression.java, /hsqldb/src/org/hsqldb/StatementSet.java",
  "id": 280,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java",
    "startLineNumber": 171,
    "lines": "catch (Throwable e) {\n            database.logger.logWarningEvent(JVM_ERROR, e);\n\n            IOException io = new IOException(e.toString());\n\n            try {\n                io.initCause(e);\n            } catch (Throwable e1) {}\n\n            throw io;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java",
    "startLineNumber": 134,
    "lines": "catch (Throwable e) {\n            database.logger.logWarningEvent(JVM_ERROR, e);\n\n            IOException io = new IOException(e.toString());\n\n            try {\n                io.initCause(e);\n            } catch (Throwable e1) {}\n\n            throw io;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java",
    "startLineNumber": 192,
    "lines": "catch (Throwable e) {\n            database.logger.logWarningEvent(JVM_ERROR, e);\n\n            IOException io = new IOException(e.toString());\n\n            try {\n                io.initCause(e);\n            } catch (Throwable e1) {}\n\n            throw io;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RAFileNIO.java, /hsqldb/src/org/hsqldb/persist/RAFileNIO.java & more ...",
  "id": 281,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5218,
    "lines": "routineSchema =\n                    (RoutineSchema) database.schemaManager.findSchemaObject(\n                        name, schema.name, SchemaObject.FUNCTION);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5211,
    "lines": "routineSchema =\n                (RoutineSchema) database.schemaManager.findSchemaObject(name,\n                    schema.name, SchemaObject.FUNCTION);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 282,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 468,
    "lines": "for (int i = 0; i < targets.length; i++) {\n            this.resolveOuterReferencesAndTypes(rangeGroups, targets[i]);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 966,
    "lines": "for (int i = 0; i < targets.length; i++) {\n                this.resolveOuterReferencesAndTypes(rangeGroups, targets[i]);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 559,
    "lines": "for (int i = 0; i < targets.length; i++) {\n            this.resolveOuterReferencesAndTypes(rangeGroups, targets[i]);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserDML.java & more ...",
  "id": 283,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 278,
    "lines": "if (nodes[LEFT].opType == OpTypes.VALUE) {\n                    setAsConstantValue(session, parent);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 776,
    "lines": "if (nodes[LEFT].opType == OpTypes.VALUE) {\n                            setAsConstantValue(session, parent);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 284,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCPooledDataSource.java",
    "startLineNumber": 73,
    "lines": "JDBCConnection connection =\n            (JDBCConnection) JDBCDriver.getConnection(url, connectionProps);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCXADataSource.java",
    "startLineNumber": 99,
    "lines": "// Use JDBCDriver directly so there is no need to regiser with DriverManager\n        JDBCConnection connection =\n            (JDBCConnection) JDBCDriver.getConnection(url, connectionProps);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCPooledDataSource.java, /hsqldb/src/org/hsqldb/jdbc/pool/JDBCXADataSource.java",
  "id": 285,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 1054,
    "lines": "{\n              yybegin(YYINITIAL);\n    return new Token(Token.UNTERM_TYPE, commandBuffer, yyline);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 1074,
    "lines": "{\n              yybegin(YYINITIAL);\n    return new Token(Token.UNTERM_TYPE, commandBuffer, yyline);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 1059,
    "lines": "{\n              yybegin(YYINITIAL);\n    return new Token(Token.UNTERM_TYPE, commandBuffer, yyline);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 1079,
    "lines": "{\n              yybegin(YYINITIAL);\n    return new Token(Token.UNTERM_TYPE, commandBuffer, yyline);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 1064,
    "lines": "{\n              yybegin(YYINITIAL);\n    return new Token(Token.UNTERM_TYPE, commandBuffer, yyline);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 1084,
    "lines": "{\n              yybegin(YYINITIAL);\n    return new Token(Token.UNTERM_TYPE, commandBuffer, yyline);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 1069,
    "lines": "{\n              yybegin(YYINITIAL);\n    return new Token(Token.UNTERM_TYPE, commandBuffer, yyline);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 1089,
    "lines": "{\n              yybegin(YYINITIAL);\n    return new Token(Token.UNTERM_TYPE, commandBuffer, yyline);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java, /hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java & more ...",
  "id": 286,
  "numClones": 8,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobDataID.java",
    "startLineNumber": 239,
    "lines": "public void setBinaryStream(SessionInterface session, long pos,\n                                InputStream in) {\n\n        //\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryData.java",
    "startLineNumber": 211,
    "lines": "public void setBinaryStream(SessionInterface session, long pos,\n                                InputStream in) {\n\n        //\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobDataID.java, /hsqldb/src/org/hsqldb/types/BinaryData.java",
  "id": 287,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 454,
    "lines": "if (!destDb.getAutoCommit()) {\n            destDb.commit();\n\n            try {\n                destDb.setAutoCommit(true);\n            } catch (Exception e) {}\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 353,
    "lines": "if (!destDb.getAutoCommit()) {\n            destDb.commit();\n\n            try {\n                destDb.setAutoCommit(true);\n            } catch (Exception e) {}\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 335,
    "lines": "if (!destDb.getAutoCommit()) {\n                    destDb.commit();\n\n                    try {\n                        destDb.setAutoCommit(true);\n                    } catch (Exception e) {}\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 299,
    "lines": "if (!destDb.getAutoCommit()) {\n            destDb.commit();\n\n            try {\n                destDb.setAutoCommit(true);\n            } catch (Exception e) {}\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferTable.java, /hsqldb/src/org/hsqldb/util/TransferTable.java & more ...",
  "id": 288,
  "numClones": 4,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/OdbcUtil.java",
    "startLineNumber": 257,
    "lines": "if (c >= 'a' && c <= 'f') {\n                octet += 10 + c - 'a';\n            } else if (c >= 'A' && c <= 'F') {\n                octet += 10 + c - 'A';\n            } else if (c >= '0' && c <= '9') {\n                octet += c - '0';\n            } else {\n                throw new IllegalArgumentException(\n                    \"Non-hex character in input at offset \" + i + \": \" + c);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/OdbcUtil.java",
    "startLineNumber": 269,
    "lines": "if (c >= 'a' && c <= 'f') {\n                octet += 10 + c - 'a';\n            } else if (c >= 'A' && c <= 'F') {\n                octet += 10 + c - 'A';\n            } else if (c >= '0' && c <= '9') {\n                octet += c - '0';\n            } else {\n                throw new IllegalArgumentException(\n                    \"Non-hex character in input at offset \" + i + \": \" + c);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/OdbcUtil.java, /hsqldb/src/org/hsqldb/server/OdbcUtil.java",
  "id": 289,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4963,
    "lines": "{\n            if (token.tokenType == Tokens.CASCADE) {\n                cascade = true;\n\n                read();\n            } else {\n                readThis(Tokens.RESTRICT);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4860,
    "lines": "{\n            if (token.tokenType == Tokens.CASCADE) {\n                cascade = true;\n\n                read();\n            } else {\n                readThis(Tokens.RESTRICT);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 290,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2137,
    "lines": "{\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2232,
    "lines": "{\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2143,
    "lines": "{\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2219,
    "lines": "{\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2226,
    "lines": "{\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2130,
    "lines": "{\n            String msg = Error.getMessage(ErrorCode.X_3B001);\n\n            throw JDBCUtil.invalidArgument(msg);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java, /hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java & more ...",
  "id": 291,
  "numClones": 6,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/CharArrayWriter.java",
    "startLineNumber": 157,
    "lines": "{\n        count       = 0;\n        this.buffer = buffer;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 398,
    "lines": "{\n        count       = 0;\n        this.buffer = buffer;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/CharArrayWriter.java, /hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
  "id": 292,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDima.java",
    "startLineNumber": 103,
    "lines": "while (rs.next()) {\n                System.out.println(rs.getInt(1));\n                System.out.println(rs.getInt(2));\n                System.out.println(rs.getString(3));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDima.java",
    "startLineNumber": 113,
    "lines": "while (rs.next()) {\n                System.out.println(rs.getInt(1));\n                System.out.println(rs.getInt(2));\n                System.out.println(rs.getString(3));\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDima.java, /hsqldb/src/org/hsqldb/test/TestDima.java",
  "id": 293,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5156,
    "lines": "{\n                    Expression e = readSQLFunction(function);\n\n                    if (e != null) {\n                        return e;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5175,
    "lines": "{\n                    Expression e = readSQLFunction(function);\n\n                    if (e != null) {\n                        return e;\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 294,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 336,
    "lines": "joinConditions.length == 1\n                && joinConditions[0].indexedColumnCount > 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 272,
    "lines": "joinConditions.length == 1\n               && joinConditions[0].indexedColumnCount > 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariable.java",
  "id": 295,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 797,
    "lines": "chars[j++] = (char) HEXBYTES[hexIndex];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 795,
    "lines": "chars[j++] = (char) HEXBYTES[hexIndex];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/StringConverter.java, /hsqldb/src/org/hsqldb/lib/StringConverter.java",
  "id": 296,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 3899,
    "lines": "{\n                SQLWarning w = JDBCUtil.sqlWarning(current);\n\n                if (rootWarning == null) {\n                    rootWarning = w;\n                } else {\n                    rootWarning.setNextWarning(w);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatementBase.java",
    "startLineNumber": 181,
    "lines": "{\n                SQLWarning w = JDBCUtil.sqlWarning(current);\n\n                if (rootWarning == null) {\n                    rootWarning = w;\n                } else {\n                    rootWarning.setNextWarning(w);\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCStatementBase.java",
  "id": 297,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 183,
    "lines": "if (!session.tempSet.isEmpty()) {\n                                    session.tempSet.clear();\n                                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 165,
    "lines": "if (!session.tempSet.isEmpty()) {\n                                    session.tempSet.clear();\n                                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 245,
    "lines": "if (!session.tempSet.isEmpty()) {\n                            session.tempSet.clear();\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAction.java, /hsqldb/src/org/hsqldb/RowAction.java & more ...",
  "id": 298,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3036,
    "lines": "throw new BadSpecial(SqltoolRB.pl_unknown.getString(tokens[0]));\n        // I think this would already be caught in the setvar block above."
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2726,
    "lines": "throw new BadSpecial(SqltoolRB.pl_unknown.getString(tokens[0]));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2942,
    "lines": "throw new BadSpecial(SqltoolRB.pl_unknown.getString(tokens[0]));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2950,
    "lines": "throw new BadSpecial(SqltoolRB.pl_unknown.getString(tokens[0]));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 299,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 686,
    "lines": "int      objectType = ((Integer) arguments[1]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 730,
    "lines": "int      objectType = ((Integer) arguments[1]).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchema.java, /hsqldb/src/org/hsqldb/StatementSchema.java",
  "id": 300,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 491,
    "lines": "{\n            token.tokenType   = Tokens.X_MALFORMED_BIT_STRING;\n            token.isMalformed = true;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 537,
    "lines": "{\n            token.tokenType   = Tokens.X_MALFORMED_BIT_STRING;\n            token.isMalformed = true;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 529,
    "lines": "{\n                token.tokenType   = Tokens.X_MALFORMED_BIT_STRING;\n                token.isMalformed = true;\n\n                return;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java & more ...",
  "id": 301,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
    "startLineNumber": 389,
    "lines": "/**\n     * Closes this object and releases the underlying buffer for\n     * garbage collection. <p>\n     *\n     * @throws java.io.IOException if an I/O error occurs while closing\n     *      this stream (default: never).\n     */\n    public synchronized void free() throws IOException {\n\n        closed = true;\n        freed  = true;\n        buf    = null;\n        count  = 0;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
    "startLineNumber": 403,
    "lines": "/**\n     * Closes this object and releases the underlying buffer for\n     * garbage collection. <p>\n     *\n     * @throws java.io.IOException if an I/O error occurs while closing\n     *      this writer (default: never).\n     */\n    public synchronized void free() throws IOException {\n\n        closed = true;\n        freed  = true;\n        buf    = null;\n        count  = 0;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java, /hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
  "id": 302,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaObjectSet.java",
    "startLineNumber": 174,
    "lines": "if (map.containsKey(name.name)) {\n            int code = getAddErrorCode(name.type);\n\n            throw Error.error(code, name.name);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaObjectSet.java",
    "startLineNumber": 146,
    "lines": "if (map.containsKey(name.name)) {\n            int code = getAddErrorCode(name.type);\n\n            throw Error.error(code, name.name);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaObjectSet.java, /hsqldb/src/org/hsqldb/SchemaObjectSet.java",
  "id": 303,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 614,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.FILE_IO_ERROR, logFileName);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 640,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.FILE_IO_ERROR, logFileName);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 599,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.FILE_IO_ERROR, logFileName);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 655,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.FILE_IO_ERROR, logFileName);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 627,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.FILE_IO_ERROR, logFileName);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Log.java, /hsqldb/src/org/hsqldb/persist/Log.java & more ...",
  "id": 304,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 109,
    "lines": "while (rs.next()) {\n                String s = rs.getString(2);\n\n                System.out.println(s);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 163,
    "lines": "while (rs.next()) {\n                String s = rs.getString(2);\n\n                System.out.println(s);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 99,
    "lines": "while (rs.next()) {\n                String s = rs.getString(2);\n\n                System.out.println(s);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java, /hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java & more ...",
  "id": 305,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntValueHashMap.java",
    "startLineNumber": 125,
    "lines": "{\n\n        if (key == null) {\n            throw new NoSuchElementException();\n        }\n\n        int oldSize = size();\n\n        super.addOrRemove(0, value, key, null, false);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongValueHashMap.java",
    "startLineNumber": 124,
    "lines": "{\n\n        if (key == null) {\n            throw new NoSuchElementException();\n        }\n\n        int oldSize = size();\n\n        super.addOrRemove(0, value, key, null, false);\n\n        return oldSize != size();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntValueHashMap.java, /hsqldb/src/org/hsqldb/lib/LongValueHashMap.java",
  "id": 306,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 337,
    "lines": "if (index == -1) {\n                    throw Error.error(ErrorCode.X_42501);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 326,
    "lines": "if (index == -1) {\n                    throw Error.error(ErrorCode.X_42501);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QueryExpression.java, /hsqldb/src/org/hsqldb/QueryExpression.java",
  "id": 307,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 759,
    "lines": "if (token.tokenType == Tokens.RESTRICT) {\n                            read();\n                        } else if (token.tokenType == Tokens.CASCADE) {\n                            read();\n\n                            cascade = true;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 797,
    "lines": "if (token.tokenType == Tokens.RESTRICT) {\n            read();\n        } else if (token.tokenType == Tokens.CASCADE) {\n            read();\n\n            cascade = true;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 832,
    "lines": "if (token.tokenType == Tokens.RESTRICT) {\n            read();\n        } else if (token.tokenType == Tokens.CASCADE) {\n            read();\n\n            cascade = true;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 308,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
    "startLineNumber": 116,
    "lines": "if (size < 0) {\n            throw new IllegalArgumentException(\"Negative initial size: \"\n                                               + size);    // NOI18N\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
    "startLineNumber": 111,
    "lines": "if (size < 0) {\n            throw new IllegalArgumentException(\"Negative initial size: \"\n                                               + size);    // NOI18N\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java, /hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
  "id": 309,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputText.java",
    "startLineNumber": 181,
    "lines": "catch (Exception e) {\n            Object[] messages = new Object[] {\n                new Integer(field), e.toString()\n            };\n\n            throw new IOException(\n                Error.getMessage(\n                    ErrorCode.M_TEXT_SOURCE_FIELD_ERROR, 0, messages));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputTextQuoted.java",
    "startLineNumber": 140,
    "lines": "catch (Exception e) {\n            Object[] messages = new Object[] {\n                new Integer(field), e.toString()\n            };\n\n            throw new IOException(\n                Error.getMessage(\n                    ErrorCode.M_TEXT_SOURCE_FIELD_ERROR, 0, messages));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowInputText.java, /hsqldb/src/org/hsqldb/rowio/RowInputTextQuoted.java",
  "id": 310,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 764,
    "lines": "Object[] row = (Object[]) dbMeta.get(key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 773,
    "lines": "Object[] row = (Object[]) dbMeta.get(key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 782,
    "lines": "Object[] row = (Object[]) dbMeta.get(key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 755,
    "lines": "Object[] row = (Object[]) dbMeta.get(key);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java & more ...",
  "id": 311,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 697,
    "lines": "int[][] aAddresses = getBlockAddresses(a.getId(), 0,\n                                                   Integer.MAX_VALUE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 792,
    "lines": "int[][] aAddresses = getBlockAddresses(a.getId(), 0,\n                                                   Integer.MAX_VALUE);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 312,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 674,
    "lines": "if (r != null && r.getBalance(store) == -2) {\n            System.out.print(\"broken index -deleted\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
    "startLineNumber": 160,
    "lines": "if (r != null && r.getBalance(store) == -2) {\n            System.out.print(\"broken index -deleted\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
  "id": 313,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 381,
    "lines": "while (hasNext()) {\n            Object[] currentData = getNext();\n            boolean  hasRow      = other.containsRow(currentData);\n\n            if (!hasRow) {\n                removeCurrent();\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 371,
    "lines": "while (hasNext()) {\n            Object[] currentData = getNext();\n            boolean  hasRow      = other.containsRow(currentData);\n\n            if (!hasRow) {\n                removeCurrent();\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
  "id": 314,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 500,
    "lines": "if (session.isInMidTransaction()) {\n                    return Result.newErrorResult(\n                        Error.error(ErrorCode.X_25001), sql);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 458,
    "lines": "if (session.isInMidTransaction()) {\n                    return Result.newErrorResult(\n                        Error.error(ErrorCode.X_25001), sql);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSession.java, /hsqldb/src/org/hsqldb/StatementSession.java",
  "id": 315,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 2150,
    "lines": "if (readIfThis(Tokens.SET)) {\n                readThis(Tokens.MESSAGE_TEXT);\n                readThis(Tokens.EQUALS);\n\n                message = XreadSimpleValueSpecificationOrNull();\n\n                if (message == null) {\n                    throw unexpectedToken();\n                }\n\n                resolveOuterReferencesAndTypes(routine, context, message);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 2119,
    "lines": "if (readIfThis(Tokens.SET)) {\n            readThis(Tokens.MESSAGE_TEXT);\n            readThis(Tokens.EQUALS);\n\n            message = XreadSimpleValueSpecificationOrNull();\n\n            if (message == null) {\n                throw unexpectedToken();\n            }\n\n            resolveOuterReferencesAndTypes(routine, context, message);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java",
  "id": 316,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 334,
    "lines": "System.out.println(failed_transactions + \" / \" + transaction_count\n                           + \" failed to complete.\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 343,
    "lines": "System.out.println(failed_transactions + \" / \" + transaction_count\n                           + \" failed to complete.\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 317,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1706,
    "lines": "if (token.tokenType == Tokens.IF) {\n            int position = getPosition();\n\n            read();\n\n            if (token.tokenType == Tokens.NOT) {\n                read();\n                readThis(Tokens.EXISTS);\n\n                ifNot = true;\n            } else {\n                rewind(position);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 916,
    "lines": "if (token.tokenType == Tokens.IF) {\n            int position = getPosition();\n\n            read();\n\n            if (token.tokenType == Tokens.NOT) {\n                read();\n                readThis(Tokens.EXISTS);\n\n                ifNot = true;\n            } else {\n                rewind(position);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 318,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 2401,
    "lines": "/**\n         * Receive notification of ignorable whitespace in element content.\n         *\n         * <p>Validating Parsers must use this method to report each chunk\n         * of whitespace in element content (see the W3C XML 1.0\n         * recommendation, section 2.10): non-validating parsers may also\n         * use this method if they are capable of parsing and using\n         * content models.</p>\n         *\n         * <p>SAX parsers may return all contiguous whitespace in a single\n         * chunk, or they may split it into several chunks; however, all of\n         * the characters in any single event must come from the same\n         * external entity, so that the Locator provides useful\n         * information.</p>\n         *\n         * <p>The application must not attempt to read from the array\n         * outside of the specified range.</p>\n         *\n         * @param ch the characters from the XML document\n         * @param start the start position in the array\n         * @param length the number of characters to read from the array\n         * @throws org.xml.sax.SAXException any SAX exception, possibly\n         *            wrapping another exception\n         * @see #characters\n         */\n        public void ignorableWhitespace(char[] ch, int start,\n                                        int length) throws SAXException {\n            characters(ch, start, length);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 2934,
    "lines": "/**\n         * Receive notification of ignorable whitespace in element content.\n         *\n         * <p>Validating Parsers must use this method to report each chunk\n         * of whitespace in element content (see the W3C XML 1.0\n         * recommendation, section 2.10): non-validating parsers may also\n         * use this method if they are capable of parsing and using\n         * content models.</p>\n         *\n         * <p>SAX parsers may return all contiguous whitespace in a single\n         * chunk, or they may split it into several chunks; however, all of\n         * the characters in any single event must come from the same\n         * external entity, so that the Locator provides useful\n         * information.</p>\n         *\n         * <p>The application must not attempt to read from the array\n         * outside of the specified range.</p>\n         *\n         * @param ch the characters from the XML document\n         * @param start the start position in the array\n         * @param length the number of characters to read from the array\n         * @throws org.xml.sax.SAXException any SAX exception, possibly\n         *            wrapping another exception\n         * @see #characters\n         */\n        public void ignorableWhitespace(char[] ch, int start,\n                                        int length) throws SAXException {\n            characters(ch, start, length);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java, /hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
  "id": 319,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8355,
    "lines": "row[table_schema]  = refName.schema.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7174,
    "lines": "row[table_schema]    = refName.schema.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5708,
    "lines": "row[table_schema]     = refName.schema.name;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 320,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3221,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_TIMESTAMP_NO_FRACTION;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3298,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_TIMESTAMP_NO_FRACTION;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3262,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_TIMESTAMP_NO_FRACTION;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3250,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_TIMESTAMP_NO_FRACTION;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3282,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_TIMESTAMP_NO_FRACTION;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 321,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2733,
    "lines": "sb.append(Tokens.T_COMMENT).append(' ').append(\n                        Tokens.T_ON);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2771,
    "lines": "sb.append(Tokens.T_COMMENT).append(' ').append(Tokens.T_ON);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2751,
    "lines": "sb.append(Tokens.T_COMMENT).append(' ').append(Tokens.T_ON);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java & more ...",
  "id": 322,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7403,
    "lines": "preparedStatement.parameterValues[columnCount] =\n            getCurrent()[columnCount];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7452,
    "lines": "preparedStatement.parameterValues[columnCount] =\n            getCurrent()[columnCount];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 323,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/CountUpDownLatch.java",
    "startLineNumber": 76,
    "lines": "if (latch.getCount() == 0) {\n            latch = new CountDownLatch(1);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/CountUpDownLatch.java",
    "startLineNumber": 89,
    "lines": "if (latch.getCount() == 0) {\n            latch = new CountDownLatch(1);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/CountUpDownLatch.java, /hsqldb/src/org/hsqldb/lib/CountUpDownLatch.java",
  "id": 324,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1654,
    "lines": "int nanos = (int) (currentMillis % 1000) * 1000000;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1624,
    "lines": "int nanos = (int) (currentMillis % 1000) * 1000000;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1635,
    "lines": "int nanos = (int) (currentMillis % 1000) * 1000000;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1663,
    "lines": "int nanos = (int) (currentMillis % 1000) * 1000000;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java & more ...",
  "id": 325,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1979,
    "lines": "if (exprColumns[i].getType() == OpTypes.SIMPLE_COLUMN) {\n                index = exprColumns[i].columnIndex;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 2020,
    "lines": "if (exprColumns[i].getType() == OpTypes.SIMPLE_COLUMN) {\n                    index = exprColumns[i].columnIndex;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QuerySpecification.java, /hsqldb/src/org/hsqldb/QuerySpecification.java",
  "id": 326,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2032,
    "lines": "i < aParts.length && i < bParts.length"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2067,
    "lines": "i < aParts.length && i < bParts.length"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 327,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 6399,
    "lines": "{\n\n        int columnIndex = findColumn(columnLabel);\n\n        startUpdate(columnIndex);\n        preparedStatement.setClob(columnIndex, reader, length);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 6482,
    "lines": "{\n\n        int columnIndex = findColumn(columnLabel);\n\n        startUpdate(columnIndex);\n        preparedStatement.setClob(columnIndex, reader, length);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 328,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 176,
    "lines": "public String getString(String s1, int i2, String s3) {\n        return vrb.getString(this, s1, i2, s3);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 341,
    "lines": "public String getString(String s1, int i2, String s3) {\n        return vrb.getString(this, s1, i2, s3);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/RB.java, /hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
  "id": 329,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4498,
    "lines": "condlPrint(SqlFile.htmlRow( ((i % 2) == 0)\n                        ? COL_EVEN : COL_ODD) + LS + PRE_TD, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4108,
    "lines": "condlPrint(SqlFile.htmlRow(((i % 2) == 0) ? COL_EVEN\n                                                          : COL_ODD) + LS\n                                                          + PRE_TD, true);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 330,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 209,
    "lines": "public String convertToString(Object a) {\n\n        if (a == null) {\n            return null;\n        }\n\n        return convertToSQLString(a);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 298,
    "lines": "public String convertToString(Object a) {\n\n        if (a == null) {\n            return null;\n        }\n\n        return convertToSQLString(a);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/RowType.java, /hsqldb/src/org/hsqldb/types/ArrayType.java",
  "id": 331,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2033,
    "lines": "int aPartLength = (int) aParts[i][ALLOC_PART.PART_LENGTH];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2068,
    "lines": "int aPartLength = (int) aParts[i][ALLOC_PART.PART_LENGTH];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 332,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/Server.java",
    "startLineNumber": 2513,
    "lines": "try {\n            server.setProperties(props);\n        } catch (Exception e) {\n            server.printError(\"Failed to set properties\");\n            server.printStackTrace(e);\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/doc/verbatim/src/org/hsqldb/server/WebServer.java",
    "startLineNumber": 185,
    "lines": "try {\n            server.setProperties(props);\n        } catch (Exception e) {\n            server.printError(\"Failed to set properties\");\n            server.printStackTrace(e);\n\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/Server.java, /hsqldb/doc/verbatim/src/org/hsqldb/server/WebServer.java",
  "id": 333,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1291,
    "lines": "if (autoGeneratedKeys != Statement.RETURN_GENERATED_KEYS\n                && autoGeneratedKeys != Statement.NO_GENERATED_KEYS) {\n            throw JDBCUtil.invalidArgument(\"autoGeneratedKeys\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1476,
    "lines": "if (autoGeneratedKeys != Statement.RETURN_GENERATED_KEYS\n                && autoGeneratedKeys != Statement.NO_GENERATED_KEYS) {\n            throw JDBCUtil.invalidArgument(\"autoGeneratedKeys\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
  "id": 334,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 452,
    "lines": "//\n        if (accessTable != null) {\n            accessTable[lookup] = ++accessCount;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 871,
    "lines": "if (accessTable != null) {\n            accessTable[lookup] = ++accessCount;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 651,
    "lines": "//\n        if (accessTable != null) {\n            accessTable[lookup] = ++accessCount;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 723,
    "lines": "if (accessTable != null) {\n                accessTable[lookup] = ++accessCount;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 763,
    "lines": "if (accessTable != null) {\n            accessTable[lookup] = ++accessCount;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 402,
    "lines": "if (accessTable != null) {\n                accessTable[lookup] = ++accessCount;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 850,
    "lines": "if (accessTable != null) {\n                    accessTable[lookup] = ++accessCount;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java & more ...",
  "id": 335,
  "numClones": 7,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 763,
    "lines": "session.database.sqlSyntaxOra\n                        || session.database.sqlSyntaxDb2"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 442,
    "lines": "session.database.sqlSyntaxOra\n                        || session.database.sqlSyntaxDb2"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/ExpressionColumn.java",
  "id": 336,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 321,
    "lines": "if (column.getName().parent != null) {\n                    set.add(column.getName().parent);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumnAccessor.java",
    "startLineNumber": 66,
    "lines": "if (column.getName().parent != null) {\n            set.add(column.getName().parent);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionColumn.java, /hsqldb/src/org/hsqldb/ExpressionColumnAccessor.java",
  "id": 337,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1747,
    "lines": "nodes.length > 0 && nodes[0] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 2069,
    "lines": "nodes.length > 0 && nodes[0] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1760,
    "lines": "nodes.length > 0 && nodes[0] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1784,
    "lines": "nodes.length > 0 && nodes[0] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 2052,
    "lines": "nodes.length > 0 && nodes[0] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1772,
    "lines": "nodes.length > 0 && nodes[0] != null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 338,
  "numClones": 6,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5458,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                readThis(Tokens.COMMA);\n            } else {\n                break;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5487,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                readThis(Tokens.COMMA);\n            } else {\n                break;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 339,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 680,
    "lines": "(TTable.Stmts.bIdxForced)\n                                && (!IndiceName.startsWith(\"Idx_\"))"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 697,
    "lines": "(TTable.Stmts.bIdxForced)\n                                && (!IndiceName.startsWith(\"Idx_\"))"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferDb.java, /hsqldb/src/org/hsqldb/util/TransferDb.java",
  "id": 340,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 1074,
    "lines": "if (session instanceof Session) {\n                if (!((Session) session).database.sqlConvertTruncate) {\n                    d = java.lang.Math.rint(d);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 1125,
    "lines": "if (session instanceof Session) {\n                if (!((Session) session).database.sqlConvertTruncate) {\n                    d = java.lang.Math.rint(d);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 912,
    "lines": "if (session instanceof Session) {\n                        if (!((Session) session).database.sqlConvertTruncate) {\n                            d = java.lang.Math.rint(d);\n                        }\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/NumberType.java, /hsqldb/src/org/hsqldb/types/NumberType.java & more ...",
  "id": 341,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 628,
    "lines": "public static int getRandomInt(int lo, int hi) {\n\n        int ret = 0;\n\n        ret = (int) (Math.random() * (hi - lo + 1));\n        ret += lo;\n\n        return ret;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 720,
    "lines": "public static int getRandomInt(int lo, int hi) {\n\n        int ret = 0;\n\n        ret = (int) (Math.random() * (hi - lo + 1));\n        ret += lo;\n\n        return ret;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 342,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 240,
    "lines": "{\n            Object[] data = table[i];\n\n            out.writeData(meta.getColumnCount(), meta.columnTypes, data, null,\n                          null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 201,
    "lines": "{\n            Object[] data = table[i];\n\n            out.writeData(meta.getColumnCount(), meta.columnTypes, data, null,\n                          null);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
  "id": 343,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/IntArrayCachedObject.java",
    "startLineNumber": 73,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.GENERAL_IO_ERROR, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryData.java",
    "startLineNumber": 127,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.GENERAL_IO_ERROR, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/BitMapCachedObject.java",
    "startLineNumber": 75,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.GENERAL_IO_ERROR, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DirectoryBlockCachedObject.java",
    "startLineNumber": 92,
    "lines": "catch (IOException e) {\n            throw Error.error(ErrorCode.GENERAL_IO_ERROR, e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/IntArrayCachedObject.java, /hsqldb/src/org/hsqldb/types/BinaryData.java & more ...",
  "id": 344,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2969,
    "lines": "if (tmpString != null) {\n                    showSysTables = Boolean.valueOf(tmpString).booleanValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 3027,
    "lines": "if (tmpString != null) {\n                    showSysTables = Boolean.valueOf(tmpString).booleanValue();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 345,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 431,
    "lines": "Query = \"DROP TABLE history\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DROP TABLE accounts\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DROP TABLE tellers\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DROP TABLE branches\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 417,
    "lines": "Query = \"DROP TABLE history\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DROP TABLE accounts\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DROP TABLE tellers\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DROP TABLE branches\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/JDBCBench.java, /hsqldb/src/org/hsqldb/test/TestBench.java",
  "id": 346,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1585,
    "lines": "data[0] = Type.SQL_BIGINT.convertToType(session, data[0],\n                            nodes[0].getDataType());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1332,
    "lines": "data[0] = Type.SQL_BIGINT.convertToType(session, data[0],\n                            nodes[0].getDataType());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 347,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 950,
    "lines": "name = database.nameManager.newColumnHsqlName(\n                        table.getName(), token.tokenString,\n                        token.isDelimitedIdentifier);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 987,
    "lines": "name = database.nameManager.newColumnHsqlName(\n                        table.getName(), token.tokenString,\n                        token.isDelimitedIdentifier);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 348,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3539,
    "lines": "(matcher.group(1).length() > 0)\n                                ? matcher.group(1)\n                                : getCurrentSchema()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3331,
    "lines": "(matcher.group(1).length() > 0)\n                                                ? matcher.group(1)\n                                                : getCurrentSchema()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3497,
    "lines": "(matcher.group(1).length() > 0)\n                                    ? matcher.group(1) : getCurrentSchema()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3433,
    "lines": "(matcher.group(1).length() > 0)\n                                                ? matcher.group(1)\n                                                : getCurrentSchema()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 349,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4394,
    "lines": "{\n                        row[character_maximum_length] =\n                            ValuePool.getLong(type.precision);\n                        row[character_octet_length] =\n                            ValuePool.getLong(type.precision * 2);\n                        row[character_set_catalog] =\n                            database.getCatalogName().name;\n                        row[character_set_schema] =\n                            ((CharacterType) type).getCharacterSet()\n                                .getSchemaName().name;\n                        row[character_set_name] =\n                            ((CharacterType) type).getCharacterSet().getName()\n                                .name;\n                        row[collation_catalog] =\n                            database.getCatalogName().name;\n                        row[collation_schema] =\n                            ((CharacterType) type).getCollation()\n                                .getSchemaName().name;\n                        row[collation_name] =\n                            ((CharacterType) type).getCollation().getName()\n                                .name;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3441,
    "lines": "{\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] = ValuePool.getLong(type.precision\n                        * 2);\n                row[character_set_catalog] = database.getCatalogName().name;\n                row[character_set_schema] =\n                    ((CharacterType) type).getCharacterSet().getSchemaName()\n                        .name;\n                row[character_set_name] =\n                    ((CharacterType) type).getCharacterSet().getName().name;\n                row[collation_catalog] = database.getCatalogName().name;\n                row[collation_schema] =\n                    ((CharacterType) type).getCollation().getSchemaName().name;\n                row[collation_name] =\n                    ((CharacterType) type).getCollation().getName().name;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7933,
    "lines": "{\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] = ValuePool.getLong(type.precision\n                        * 2);\n                row[character_set_catalog] = database.getCatalogName().name;\n                row[character_set_schema] =\n                    ((CharacterType) type).getCharacterSet().getSchemaName()\n                        .name;\n                row[character_set_name] =\n                    ((CharacterType) type).getCharacterSet().getName().name;\n                row[collation_catalog] = database.getCatalogName().name;\n                row[collation_schema] =\n                    ((CharacterType) type).getCollation().getSchemaName().name;\n                row[collation_name] =\n                    ((CharacterType) type).getCollation().getName().name;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3785,
    "lines": "{\n            row[character_maximum_length] = ValuePool.getLong(type.precision);\n            row[character_octet_length] = ValuePool.getLong(type.precision\n                    * 2);\n            row[character_set_catalog] = database.getCatalogName().name;\n            row[character_set_schema] =\n                ((CharacterType) type).getCharacterSet().getSchemaName().name;\n            row[character_set_name] =\n                ((CharacterType) type).getCharacterSet().getName().name;\n            row[collation_catalog] = database.getCatalogName().name;\n            row[collation_schema] =\n                ((CharacterType) type).getCollation().getSchemaName().name;\n            row[collation_name] =\n                ((CharacterType) type).getCollation().getName().name;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5968,
    "lines": "{\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision * 2);\n                    row[character_set_catalog] =\n                        database.getCatalogName().name;\n                    row[character_set_schema] =\n                        ((CharacterType) type).getCharacterSet()\n                            .getSchemaName().name;\n                    row[character_set_name] =\n                        ((CharacterType) type).getCharacterSet().getName()\n                            .name;\n                    row[collation_catalog] = database.getCatalogName().name;\n                    row[collation_schema] =\n                        ((CharacterType) type).getCollation().getSchemaName()\n                            .name;\n                    row[collation_name] =\n                        ((CharacterType) type).getCollation().getName().name;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2688,
    "lines": "{\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision * 2);\n                    row[character_set_catalog] =\n                        database.getCatalogName().name;\n                    row[character_set_schema] =\n                        ((CharacterType) type).getCharacterSet()\n                            .getSchemaName().name;\n                    row[character_set_name] =\n                        ((CharacterType) type).getCharacterSet().getName()\n                            .name;\n                    row[collation_catalog] = database.getCatalogName().name;\n                    row[collation_schema] =\n                        ((CharacterType) type).getCollation().getSchemaName()\n                            .name;\n                    row[collation_name] =\n                        ((CharacterType) type).getCollation().getName().name;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 350,
  "numClones": 6,
  "cloneSize": 20
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2731,
    "lines": "row[datetime_precision] = ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6011,
    "lines": "row[datetime_precision] = ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7970,
    "lines": "row[datetime_precision] = ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3474,
    "lines": "row[datetime_precision] = ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3822,
    "lines": "row[datetime_precision] = ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6004,
    "lines": "row[datetime_precision] = ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4424,
    "lines": "row[datetime_precision] =\n                            ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4432,
    "lines": "row[datetime_precision] =\n                            ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2724,
    "lines": "row[datetime_precision] = ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7964,
    "lines": "row[datetime_precision] = ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3480,
    "lines": "row[datetime_precision] = ValuePool.getLong(type.scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3816,
    "lines": "row[datetime_precision] = ValuePool.getLong(type.scale);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 351,
  "numClones": 12,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 136,
    "lines": "nodes[LEFT] = new ExpressionOp(OpTypes.ZONE_MODIFIER, e, null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 144,
    "lines": "nodes[LEFT] = new ExpressionOp(OpTypes.ZONE_MODIFIER, e, null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionOp.java, /hsqldb/src/org/hsqldb/ExpressionOp.java",
  "id": 352,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1631,
    "lines": "if (primaryKeyCols != null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Table\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1117,
    "lines": "if (primaryKeyCols != null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Table\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 353,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 766,
    "lines": "{\n            int i = colTypes[j].compare(session, a[colIndex[j]],\n                                        b[colIndex[j]]);\n\n            if (i != 0) {\n                if (isSimpleOrder) {\n                    return i;\n                }\n\n                boolean nulls = a[colIndex[j]] == null\n                                || b[colIndex[j]] == null;\n\n                if (colDesc[j] && !nulls) {\n                    i = -i;\n                }\n\n                if (nullsLast[j] && nulls) {\n                    i = -i;\n                }\n\n                return i;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 811,
    "lines": "{\n            int i = colTypes[j].compare(session, a[colIndex[j]],\n                                        b[colIndex[j]]);\n\n            if (i != 0) {\n                if (isSimpleOrder) {\n                    return i;\n                }\n\n                boolean nulls = a[colIndex[j]] == null\n                                || b[colIndex[j]] == null;\n\n                if (colDesc[j] && !nulls) {\n                    i = -i;\n                }\n\n                if (nullsLast[j] && nulls) {\n                    i = -i;\n                }\n\n                return i;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java",
  "id": 354,
  "numClones": 2,
  "cloneSize": 18
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 3685,
    "lines": "if (connProperties != null) {\n            isCloseResultSet = connProperties.isPropertyTrue(\n                HsqlDatabaseProperties.url_close_result, false);\n            isUseColumnName = connProperties.isPropertyTrue(\n                HsqlDatabaseProperties.url_get_column_name, true);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 3613,
    "lines": "if (connProperties != null) {\n                isCloseResultSet = connProperties.isPropertyTrue(\n                    HsqlDatabaseProperties.url_close_result, false);\n                isUseColumnName = connProperties.isPropertyTrue(\n                    HsqlDatabaseProperties.url_get_column_name, true);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java, /hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
  "id": 355,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 326,
    "lines": "public boolean canRead(Session session, PersistentStore store, long id,\n                           int mode) {\n\n        if (store.getTable().tableType == TableBase.TEMP_TABLE) {\n            return true;\n        }\n\n        RowAction action = (RowAction) rowActionMap.get(id);\n\n        if (action == null) {\n            return true;\n        }\n\n        return action.canRead(session, mode);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 541,
    "lines": "public boolean canRead(Session session, PersistentStore store, long id,\n                           int mode) {\n\n        if (store.getTable().tableType == TableBase.TEMP_TABLE) {\n            return true;\n        }\n\n        RowAction action = (RowAction) rowActionMap.get(id);\n\n        if (action == null) {\n            return true;\n        }\n\n        return action.canRead(session, mode);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 356,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 1961,
    "lines": "typeCode == Types.SQL_DECIMAL || typeCode == Types.SQL_NUMERIC"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 425,
    "lines": "typeCode == Types.SQL_DECIMAL || typeCode == Types.SQL_NUMERIC"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/NumberType.java, /hsqldb/src/org/hsqldb/types/NumberType.java",
  "id": 357,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java",
    "startLineNumber": 909,
    "lines": "assignToRangeVariable(rangeVariables[i], conditions, i,\n                                      joinExpressions[i]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java",
    "startLineNumber": 903,
    "lines": "assignToRangeVariable(rangeVariables[i], conditions, i,\n                                      joinExpressions[i]);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java, /hsqldb/src/org/hsqldb/RangeVariableResolver.java",
  "id": 358,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 395,
    "lines": "{\n                    if (actionType == ACTION_INSERT) {\n\n                        // ACTION_INSERT + ACTION_DELETE\n                        actionType = ACTION_INSERT_DELETE;\n                    } else {\n                        actionType = action.type;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 590,
    "lines": "{\n                    if (actionType == ACTION_INSERT) {\n                        actionType = ACTION_INSERT_DELETE;\n                    } else {\n                        actionType = action.type;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 558,
    "lines": "{\n                    if (actionType == ACTION_INSERT) {\n                        actionType = ACTION_INSERT_DELETE;\n                    } else {\n                        actionType = action.type;\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAction.java, /hsqldb/src/org/hsqldb/RowAction.java & more ...",
  "id": 359,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
    "startLineNumber": 366,
    "lines": "/**\n     * Converts this writer's accumulated data into a string.\n     *\n     * @return String constructed from this writer's accumulated data\n     * @throws RuntimeException may be thrown if this writer has been\n     *      {@link #free() freed}.\n     */\n    public synchronized String toString() {\n\n        try {\n            checkFreed();\n        } catch (IOException ex) {\n            throw new RuntimeException(ex.toString());\n        }\n\n        return new String(buf, 0, count);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
    "startLineNumber": 331,
    "lines": "/**\n     * Converts this stream's accumuated data into a string, translating bytes\n     * into characters according to the platform's default character encoding.\n     *\n     * @return String translated from this stream's accumuated data.\n     * @throws RuntimeException may be thrown if this output stream has been\n     *      {@link #free() freed}.\n     */\n    public synchronized String toString() {\n\n        try {\n            checkFreed();\n        } catch (IOException ex) {\n            throw new RuntimeException(ex.toString());\n        }\n\n        return new String(buf, 0, count);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java, /hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
  "id": 360,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1082,
    "lines": "{\n\n        int to = array.length;\n\n        while (--to >= 0) {\n            array[to] = value;\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1106,
    "lines": "{\n\n        int to = array.length;\n\n        while (--to >= 0) {\n            array[to] = value;\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1118,
    "lines": "{\n\n        int to = array.length;\n\n        while (--to >= 0) {\n            array[to] = value;\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1094,
    "lines": "{\n\n        int to = array.length;\n\n        while (--to >= 0) {\n            array[to] = value;\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java & more ...",
  "id": 361,
  "numClones": 4,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Right.java",
    "startLineNumber": 640,
    "lines": "result |= (updateColumnSet != null && !updateColumnSet.isEmpty());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Right.java",
    "startLineNumber": 721,
    "lines": "result |= (updateColumnSet != null && !updateColumnSet.isEmpty());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/Right.java, /hsqldb/src/org/hsqldb/rights/Right.java",
  "id": 362,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
    "startLineNumber": 895,
    "lines": "protected synchronized void checkClosed() throws SQLException {\n\n        if (m_closed) {\n            throw JDBCUtil.sqlException(ErrorCode.X_07501);\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 798,
    "lines": "private void checkClosed() throws SQLException {\n\n        if (m_closed) {\n            throw JDBCUtil.sqlException(ErrorCode.X_07501);\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 991,
    "lines": "protected void checkClosed() throws SQLException {\n\n        if (m_closed) {\n            throw JDBCUtil.sqlException(ErrorCode.X_07501);\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 764,
    "lines": "protected synchronized void checkClosed() throws SQLException {\n\n        if (m_closed) {\n            throw JDBCUtil.sqlException(ErrorCode.X_07501);\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java & more ...",
  "id": 363,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1061,
    "lines": "if (typeCode == otherType.typeCode) {\n            return scale >= otherType.scale ? 0\n                                            : -1;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 729,
    "lines": "if (typeCode == otherType.typeCode) {\n            return scale >= otherType.scale ? 0\n                                            : -1;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java",
  "id": 364,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1163,
    "lines": "if (sRecent[iRecent] != null) {\n            mRecent.remove(iRecent);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1958,
    "lines": "if (sRecent[iRecent] != null) {\n            mRecent.remove(iRecent);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 365,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/HsqlDateTime.java",
    "startLineNumber": 323,
    "lines": "synchronized (cal) {\n            setTimeInMillis(cal, t);\n            resetToTime(cal);\n\n            return getTimeInMillis(cal);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/HsqlDateTime.java",
    "startLineNumber": 313,
    "lines": "synchronized (cal) {\n            setTimeInMillis(cal, t);\n            resetToTime(cal);\n\n            return getTimeInMillis(cal);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/HsqlDateTime.java, /hsqldb/src/org/hsqldb/HsqlDateTime.java",
  "id": 366,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SetFunction.java",
    "startLineNumber": 249,
    "lines": "if (!(item instanceof Boolean)) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SetFunction.java",
    "startLineNumber": 258,
    "lines": "if (!(item instanceof Boolean)) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SetFunction.java, /hsqldb/src/org/hsqldb/SetFunction.java",
  "id": 367,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 1597,
    "lines": "if (!(b instanceof BigDecimal)) {\n                    b = convertToDefaultType(null, b);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 1540,
    "lines": "if (!(b instanceof BigDecimal)) {\n                    b = convertToDefaultType(null, b);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/NumberType.java, /hsqldb/src/org/hsqldb/types/NumberType.java",
  "id": 368,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/SimpleStore.java",
    "startLineNumber": 79,
    "lines": "public boolean canRead(Session session, long pos, int mode, int[] colMap) {\n        return true;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 112,
    "lines": "public boolean canRead(Session session, long pos, int mode, int[] colMap) {\n        return true;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/SimpleStore.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
  "id": 369,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 317,
    "lines": "for (Enumeration e =\n                        result.elements(); e.hasMoreElements(); ) {\n                    lTable.add(e.nextElement().toString());\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 237,
    "lines": "for (Enumeration e =\n                        result.elements(); e.hasMoreElements(); ) {\n                    lTable.add(e.nextElement().toString());\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Transfer.java, /hsqldb/src/org/hsqldb/util/Transfer.java",
  "id": 370,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobDataID.java",
    "startLineNumber": 261,
    "lines": "public boolean equals(Object other) {\n\n        if (other instanceof BlobDataID) {\n            return id == ((BlobDataID) other).id;\n        }\n\n        return false;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobDataID.java",
    "startLineNumber": 256,
    "lines": "public boolean equals(Object other) {\n\n        if (other instanceof BlobDataID) {\n            return id == ((BlobDataID) other).id;\n        }\n\n        return false;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobDataID.java, /hsqldb/src/org/hsqldb/types/ClobDataID.java",
  "id": 371,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 547,
    "lines": "precision - scale > other.precision - other.scale\n                         ? precision - scale\n                         : other.precision - other.scale"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 640,
    "lines": "precision - scale > other.precision - other.scale\n                            ? precision - scale\n                            : other.precision - other.scale"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/NumberType.java, /hsqldb/src/org/hsqldb/types/NumberType.java",
  "id": 372,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyHashMap.java",
    "startLineNumber": 73,
    "lines": "{\n            int lookup = getLookup(key);\n\n            if (lookup != -1) {\n                return objectValueTable[lookup];\n            }\n\n            return null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedLongKeyHashMap.java",
    "startLineNumber": 78,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return objectValueTable[lookup];\n        }\n\n        return null;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java",
    "startLineNumber": 56,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return objectValueTable[lookup];\n        }\n\n        return null;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java",
    "startLineNumber": 60,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return objectValueTable[lookup];\n        }\n\n        return null;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongKeyHashMap.java, /hsqldb/src/org/hsqldb/lib/OrderedLongKeyHashMap.java & more ...",
  "id": 373,
  "numClones": 4,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 946,
    "lines": "/**\n     * Translates an INTERVAL type to VARCHAR.\n     * Removes time zone from datetime types.\n     *\n     */\n    private Type translateType(Type type) {\n\n        if (this.translateTTIType) {\n            if (type.isIntervalType()) {\n                type = ((IntervalType) type).getCharacterType();\n            } else if (type.isDateTimeTypeWithZone()) {\n                type = ((DateTimeType) type).getDateTimeTypeWithoutZone();\n            }\n        }\n\n        return type;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 359,
    "lines": "/**\n     * Translates an INTERVAL type to VARCHAR.\n     * Removes time zone from datetime types.\n     *\n     */\n    private Type translateType(Type type) {\n\n        if (this.translateTTIType) {\n            if (type.isIntervalType()) {\n                type = ((IntervalType) type).getCharacterType();\n            } else if (type.isDateTimeTypeWithZone()) {\n                type = ((DateTimeType) type).getDateTimeTypeWithoutZone();\n            }\n        }\n\n        return type;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
  "id": 374,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2200,
    "lines": "if (minus) {\n            e = new ExpressionArithmetic(OpTypes.NEGATE, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3333,
    "lines": "if (minus) {\n            e = new ExpressionArithmetic(OpTypes.NEGATE, e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 375,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 186,
    "lines": "RowAVLDisk  r   = (RowAVLDisk) store.get(pos, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 142,
    "lines": "RowAVLDisk  r   = (RowAVLDisk) store.get(pos, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
  "id": 376,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/MainInvoker.java",
    "startLineNumber": 76,
    "lines": "sa.length > 0 && sa[0].equals(\"--help\")"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerAcl.java",
    "startLineNumber": 491,
    "lines": "sa.length > 0 && sa[0].equals(\"--help\")"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/MainInvoker.java, /hsqldb/src/org/hsqldb/server/ServerAcl.java",
  "id": 377,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 1293,
    "lines": "if (cal != null) {\n            millis = HsqlDateTime.convertMillisToCalendar(cal, millis);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 4739,
    "lines": "if (cal != null) {\n            millis = HsqlDateTime.convertMillisToCalendar(cal, millis);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 378,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4665,
    "lines": "if ((printHtml && !htmlMode) || (htmlMode && !printHtml)) return;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4648,
    "lines": "if ((printHtml && !htmlMode) || (htmlMode && !printHtml)) return;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 379,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMap.java",
    "startLineNumber": 96,
    "lines": "public void valuesToArray(Object[] array) {\n\n        Iterator it = values().iterator();\n        int      i  = 0;\n\n        while (it.hasNext()) {\n            array[i] = it.next();\n\n            i++;\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java",
    "startLineNumber": 98,
    "lines": "public void valuesToArray(Object[] array) {\n\n        Iterator it = values().iterator();\n        int      i  = 0;\n\n        while (it.hasNext()) {\n            array[i] = it.next();\n\n            i++;\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java",
    "startLineNumber": 83,
    "lines": "public void valuesToArray(Object[] array) {\n\n        Iterator it = values().iterator();\n        int      i  = 0;\n\n        while (it.hasNext()) {\n            array[i] = it.next();\n\n            i++;\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HashMap.java, /hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java & more ...",
  "id": 380,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAVLDisk.java",
    "startLineNumber": 273,
    "lines": "while (n != null) {\n            NodeAVL last = n;\n\n            n          = n.nNext;\n            last.nNext = null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAVL.java",
    "startLineNumber": 208,
    "lines": "while (n != null) {\n            NodeAVL last = n;\n\n            n          = n.nNext;\n            last.nNext = null;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAVLDisk.java, /hsqldb/src/org/hsqldb/RowAVL.java",
  "id": 381,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java",
    "startLineNumber": 81,
    "lines": "if (lookup != -1) {\n            value[0] = longValueTable[lookup];\n\n            return true;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
    "startLineNumber": 91,
    "lines": "if (lookup != -1) {\n            value[0] = longValueTable[lookup];\n\n            return true;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongValueHashMap.java",
    "startLineNumber": 100,
    "lines": "if (lookup != -1) {\n            value[0] = longValueTable[lookup];\n\n            return true;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java, /hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java & more ...",
  "id": 382,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 565,
    "lines": "for (int i = 0; i < limitcount; i++) {\n            next();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 565,
    "lines": "for (int i = 0; i < limitcount; i++) {\n            next();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
  "id": 383,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1592,
    "lines": "parameterValues[i] = new TimestampData(millis / 1000);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1761,
    "lines": "parameterValues[i] = new TimestampData(millis / 1000);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 384,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2050,
    "lines": "{\n                if (data[0] == null || data[1] == null) {\n                    return null;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2154,
    "lines": "{\n                if (data[0] == null || data[1] == null) {\n                    return null;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 385,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 753,
    "lines": "for (int i = 0; i < joinRangeIterators.length; i++) {\n            rangeIterators[i].reset();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 742,
    "lines": "for (int i = 0; i < joinRangeIterators.length; i++) {\n                        rangeIterators[i].reset();\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 386,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2754,
    "lines": "if (type.isDistinctType()) {\n                    row[udt_catalog] = database.getCatalogName().name;\n                    row[udt_schema]  = type.getSchemaName().name;\n                    row[udt_name]    = type.getName().name;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4450,
    "lines": "if (type.isDistinctType()) {\n                        row[udt_catalog] = database.getCatalogName().name;\n                        row[udt_schema]  = type.getSchemaName().name;\n                        row[udt_name]    = type.getName().name;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 387,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 727,
    "lines": "int mode = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 860,
    "lines": "int mode = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 740,
    "lines": "int mode = ((Integer) parameters[0]).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementCommand.java & more ...",
  "id": 388,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2758,
    "lines": "shared.userVars.put(mathMatcher.group(1), Long.toString(\n                    new Calculator(((mathMatcher.groupCount() > 1\n                    && mathMatcher.group(2) != null) ? mathMatcher.group(2)\n                    : \"\"), shared.userVars).reduce(0, false)));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2340,
    "lines": "shared.userVars.put(mathMatcher.group(1), Long.toString(\n                                new Calculator(((mathMatcher.groupCount() > 1\n                                && mathMatcher.group(2) != null)\n                                ? mathMatcher.group(2)\n                                : \"\"), shared.userVars).reduce(0, false)));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2384,
    "lines": "shared.userVars.put(\n                                        mathMatcher.group(1), Long.toString(\n                                        new Calculator(\n                                        ((mathMatcher.groupCount() > 1\n                                        && mathMatcher.group(2) != null)\n                                        ? mathMatcher.group(2)\n                                        : \"\"),\n                                        shared.userVars).reduce(0, false)));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 389,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 435,
    "lines": "switch (token.tokenType) {\n\n                    case Tokens.MEMORY :\n                        break;\n\n                    case Tokens.CACHED :\n                        type = TableBase.CACHED_TABLE;\n                        break;\n\n                    default :\n                        throw unexpectedToken();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 730,
    "lines": "switch (token.tokenType) {\n\n                    case Tokens.MEMORY :\n                        break;\n\n                    case Tokens.CACHED :\n                        type = TableBase.CACHED_TABLE;\n                        break;\n\n                    default :\n                        throw unexpectedToken();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 390,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1476,
    "lines": "public void setValue(Object value) {\n            throw new NoSuchElementException(\"Hash Iterator\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1528,
    "lines": "public void setValue(Object value) {\n            throw new NoSuchElementException(\"Hash Iterator\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 391,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2951,
    "lines": "row[table_schema]       = name.schema.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2264,
    "lines": "row[table_schema]     = name.schema.name;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 392,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4079,
    "lines": "for (int i = 0; i < headerArray.length; i++) {\n                            condlPrint(\"<TH>\"\n                                    + SqlFile.escapeHtml(headerArray[i])\n                                    + \"</TH>\", true);\n                            condlPrint(((i > 0) ? \"  \" : \"\")\n                                    + ((i < headerArray.length - 1\n                                        || rightJust[i])\n                                       ? StringUtil.toPaddedString(\n                                         headerArray[i], maxWidth[i],\n                                         ' ', !rightJust[i])\n                                       : headerArray[i])\n                                    , false);\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4474,
    "lines": "for (int i = 0; i < headerArray.length; i++) {\n                condlPrint(\"<TH>\"\n                        + SqlFile.escapeHtml(headerArray[i]) + \"</TH>\", true);\n                condlPrint(((i > 0) ? \"  \" : \"\")\n                        + ((i < headerArray.length - 1 || rightJust[i])\n                           ? StringUtil.toPaddedString(\n                             headerArray[i], maxWidth[i], ' ', !rightJust[i])\n                           : headerArray[i])\n                        , false);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 393,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 804,
    "lines": "if (token.charsetSchema != null) {\n            tokenS = token.charsetSchema;\n        } else if (token.charsetName != null) {\n            tokenS = token.charsetName;\n        } else if (token.namePrePrefix != null) {\n            tokenS = token.namePrePrefix;\n        } else if (token.namePrefix != null) {\n            tokenS = token.namePrefix;\n        } else {\n            tokenS = token.tokenString;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 777,
    "lines": "if (token.charsetSchema != null) {\n            tokenS = token.charsetSchema;\n        } else if (token.charsetName != null) {\n            tokenS = token.charsetName;\n        } else if (token.namePrePrefix != null) {\n            tokenS = token.namePrePrefix;\n        } else if (token.namePrefix != null) {\n            tokenS = token.namePrefix;\n        } else {\n            tokenS = token.tokenString;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserBase.java, /hsqldb/src/org/hsqldb/ParserBase.java",
  "id": 394,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3639,
    "lines": "Iterator it =\n            database.schemaManager.databaseObjectIterator(SchemaObject.DOMAIN);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2006,
    "lines": "Iterator it =\n            database.schemaManager.databaseObjectIterator(SchemaObject.DOMAIN);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3417,
    "lines": "//\n        //\n        Iterator it =\n            database.schemaManager.databaseObjectIterator(SchemaObject.DOMAIN);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3304,
    "lines": "//\n        //\n        Iterator it =\n            database.schemaManager.databaseObjectIterator(SchemaObject.DOMAIN);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 395,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 430,
    "lines": "public NodeAVL set(PersistentStore store, boolean isLeft, NodeAVL n) {\n\n        NodeAVL x;\n\n        if (isLeft) {\n            x = setLeft(store, n);\n        } else {\n            x = setRight(store, n);\n        }\n\n        if (n != null) {\n            n.setParent(store, this);\n        }\n\n        return x;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 401,
    "lines": "public NodeAVL set(PersistentStore store, boolean isLeft, NodeAVL n) {\n\n        NodeAVL x;\n\n        if (isLeft) {\n            x = setLeft(store, n);\n        } else {\n            x = setRight(store, n);\n        }\n\n        if (n != null) {\n            n.setParent(store, this);\n        }\n\n        return x;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
  "id": 396,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputText.java",
    "startLineNumber": 97,
    "lines": "//-- Newline indicates that field should match to end of line.\n        if (fieldSep.endsWith(\"\\n\")) {\n            fieldSepEnd = true;\n            fieldSep    = fieldSep.substring(0, fieldSep.length() - 1);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputText.java",
    "startLineNumber": 87,
    "lines": "//-- Newline indicates that field should match to end of line.\n        if (fieldSep.endsWith(\"\\n\")) {\n            fieldSepEnd = true;\n            fieldSep    = fieldSep.substring(0, fieldSep.length() - 1);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowInputText.java, /hsqldb/src/org/hsqldb/rowio/RowOutputText.java",
  "id": 397,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 234,
    "lines": "catch (HsqlException e) {\n            database.logger.logWarningEvent(\"data commit failed\", e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 225,
    "lines": "catch (HsqlException e) {\n                database.logger.logWarningEvent(\"data commit failed\", e);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java, /hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
  "id": 398,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2817,
    "lines": "if (!nodes[0].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42561);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2924,
    "lines": "if (!nodes[0].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42561);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3100,
    "lines": "if (!nodes[0].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42561);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2884,
    "lines": "if (!nodes[0].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42561);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2995,
    "lines": "if (!nodes[0].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42561);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2287,
    "lines": "if (!nodes[0].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42561);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 399,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedHashSet.java",
    "startLineNumber": 117,
    "lines": "public int getIndex(Object key) {\n        return getLookup(key, key.hashCode());\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMappedList.java",
    "startLineNumber": 199,
    "lines": "public int getIndex(Object key) {\n        return getLookup(key, key.hashCode());\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/OrderedHashSet.java, /hsqldb/src/org/hsqldb/lib/HashMappedList.java",
  "id": 400,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 932,
    "lines": "try {\n                    return ((JavaObjectData) o).getObject();\n                } catch (HsqlException e) {\n                    throw JDBCUtil.sqlException(e);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 1686,
    "lines": "try {\n                    return ((JavaObjectData) o).getObject();\n                } catch (HsqlException e) {\n                    throw JDBCUtil.sqlException(e);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 401,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 670,
    "lines": "if (l != null && l.getBalance(store) == -2) {\n            System.out.print(\"broken index - deleted\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
    "startLineNumber": 156,
    "lines": "if (l != null && l.getBalance(store) == -2) {\n            System.out.print(\"broken index - deleted\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
  "id": 402,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1837,
    "lines": "params[ALLOC_BLOCKS.LOB_ID]       = ValuePool.getLong(lobID);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1854,
    "lines": "params[ALLOC_BLOCKS.LOB_ID]       = ValuePool.getLong(lobID);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 403,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 256,
    "lines": "if (endindex == 0) {\n                endindex = list.length;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 295,
    "lines": "if (endindex == 0) {\n                endindex = list.length;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 172,
    "lines": "if (endindex == 0) {\n            endindex = list.length;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 217,
    "lines": "if (endindex == 0) {\n                endindex = list.length;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 165,
    "lines": "if (endindex == 0) {\n                endindex = list.length;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 129,
    "lines": "if (endindex == 0) {\n            endindex = list.length;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongDeque.java, /hsqldb/src/org/hsqldb/lib/HsqlDeque.java & more ...",
  "id": 404,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 147,
    "lines": "HsqlName name = database.schemaManager.findSchemaHsqlName(\n                        SqlInvariants.PUBLIC_SCHEMA);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 388,
    "lines": "HsqlName name = database.schemaManager.findSchemaHsqlName(\n                SqlInvariants.PUBLIC_SCHEMA);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Log.java, /hsqldb/src/org/hsqldb/persist/Logger.java",
  "id": 405,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6162,
    "lines": "if (c >= 'a' && c <= 'f') {\n                octet += 10 + c - 'a';\n            } else if (c >= 'A' && c <= 'F') {\n                octet += 10 + c - 'A';\n            } else if (c >= '0' && c <= '9') {\n                octet += c - '0';\n            } else {\n                throw new NumberFormatException(\n                    \"Non-hex character in input at offset \" + i + \": \" + c);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6150,
    "lines": "if (c >= 'a' && c <= 'f') {\n                octet += 10 + c - 'a';\n            } else if (c >= 'A' && c <= 'F') {\n                octet += 10 + c - 'A';\n            } else if (c >= '0' && c <= '9') {\n                octet += c - '0';\n            } else {\n                throw new NumberFormatException(\n                    \"Non-hex character in input at offset \" + i + \": \" + c);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 406,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 904,
    "lines": "long millis = HsqlDateTime.convertMillisToCalendar(cal,\n                    ((TimestampData) a).getSeconds() * 1000);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 894,
    "lines": "long millis = HsqlDateTime.convertMillisToCalendar(cal,\n                    ((TimestampData) a).getSeconds() * 1000);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 407,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5795,
    "lines": "{\n                    // To be consistent, if *DSV_RECORDS_PER_COMMIT is set, we\n                    // always commit all inserted records.\n                    // This little block commits any straggler commits since the\n                    // last commit.\n                    shared.jdbcConn.commit();\n                    shared.possiblyUncommitteds = false;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5754,
    "lines": "{\n                    shared.jdbcConn.commit();\n                    shared.possiblyUncommitteds = false;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 408,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1180,
    "lines": "int group = startType > Types.SQL_INTERVAL_MONTH\n                    ? Types.SQL_INTERVAL_SECOND\n                    : Types.SQL_INTERVAL_MONTH;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1099,
    "lines": "int group = startType > Types.SQL_INTERVAL_MONTH\n                    ? Types.SQL_INTERVAL_SECOND\n                    : Types.SQL_INTERVAL_MONTH;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java",
  "id": 409,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 292,
    "lines": "String[] expected = new String[] {\n            \"indigo\", \"orange\"\n        };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 307,
    "lines": "String[] expected = new String[] {\n            \"indigo\", \"orange\"\n        };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSubselect.java, /hsqldb/src/org/hsqldb/test/TestSubselect.java",
  "id": 410,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 870,
    "lines": "return (iface != null && iface.isAssignableFrom(this.getClass()));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 3255,
    "lines": "return (iface != null && iface.isAssignableFrom(this.getClass()));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDataSource.java",
    "startLineNumber": 246,
    "lines": "return (iface != null && iface.isAssignableFrom(this.getClass()));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1762,
    "lines": "return (iface != null && iface.isAssignableFrom(this.getClass()));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 3835,
    "lines": "return (iface != null && iface.isAssignableFrom(this.getClass()));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDatabaseMetaData.java",
    "startLineNumber": 5831,
    "lines": "return (iface != null && iface.isAssignableFrom(this.getClass()));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 314,
    "lines": "return (iface != null && iface.isAssignableFrom(this.getClass()));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7004,
    "lines": "return (iface != null && iface.isAssignableFrom(this.getClass()));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java & more ...",
  "id": 411,
  "numClones": 8,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 666,
    "lines": "/**\n     * This method frees the <code>Blob</code> object and releases the resources that\n     * it holds. The object is invalid once the <code>free</code>\n     * method is called.\n     * <p>\n     * After <code>free</code> has been called, any attempt to invoke a\n     * method other than <code>free</code> will result in a <code>SQLException</code>\n     * being thrown.  If <code>free</code> is called multiple times, the subsequent\n     * calls to <code>free</code> are treated as a no-op.\n     * <p>\n     *\n     * @throws SQLException if an error occurs releasing\n     * the Blob's resources\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n    public synchronized void free() throws SQLException {\n        m_closed = true;\n        m_data   = null;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
    "startLineNumber": 809,
    "lines": "/**\n     * This method frees the <code>Clob</code> object and releases the resources the resources\n     * that it holds.  The object is invalid once the <code>free</code> method\n     * is called.\n     * <p>\n     * After <code>free</code> has been called, any attempt to invoke a\n     * method other than <code>free</code> will result in a <code>SQLException</code>\n     * being thrown.  If <code>free</code> is called multiple times, the subsequent\n     * calls to <code>free</code> are treated as a no-op.\n     * <p>\n     * @throws SQLException if an error occurs releasing\n     * the Clob's resources\n     *\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n    public synchronized void free() throws SQLException {\n        m_closed = true;\n        m_data   = null;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
  "id": 412,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1668,
    "lines": "nodes[0].dataType.isBinaryType()\n                           && nodes[1].dataType.isBinaryType()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1237,
    "lines": "nodes[0].dataType.isBinaryType()\n                           && nodes[1].dataType.isBinaryType()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 413,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestTypeConversion.java",
    "startLineNumber": 60,
    "lines": "try {\n            connection = super.newConnection();\n            statement  = connection.createStatement();\n        } catch (Exception e) {\n            System.out.println(e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 74,
    "lines": "try {\n            connection = super.newConnection();\n            statement  = connection.createStatement();\n        } catch (Exception e) {\n            System.out.println(e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestTypeConversion.java, /hsqldb/src/org/hsqldb/test/TestLobs.java",
  "id": 414,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 323,
    "lines": "java.util.Map<String,\n                               Class<?>> map"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 389,
    "lines": "java.util.Map<String,\n            Class<?>> map"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 456,
    "lines": "java.util.Map<String,\n                                      Class<?>> map"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 377,
    "lines": "java.util.Map<String,\n            Class<?>> map"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 468,
    "lines": "java.util.Map<String,\n                                      Class<?>> map"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 311,
    "lines": "java.util.Map<String,\n                               Class<?>> map"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 207,
    "lines": "java.util.Map<String,\n            Class<?>> map"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 218,
    "lines": "java.util.Map<String,\n            Class<?>> map"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArray.java & more ...",
  "id": 415,
  "numClones": 8,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1192,
    "lines": "Table refTable =\n                    session.database.schemaManager.getUserTable(session,\n                        tableName);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 1250,
    "lines": "Table refTable =\n                                session.database.schemaManager.getUserTable(\n                                    session, tableName);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementCommand.java",
  "id": 416,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/DatabaseManager.java",
    "startLineNumber": 346,
    "lines": "if (type == DatabaseURL.S_FILE) {\n            databaseMap = fileDatabaseMap;\n            key         = filePathToKey(path);\n        } else if (type == DatabaseURL.S_RES) {\n            databaseMap = resDatabaseMap;\n        } else if (type == DatabaseURL.S_MEM) {\n            databaseMap = memDatabaseMap;\n        } else {\n            throw (Error.runtimeError(ErrorCode.U_S0500, \"DatabaseManager\"));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/DatabaseManager.java",
    "startLineNumber": 400,
    "lines": "if (type == DatabaseURL.S_FILE) {\n            databaseMap = fileDatabaseMap;\n            key         = filePathToKey(path);\n        } else if (type == DatabaseURL.S_RES) {\n            databaseMap = resDatabaseMap;\n        } else if (type == DatabaseURL.S_MEM) {\n            databaseMap = memDatabaseMap;\n        } else {\n            throw (Error.runtimeError(ErrorCode.U_S0500, \"DatabaseManager\"));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/DatabaseManager.java, /hsqldb/src/org/hsqldb/DatabaseManager.java",
  "id": 417,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 675,
    "lines": "outPacket.writeShort(4);\n                        outPacket.writeInt(-1);\n                        outPacket.writeShort(0);\n                        outPacket.xmit('T', dataOutput);      // Xmit Row Definition\n\n                        // This query returns no rows.  typenam \"lo\"??\n                        outPacket.write(\"SELECT\");\n                        outPacket.xmit('C', dataOutput);\n\n                        sendReadyForQuery = true;\n\n                        break;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 711,
    "lines": "outPacket.writeShort(4);              // Datatype size  [adtsize]\n                        outPacket.writeInt(-1);               // Var size [atttypmod]\n                        outPacket.writeShort(0);              // text \"format code\"\n                        outPacket.xmit('T', dataOutput);      // sending a Tuple (row)\n\n                        // This query returns no rows.  typenam \"lo\"??\n                        outPacket.write(\"SELECT\");\n                        outPacket.xmit('C', dataOutput);\n\n                        sendReadyForQuery = true;\n\n                        break;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/ServerConnection.java, /hsqldb/src/org/hsqldb/server/ServerConnection.java",
  "id": 418,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 609,
    "lines": "parseList = new short[] {\n                    Tokens.OPENBRACKET, Tokens.QUESTION, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.X_OPTION, 2, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.CLOSEBRACKET\n                };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 632,
    "lines": "parseList = new short[] {\n                    Tokens.OPENBRACKET, Tokens.QUESTION, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.X_OPTION, 2, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.CLOSEBRACKET\n                };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 419,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2060,
    "lines": "Object st = Type.SQL_VARCHAR.trim(session, data[1], ' ', true,\n                                                  true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2090,
    "lines": "Object st = Type.SQL_VARCHAR.trim(session, data[1], ' ', true,\n                                                  true);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 420,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 2073,
    "lines": "public Calendar getCalendarGMT() {\n\n        if (calendarGMT == null) {\n            calendarGMT = new GregorianCalendar(TimeZone.getTimeZone(\"GMT\"));\n        }\n\n        return calendarGMT;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ClientConnection.java",
    "startLineNumber": 570,
    "lines": "public Calendar getCalendarGMT() {\n\n        if (calendarGMT == null) {\n            calendarGMT = new GregorianCalendar(TimeZone.getTimeZone(\"GMT\"));\n        }\n\n        return calendarGMT;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/ClientConnection.java",
  "id": 421,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 114,
    "lines": "for (int i = 0; i < limit; i++) {\n                RowAction action = (RowAction) session.rowActionList.get(i);\n\n                if (!action.canCommit(session, session.tempSet)) {\n\n//                System.out.println(\"commit conflicts \" + session + \" \" + session.actionTimestamp);\n                    return false;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 157,
    "lines": "for (int i = 0; i < limit; i++) {\n                RowAction action = (RowAction) session.rowActionList.get(i);\n\n                if (!action.canCommit(session, session.tempSet)) {\n\n//                  System.out.println(\"commit conflicts \" + session + \" \" + session.actionTimestamp);\n                    return false;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 422,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3714,
    "lines": "if (name == null) {\n            name = database.nameManager.newAutoName(\"CT\",\n                    table.getSchemaName(), table.getName(),\n                    SchemaObject.CONSTRAINT);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3644,
    "lines": "if (name == null) {\n            name = database.nameManager.newAutoName(\"CT\",\n                    table.getSchemaName(), table.getName(),\n                    SchemaObject.CONSTRAINT);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 423,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1582,
    "lines": "if (token.tokenType == Tokens.RESTRICT) {\n                    read();\n                } else {\n                    readThis(Tokens.NO);\n                    readThis(Tokens.ACTION);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1546,
    "lines": "if (token.tokenType == Tokens.RESTRICT) {\n                    read();\n                } else {\n                    readThis(Tokens.NO);\n                    readThis(Tokens.ACTION);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 424,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 268,
    "lines": "{\n\n        for (int i = 0; i < array.length; i++) {\n            if (array[i] == value) {\n                return i;\n            }\n        }\n\n        return -1;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 257,
    "lines": "{\n\n        for (int i = 0; i < array.length; i++) {\n            if (array[i] == value) {\n                return i;\n            }\n        }\n\n        return -1;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
  "id": 425,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 443,
    "lines": "nodes[LEFT].dataType.getCombinedType(session,\n                    nodes[RIGHT].dataType, opType)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 465,
    "lines": "nodes[LEFT].dataType.getCombinedType(session,\n                    nodes[RIGHT].dataType, opType)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
  "id": 426,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1096,
    "lines": "return new Long(\n                            t.convertToLongEndUnits(\n                                t.subtract(session, a, b, null)));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1082,
    "lines": "return new Long(\n                            t.convertToLongEndUnits(\n                                t.subtract(session, a, b, null)));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1117,
    "lines": "return new Long(\n                            t.convertToLongEndUnits(\n                                t.subtract(session, a, b, null)));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1089,
    "lines": "return new Long(\n                            t.convertToLongEndUnits(\n                                t.subtract(session, a, b, null)));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1131,
    "lines": "return new Long(\n                            t.convertToLongEndUnits(\n                                t.subtract(session, a, b, null)));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1103,
    "lines": "return new Long(\n                            t.convertToLongEndUnits(\n                                t.subtract(session, a, b, null)));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 427,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1963,
    "lines": "for (int i = 0; i < blanks; i++) {\n            b.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 767,
    "lines": "for (int i = 0; i < blanks; i++) {\n            b.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1926,
    "lines": "for (int i = 0; i < blanks; i++) {\n                b.append(' ');\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 926,
    "lines": "for (int i = 0; i < blanks; i++) {\n            b.append(' ');\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QuerySpecification.java, /hsqldb/src/org/hsqldb/QueryExpression.java & more ...",
  "id": 428,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 463,
    "lines": "int   subType = ((Integer) arguments[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 420,
    "lines": "int  subType = ((Integer) arguments[0]).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchema.java, /hsqldb/src/org/hsqldb/StatementSchema.java",
  "id": 429,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4371,
    "lines": "if (readIfThis(Tokens.DIGEST)) {\n                    isDigest = Boolean.TRUE;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3555,
    "lines": "if (readIfThis(Tokens.DIGEST)) {\n            isDigest = Boolean.TRUE;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 430,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 3794,
    "lines": "if (sessionProxy != null) {\n                sessionProxy.close();\n\n                sessionProxy = null;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 1129,
    "lines": "if (sessionProxy != null) {\n            sessionProxy.close();\n\n            sessionProxy = null;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java, /hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
  "id": 431,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
    "startLineNumber": 208,
    "lines": "if (atom.op != null)\n            throw new IllegalStateException(\n                    \"Expected initial value expected but got operation \"\n                    + atom.op);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
    "startLineNumber": 243,
    "lines": "if (atom.op != null)\n            throw new IllegalStateException(\n                    \"Expected initial value expected but got operation \"\n                    + atom.op);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java, /hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
  "id": 432,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 927,
    "lines": "if (r == null) {\n            String[] g = new String[1];\n\n            g[0] = \"Result\";\n\n            gResult.setHead(g);\n\n            g[0] = \"(empty)\";\n\n            gResult.addRow(g);\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1744,
    "lines": "if (r == null) {\n            String[] g = new String[1];\n\n            g[0] = \"Result\";\n\n            gResult.setHead(g);\n\n            g[0] = \"(empty)\";\n\n            gResult.addRow(g);\n\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 433,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 1147,
    "lines": "/**\n     * Method declaration\n     *\n     *\n     * @param s\n     */\n    private Label createLabel(String s) {\n\n        Label l = new Label(s);\n\n        l.setBackground(SystemColor.control);\n\n        return l;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
    "startLineNumber": 277,
    "lines": "protected static Label createLabel(String s) {\n\n        Label l = new Label(s);\n\n        l.setBackground(SystemColor.control);\n\n        return l;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Transfer.java, /hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
  "id": 434,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2957,
    "lines": "if (tmpString != null) {\n                    autoRefresh = Boolean.valueOf(tmpString).booleanValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 3015,
    "lines": "if (tmpString != null) {\n                    autoRefresh = Boolean.valueOf(tmpString).booleanValue();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 435,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 740,
    "lines": "try {\n                if (conn != null) conn.close();\n            } catch (Exception e) {\n                // Can only report on so many errors at one time\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 777,
    "lines": "try {\n                if (conn != null) conn.close();\n            } catch (Exception e) {\n                // Purposefully doing nothing\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java, /hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
  "id": 436,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/TarReader.java",
    "startLineNumber": 448,
    "lines": "readNow = (readBlocks > archive.getReadBufferBlocks())\n                          ? archive.getReadBufferBlocks()\n                          : readBlocks;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/TarReader.java",
    "startLineNumber": 340,
    "lines": "readNow = (readBlocks > archive.getReadBufferBlocks())\n                          ? archive.getReadBufferBlocks()\n                          : readBlocks;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/TarReader.java, /hsqldb/src/org/hsqldb/lib/tar/TarReader.java",
  "id": 437,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 1105,
    "lines": "catch (HsqlException e) {\n            logSevereEvent(dataFileName + \" getFromFile failed \" + pos, e);\n\n            throw e;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 1162,
    "lines": "catch (HsqlException e) {\n            logSevereEvent(dataFileName + \" getFromFile failed \" + pos, e);\n\n            throw e;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java, /hsqldb/src/org/hsqldb/persist/DataFileCache.java",
  "id": 438,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2331,
    "lines": "{\n                    shared.userVars.put(mathMatcher.group(1), Long.toString(\n                            Calculator.reassignValue(mathMatcher.group(1),\n                            shared.userVars, mathMatcher.group(2),\n                            (mathMatcher.groupCount() < 3)\n                            ? null : mathMatcher.group(3))));\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2372,
    "lines": "{\n                            shared.userVars.put(\n                                    mathMatcher.group(1), Long.toString(\n                                    Calculator.reassignValue(\n                                    mathMatcher.group(1),\n                                    shared.userVars, mathMatcher.group(2),\n                                    (mathMatcher.groupCount() < 3)\n                                    ? null : mathMatcher.group(3))));\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 439,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 872,
    "lines": "baseTable.fireTriggers(session, Trigger.INSERT_BEFORE_ROW, null,\n                                   data, null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 815,
    "lines": "baseTable.fireTriggers(session, Trigger.INSERT_BEFORE_ROW,\n                                       null, data, null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 440,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java",
    "startLineNumber": 518,
    "lines": "{\n        privlog(Level.WARNING, message, null, 2, FrameworkLogger.class);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java",
    "startLineNumber": 483,
    "lines": "{\n        privlog(Level.WARNING, message, null, 2, FrameworkLogger.class);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java, /hsqldb/src/org/hsqldb/lib/FrameworkLogger.java",
  "id": 441,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 3044,
    "lines": "laf       = ((tmpString == null) ? CommonSwing.Native\n                                                 : tmpString);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2986,
    "lines": "laf       = ((tmpString == null) ? CommonSwing.Native\n                                                 : tmpString);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 442,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2662,
    "lines": "while (nav.hasNext()) {\n            Object[] data = (Object[]) nav.getNext();\n            Object[] newData =\n                (Object[]) ArrayUtil.resizeArrayIfDifferent(data, columnCount);\n\n            insertData(session, store, newData);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2710,
    "lines": "while (nav.hasNext()) {\n            Object[] data = (Object[]) nav.getNext();\n            Object[] newData =\n                (Object[]) ArrayUtil.resizeArrayIfDifferent(data, columnCount);\n\n            insertData(session, store, newData);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 443,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 168,
    "lines": "//-- setup for following tests\n        conn1.setAutoCommit(false);\n\n        sql = \"insert into t values(?,?,?,?)\";\n        ps  = conn1.prepareStatement(sql);\n\n        ps.setString(2, \"Mary\");\n        ps.setString(3, \"Peterson-Clancy\");\n\n        i = 0;\n\n        for (; i < 10; i++) {\n            ps.setInt(1, i);\n            ps.setInt(4, i);\n            ps.executeUpdate();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 504,
    "lines": "//-- setup for following tests\n        conn1.setAutoCommit(false);\n\n        sql = \"insert into t values(?,?,?,?)\";\n        ps  = conn1.prepareStatement(sql);\n\n        ps.setString(2, \"Mary\");\n        ps.setString(3, \"Peterson-Clancy\");\n\n        i = 0;\n\n        for (; i < 10; i++) {\n            ps.setInt(1, i);\n            ps.setInt(4, i);\n            ps.executeUpdate();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java, /hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
  "id": 444,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1646,
    "lines": "{\n            parameterValues[i] = null;\n            parameterSet[i]    = Boolean.TRUE;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1572,
    "lines": "{\n            parameterValues[i] = null;\n            parameterSet[i]    = Boolean.TRUE;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4113,
    "lines": "{\n            parameterValues[i] = null;\n            parameterSet[i]    = Boolean.TRUE;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1721,
    "lines": "{\n            parameterValues[i] = null;\n            parameterSet[i]    = Boolean.TRUE;\n\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java & more ...",
  "id": 445,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2825,
    "lines": "if (token.tokenType == Tokens.MAXVALUE) {\n                        sequence.setDefaultMaxValue();\n                    } else if (token.tokenType == Tokens.MINVALUE) {\n                        sequence.setDefaultMinValue();\n                    } else if (token.tokenType == Tokens.CYCLE) {\n                        sequence.setCycle(false);\n                    } else {\n                        throw unexpectedToken();\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4205,
    "lines": "if (token.tokenType == Tokens.MAXVALUE) {\n                                sequence.setDefaultMaxValue();\n                            } else if (token.tokenType == Tokens.MINVALUE) {\n                                sequence.setDefaultMinValue();\n                            } else if (token.tokenType == Tokens.CYCLE) {\n                                sequence.setCycle(false);\n                            } else {\n                                throw unexpectedToken();\n                            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 446,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/CodeSwitcher.java",
    "startLineNumber": 439,
    "lines": "if (v.elementAt(i - 1).equals(\"\")) {\n                                v.insertElementAt(\"*/\", i - 1);\n\n                                i++;\n                            } else {\n                                v.insertElementAt(\"*/\", i++);\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/CodeSwitcher.java",
    "startLineNumber": 415,
    "lines": "if (v.elementAt(i - 1).equals(\"\")) {\n                                v.insertElementAt(\"*/\", i - 1);\n\n                                i++;\n                            } else {\n                                v.insertElementAt(\"*/\", i++);\n                            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/CodeSwitcher.java, /hsqldb/src/org/hsqldb/util/CodeSwitcher.java",
  "id": 447,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 916,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1284,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 876,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 957,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1373,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 997,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1122,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1202,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1162,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1326,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1042,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1082,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1595,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                } } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1415,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1543,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (ps != null) {\n                    ps.close();\n                } } catch(Exception e) {\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java & more ...",
  "id": 448,
  "numClones": 15,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2291,
    "lines": "oldData =\n                                (Object[]) ArrayUtil.duplicateArray(oldData);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2280,
    "lines": "oldData =\n                                (Object[]) ArrayUtil.duplicateArray(oldData);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 449,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1714,
    "lines": "/**\n     * Returns an object that implements the given interface to allow access to\n     * non-standard methods, or standard methods not exposed by the proxy.\n     *\n     * If the receiver implements the interface then the result is the receiver\n     * or a proxy for the receiver. If the receiver is a wrapper\n     * and the wrapped object implements the interface then the result is the\n     * wrapped object or a proxy for the wrapped object. Otherwise return the\n     * the result of calling <code>unwrap</code> recursively on the wrapped object\n     * or a proxy for that result. If the receiver is not a\n     * wrapper and does not implement the interface, then an <code>SQLException</code> is thrown.\n     *\n     * @param iface A Class defining an interface that the result must implement.\n     * @return an object that implements the interface. May be a proxy for the actual implementing object.\n     * @throws java.sql.SQLException If no object found that implements the interface\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n//#ifdef JAVA6\n    @SuppressWarnings(\"unchecked\")\n    public <T>T unwrap(Class<T> iface) throws java.sql.SQLException {\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 3787,
    "lines": "/**\n     * Returns an object that implements the given interface to allow access to\n     * non-standard methods, or standard methods not exposed by the proxy.\n     *\n     * If the receiver implements the interface then the result is the receiver\n     * or a proxy for the receiver. If the receiver is a wrapper\n     * and the wrapped object implements the interface then the result is the\n     * wrapped object or a proxy for the wrapped object. Otherwise return the\n     * the result of calling <code>unwrap</code> recursively on the wrapped object\n     * or a proxy for that result. If the receiver is not a\n     * wrapper and does not implement the interface, then an <code>SQLException</code> is thrown.\n     *\n     * @param iface A Class defining an interface that the result must implement.\n     * @return an object that implements the interface. May be a proxy for the actual implementing object.\n     * @throws java.sql.SQLException If no object found that implements the interface\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n//#ifdef JAVA6\n    @SuppressWarnings(\"unchecked\")\n    public <T>T unwrap(Class<T> iface) throws java.sql.SQLException {\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 450,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 430,
    "lines": "boolean value = ((Boolean) parameters[0]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 509,
    "lines": "boolean value = ((Boolean) parameters[0]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 492,
    "lines": "boolean value =\n                            ((Boolean) parameters[0]).booleanValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementCommand.java & more ...",
  "id": 451,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java",
    "startLineNumber": 320,
    "lines": "String value = i + 1 < arg.length ? arg[i + 1]\n                                                  : \"\";"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java",
    "startLineNumber": 313,
    "lines": "String value = i + 1 < arg.length ? arg[i + 1]\n                                                  : \"\";"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlProperties.java",
  "id": 452,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 957,
    "lines": "if (statement != null) {\n                                try {\n                                    rs = statement.getResultSet();\n                                } catch (SQLException se) {\n                                    try {\n                                        if (statement != null)\n                                            statement.close();\n                                    } catch (SQLException nse) {\n                                        // Purposefully doing nothing\n                                    } finally {\n                                        statement = null;\n                                    }\n                                    throw se;  // rethrow\n                                }\n                                displaySqlResults(\n                                        statement, rs, null, null, true);\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1009,
    "lines": "if (statement != null) {\n                            try {\n                                rs = statement.getResultSet();\n                            } catch (SQLException se) {\n                                try {\n                                    if (statement != null) statement.close();\n                                } catch (SQLException nse) {\n                                    // Purposefully doing nothing\n                                } finally {\n                                    statement = null;\n                                }\n                                throw se;  // rethrow\n                            }\n                            displaySqlResults(\n                                    statement, rs, null, null, true);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 453,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 386,
    "lines": "row  = (RowAVLDisk) store.get(this.row, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 377,
    "lines": "row  = (RowAVLDisk) store.get(this.row, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 336,
    "lines": "row  = (RowAVLDisk) store.get(this.row, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 347,
    "lines": "row  = (RowAVLDisk) store.get(this.row, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 363,
    "lines": "row  = (RowAVLDisk) store.get(this.row, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 411,
    "lines": "row  = (RowAVLDisk) store.get(this.row, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 424,
    "lines": "row  = (RowAVLDisk) store.get(this.row, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 292,
    "lines": "row  = (RowAVLDisk) store.get(this.row, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 324,
    "lines": "row  = (RowAVLDisk) store.get(this.row, true);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java & more ...",
  "id": 454,
  "numClones": 9,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1275,
    "lines": "if (session.database.txManager.canRead(\n                        session, store, row, TransactionManager.ACTION_READ,\n                        null)) {\n                    break;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1340,
    "lines": "if (session.database.txManager.canRead(\n                        session, store, row, TransactionManager.ACTION_READ,\n                        null)) {\n                    break;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java",
  "id": 455,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 176,
    "lines": "public boolean addRow(Row row) {\n        throw Error.runtimeError(ErrorCode.U_S0500, \"RowSetNavigatorClient\");\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 141,
    "lines": "public boolean addRow(Row row) {\n        throw Error.runtimeError(ErrorCode.U_S0500, \"RowSetNavigatorClient\");\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
  "id": 456,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 638,
    "lines": "{\n                if (tail != null) {\n                    tail.next = null;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 714,
    "lines": "{\n                if (tail != null) {\n                    tail.next = null;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAction.java, /hsqldb/src/org/hsqldb/RowAction.java",
  "id": 457,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 153,
    "lines": "Type type = translateType(rmd.columnTypes[--param]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 129,
    "lines": "Type type = translateType(rmd.columnTypes[--param]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 217,
    "lines": "Type type = translateType(rmd.columnTypes[--param]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 181,
    "lines": "Type type = translateType(rmd.columnTypes[--param]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 239,
    "lines": "Type type = translateType(rmd.columnTypes[--param]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 199,
    "lines": "Type type = translateType(rmd.columnTypes[--param]);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java & more ...",
  "id": 458,
  "numClones": 6,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 464,
    "lines": "if (driver != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_params_redundant.getString());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 457,
    "lines": "if (driver != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_params_redundant.getString());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java, /hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
  "id": 459,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobDataID.java",
    "startLineNumber": 186,
    "lines": "{\n\n        ResultLob resultOut = ResultLob.newLobGetTruncateLength(id);\n        Result    resultIn  = session.execute(resultOut);\n\n        if (resultIn.isError()) {\n            throw resultIn.getException();\n        }\n\n        return ((ResultLob) resultIn).getBlockLength();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobDataID.java",
    "startLineNumber": 221,
    "lines": "{\n\n        ResultLob resultOut = ResultLob.newLobGetTruncateLength(id);\n        Result    resultIn  = session.execute(resultOut);\n\n        if (resultIn.isError()) {\n            throw resultIn.getException();\n        }\n\n        return ((ResultLob) resultIn).getBlockLength();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobDataID.java, /hsqldb/src/org/hsqldb/types/ClobDataID.java",
  "id": 460,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 577,
    "lines": "boolean hasNull(Object[] data) {\n\n        for (int i = 0; i < visibleColumnCount; i++) {\n            if (data[i] == null) {\n                return true;\n            }\n        }\n\n        return false;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 575,
    "lines": "boolean hasNull(Object[] data) {\n\n        for (int i = 0; i < visibleColumnCount; i++) {\n            if (data[i] == null) {\n                return true;\n            }\n        }\n\n        return false;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
  "id": 461,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobType.java",
    "startLineNumber": 88,
    "lines": "{\n            factor     = precision / (1024 * 1024 * 1024);\n            multiplier = Tokens.T_G_FACTOR;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobType.java",
    "startLineNumber": 86,
    "lines": "{\n                factor     = precision / (1024 * 1024 * 1024);\n                multiplier = Tokens.T_G_FACTOR;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobType.java, /hsqldb/src/org/hsqldb/types/ClobType.java",
  "id": 462,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSet.java",
    "startLineNumber": 136,
    "lines": "if (subQueries == null || subQueries.size() == 0) {\n            return TableDerived.emptyArray;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementExpression.java",
    "startLineNumber": 102,
    "lines": "if (subQueries == null || subQueries.size() == 0) {\n            return TableDerived.emptyArray;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 328,
    "lines": "if (subQueries == null || subQueries.size() == 0) {\n            return TableDerived.emptyArray;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementProcedure.java",
    "startLineNumber": 301,
    "lines": "if (subQueries == null || subQueries.size() == 0) {\n            return TableDerived.emptyArray;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSet.java, /hsqldb/src/org/hsqldb/StatementExpression.java & more ...",
  "id": 463,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 2073,
    "lines": "/**\n         * Receive an object for locating the origin of SAX document events.\n         *\n         * <p>SAX parsers are strongly encouraged (though not absolutely\n         * required) to supply a locator: if it does so, it must supply\n         * the locator to the application by invoking this method before\n         * invoking any of the other methods in the ContentHandler\n         * interface.</p>\n         *\n         * <p>The locator allows the application to determine the end\n         * position of any document-related event, even if the parser is\n         * not reporting an error.  Typically, the application will\n         * use this information for reporting its own errors (such as\n         * character content that does not match an application's\n         * business rules).  The information returned by the locator\n         * is probably not sufficient for use with a search engine.</p>\n         *\n         * <p>Note that the locator will return correct information only\n         * during the invocation SAX event callbacks after\n         * {@link #startDocument startDocument} returns and before\n         * {@link #endDocument endDocument} is called.  The\n         * application should not attempt to use it at any other time.</p>\n         *\n         * @param locator an object that can return the location of\n         *                any SAX document event\n         * @see org.xml.sax.Locator\n         */\n        public void setDocumentLocator(Locator locator) {\n            this.locator = locator;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 2998,
    "lines": "/**\n         * Receive an object for locating the origin of SAX document events.\n         *\n         * <p>SAX parsers are strongly encouraged (though not absolutely\n         * required) to supply a locator: if it does so, it must supply\n         * the locator to the application by invoking this method before\n         * invoking any of the other methods in the ContentHandler\n         * interface.</p>\n         *\n         * <p>The locator allows the application to determine the end\n         * position of any document-related event, even if the parser is\n         * not reporting an error.  Typically, the application will\n         * use this information for reporting its own errors (such as\n         * character content that does not match an application's\n         * business rules).  The information returned by the locator\n         * is probably not sufficient for use with a search engine.</p>\n         *\n         * <p>Note that the locator will return correct information only\n         * during the invocation SAX event callbacks after\n         * {@link #startDocument startDocument} returns and before\n         * {@link #endDocument endDocument} is called.  The\n         * application should not attempt to use it at any other time.</p>\n         *\n         * @param locator an object that can return the location of\n         *                any SAX document event\n         * @see org.xml.sax.Locator\n         */\n        public void setDocumentLocator(Locator locator) {\n            this.locator = locator;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java, /hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
  "id": 464,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 935,
    "lines": "nodes.length > 3 && nodes[3] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1249,
    "lines": "nodes.length > 3 && nodes[3] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3446,
    "lines": "nodes.length > 3 && nodes[3] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1948,
    "lines": "nodes.length > 3 && nodes[3] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1544,
    "lines": "nodes.length > 3 && nodes[3] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 576,
    "lines": "nodes.length > 3 && nodes[3] != null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 465,
  "numClones": 6,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 627,
    "lines": "NodeAVL backnode = ((RowAVL) row).getNode(0);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 580,
    "lines": "NodeAVL backnode = ((RowAVL) row).getNode(0);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
  "id": 466,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4152,
    "lines": "{\n\n        Expression e = XreadExplicitRowValueConstructorOrNull();\n\n        if (e != null) {\n            return e;\n        }\n\n        return XreadRowValueSpecialCase();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4163,
    "lines": "{\n\n        Expression e = XreadExplicitRowValueConstructorOrNull();\n\n        if (e != null) {\n            return e;\n        }\n\n        return XreadRowValueSpecialCase();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 467,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 907,
    "lines": "{\n                    throw Error.runtimeError(ErrorCode.U_S0500,\n                                             \"FK mismatch : \"\n                                             + c.getName().name);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 898,
    "lines": "{\n                    throw Error.runtimeError(ErrorCode.U_S0500,\n                                             \"FK mismatch : \"\n                                             + c.getName().name);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 468,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 228,
    "lines": "try {\n            if (isLogged) {\n                session.database.logger.writeOtherStatement(session, sql);\n            }\n        } catch (Throwable e) {\n            return Result.newErrorResult(e, sql);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 250,
    "lines": "try {\n            if (isLogged) {\n                session.database.logger.writeOtherStatement(session, sql);\n            }\n        } catch (Throwable e) {\n            return Result.newErrorResult(e, sql);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 281,
    "lines": "try {\n            if (isLogged) {\n                session.database.logger.writeOtherStatement(session, sql);\n            }\n        } catch (Throwable e) {\n            return Result.newErrorResult(e, sql);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementSession.java & more ...",
  "id": 469,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java",
    "startLineNumber": 120,
    "lines": "String s = StringConverter.byteArrayToBitString(o.getBytes(),\n            (int) o.bitLength(null));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputText.java",
    "startLineNumber": 334,
    "lines": "String s = StringConverter.byteArrayToBitString(o.getBytes(),\n            (int) o.bitLength(null));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java, /hsqldb/src/org/hsqldb/rowio/RowOutputText.java",
  "id": 470,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementInsert.java",
    "startLineNumber": 125,
    "lines": "Object[] data = getInsertData(session, colTypes,\n                                          insertExpression.nodes[0].nodes);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 711,
    "lines": "Object[] data =\n                        getInsertData(session, colTypes,\n                                      insertExpression.nodes[0].nodes);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementInsert.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 471,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4660,
    "lines": "{\n            currentResultSet = new JDBCResultSet(connection, this, resultIn,\n                    resultIn.metaData);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1820,
    "lines": "{\n            currentResultSet = new JDBCResultSet(connection, this, resultIn,\n                    resultIn.metaData);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
  "id": 472,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1785,
    "lines": "StatementExpression condition = new StatementExpression(session,\n            compileContext, StatementTypes.CONDITION, e);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1738,
    "lines": "StatementExpression condition = new StatementExpression(session,\n            compileContext, StatementTypes.CONDITION, e);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java",
  "id": 473,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 259,
    "lines": "if (currentPosition == limit) {\n            resetState();\n\n            token.tokenType = Tokens.X_ENDPARSE;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 246,
    "lines": "if (currentPosition == limit) {\n            resetState();\n\n            token.tokenType = Tokens.X_ENDPARSE;\n\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 474,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDateTime.java",
    "startLineNumber": 311,
    "lines": "iDeletedCount = deleteStatement.executeUpdate();\n\n        Assert.assertEquals(\n            \"Exactly one record with time data shoud have been deleted.\",\n            iDeletedCount, 1);\n\n        // And now test the date\n        Assert.assertNotNull(\n            \"The inserted time shouldn't be retrieved as null from the database\",\n            retrievedTime);\n\n        // Ignore milliseconds when comparing dates\n        String selectString = selectTime.toString();\n        String retrievedString = retrievedTime.toString();\n\n        boolean result =\n            retrievedString.equals(selectString);\n\n        Assert.assertTrue(\n            \"The time retrieved from database \"\n            + DateFormat.getDateTimeInstance().format(retrievedTime)\n            + \" is not the same as the inserted one \"\n            + DateFormat.getDateTimeInstance().format(insertTime), result);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDateTime.java",
    "startLineNumber": 211,
    "lines": "iDeletedCount = deleteStatement.executeUpdate();\n\n        Assert.assertEquals(\n            \"Exactly one record with time data shoud have been deleted.\",\n            iDeletedCount, 1);\n\n        // And now test the date\n        Assert.assertNotNull(\n            \"The inserted time shouldn't be retrieved as null from the database\",\n            retrievedTime);\n\n        // Ignore milliseconds when comparing dates\n        String selectString = selectTime.toString();\n        String retrievedString = retrievedTime.toString();\n\n        boolean result =\n            retrievedString.equals(selectString);\n\n        Assert.assertTrue(\n            \"The time retrieved from database \"\n            + DateFormat.getDateTimeInstance().format(retrievedTime)\n            + \" is not the same as the inserted one \"\n            + DateFormat.getDateTimeInstance().format(insertTime), result);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDateTime.java, /hsqldb/src/org/hsqldb/test/TestDateTime.java",
  "id": 475,
  "numClones": 2,
  "cloneSize": 16
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/TextFileReader.java",
    "startLineNumber": 284,
    "lines": "if (wasCR) {\n                            wasCR = false;\n\n                            ((RowInputText) rowIn).skippedLine();\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/TextFileReader.java",
    "startLineNumber": 295,
    "lines": "if (wasCR) {\n                            wasCR = false;\n\n                            ((RowInputText) rowIn).skippedLine();\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/TextFileReader.java, /hsqldb/src/org/hsqldb/persist/TextFileReader.java",
  "id": 476,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4358,
    "lines": "{\n            parameterValues[i - 1] = o;\n            streamLengths[i - 1]   = streamLength;\n            parameterSet[i - 1]    = Boolean.FALSE;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4430,
    "lines": "{\n            parameterValues[i - 1] = o;\n            streamLengths[i - 1]   = streamLength;\n            parameterSet[i - 1]    = Boolean.FALSE;\n\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 477,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 58,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return intValueTable[lookup];\n        }\n\n        throw new NoSuchElementException();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
    "startLineNumber": 65,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return intValueTable[lookup];\n        }\n\n        throw new NoSuchElementException();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java, /hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
  "id": 478,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 368,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 812,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 575,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 949,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 541,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 905,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 346,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 422,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 610,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 854,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 766,
    "lines": "reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java & more ...",
  "id": 479,
  "numClones": 11,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestKarl.java",
    "startLineNumber": 76,
    "lines": "for (int i = 0; i < list.length; i++) {\n                    list[i].delete();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 857,
    "lines": "for (int i = 0; i < list.length; i++) {\n                list[i].delete();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestKarl.java, /hsqldb/src/org/hsqldb/persist/Log.java",
  "id": 480,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 143,
    "lines": "public String getString(String... strings) {\n        return vrb.getString(this, strings);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 308,
    "lines": "public String getString(String... strings) {\n        return vrb.getString(this, strings);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/RB.java, /hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
  "id": 481,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 917,
    "lines": "Object[] metaData = (Object[]) dbMeta.get(key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 872,
    "lines": "Object[] metaData = (Object[]) dbMeta.get(key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 948,
    "lines": "Object[] metaData = (Object[]) dbMeta.get(key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 884,
    "lines": "Object[] metaData = (Object[]) dbMeta.get(key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 968,
    "lines": "Object[] metaData = (Object[]) dbMeta.get(key);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java & more ...",
  "id": 482,
  "numClones": 5,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2503,
    "lines": "{\n                            read();\n\n                            isIdentity   = true;\n                            isPKIdentity = true;\n                            typeObject   = Type.SQL_BIGINT;\n                            sequence = new NumberSequence(null, 1, 1,\n                                                          typeObject);\n\n                            break;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2482,
    "lines": "{\n                            read();\n\n                            isIdentity   = true;\n                            isPKIdentity = true;\n                            typeObject   = Type.SQL_BIGINT;\n                            sequence = new NumberSequence(null, 1, 1,\n                                                          typeObject);\n\n                            break;\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 483,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 313,
    "lines": "type == StatementTypes.UPDATE_WHERE\n                    || type == StatementTypes.MERGE"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 269,
    "lines": "type == StatementTypes.UPDATE_WHERE\n                    || type == StatementTypes.MERGE"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 484,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1815,
    "lines": "if (i < 0) {\n                        result = x;\n                        n      = x.getRight(store);\n                    } else {\n                        n = x.getLeft(store);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1716,
    "lines": "if (i < 0) {\n                                result = x;\n                                n      = x.getRight(store);\n                            } else {\n                                n = x.getLeft(store);\n                            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java",
  "id": 485,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 622,
    "lines": "sb.append(nodes[RIGHT].describe(session, blanks + 1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 195,
    "lines": "sb.append(nodes[RIGHT].describe(session, blanks + 1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 225,
    "lines": "sb.append(nodes[RIGHT].describe(session, blanks + 1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 336,
    "lines": "sb.append(nodes[RIGHT].describe(session, blanks + 1));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionAccessor.java & more ...",
  "id": 486,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 224,
    "lines": "{\n            int c = ((int) b[i]) & 0xff;\n\n            s[j++] = (char) HEXBYTES[c >> 4 & 0xf];\n            s[j++] = (char) HEXBYTES[c & 0xf];\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 252,
    "lines": "{\n            int c = ((int) b[i]) & 0xff;\n\n            s[j++] = (char) HEXBYTES[c >> 4 & 0xf];\n            s[j++] = (char) HEXBYTES[c & 0xf];\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/StringConverter.java, /hsqldb/src/org/hsqldb/lib/StringConverter.java",
  "id": 487,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
    "startLineNumber": 217,
    "lines": "if (nextAtom.op == null)\n                throw new IllegalStateException(\n                        \"Operator expected but got value \" + nextAtom.val);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
    "startLineNumber": 252,
    "lines": "if (nextAtom.op == null)\n                throw new IllegalStateException(\n                        \"Operator expected but got value \" + nextAtom.val);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java, /hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
  "id": 488,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 461,
    "lines": "if (rs.next()) {\n            intparam[0] = rs.getInt(1);\n\n            rs.close();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 441,
    "lines": "if (rs.next()) {\n            intparam[0] = rs.getInt(1);\n\n            rs.close();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java, /hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
  "id": 489,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 593,
    "lines": "if (isSimpleAggregate) {\n            if (simpleAggregateData == null) {\n                simpleAggregateData = data;\n\n                return null;\n            }\n\n            return simpleAggregateData;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 591,
    "lines": "if (isSimpleAggregate) {\n            if (simpleAggregateData == null) {\n                simpleAggregateData = data;\n\n                return null;\n            }\n\n            return simpleAggregateData;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
  "id": 490,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementInsert.java",
    "startLineNumber": 117,
    "lines": "if (generatedIndexes != null) {\n            resultOut = Result.newUpdateCountResult(generatedResultMetaData,\n                    0);\n            generatedNavigator = resultOut.getChainedResult().getNavigator();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 502,
    "lines": "if (generatedIndexes != null) {\n            resultOut = Result.newUpdateCountResult(generatedResultMetaData,\n                    0);\n            generatedNavigator = resultOut.getChainedResult().getNavigator();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 674,
    "lines": "if (generatedIndexes != null) {\n            resultOut = Result.newUpdateCountResult(generatedResultMetaData,\n                    0);\n            generatedNavigator = resultOut.getChainedResult().getNavigator();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementInsert.java, /hsqldb/src/org/hsqldb/StatementDML.java & more ...",
  "id": 491,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3812,
    "lines": "if (table.getColumnCount() == 1) {\n            throw Error.error(ErrorCode.X_42591);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 693,
    "lines": "if (table.getColumnCount() == 1) {\n                        throw Error.error(ErrorCode.X_42591);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/StatementSchema.java",
  "id": 492,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayInputStream.java",
    "startLineNumber": 159,
    "lines": "if ((ch1 | ch2) < 0) {\n            throw new EOFException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayInputStream.java",
    "startLineNumber": 147,
    "lines": "if ((ch1 | ch2) < 0) {\n            throw new EOFException();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayInputStream.java, /hsqldb/src/org/hsqldb/lib/HsqlByteArrayInputStream.java",
  "id": 493,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobType.java",
    "startLineNumber": 89,
    "lines": "{\n                factor     = precision / (1024 * 1024);\n                multiplier = Tokens.T_M_FACTOR;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobType.java",
    "startLineNumber": 91,
    "lines": "{\n            factor     = precision / (1024 * 1024);\n            multiplier = Tokens.T_M_FACTOR;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ClobType.java, /hsqldb/src/org/hsqldb/types/BlobType.java",
  "id": 494,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1531,
    "lines": "{\n                Object value =\n                    session.sessionContext.rangeIterators[rangePosition]\n                        .getCurrent(columnIndex);\n\n                return value;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 774,
    "lines": "{\n                Object value =\n                    session.sessionContext.rangeIterators[rangePosition]\n                        .getCurrent(columnIndex);\n\n                return value;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1195,
    "lines": "{\n                Object value =\n                    session.sessionContext.rangeIterators[rangePosition]\n                        .getCurrent(columnIndex);\n\n                return value;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 673,
    "lines": "{\n                Object value =\n                    session.sessionContext.rangeIterators[rangePosition]\n                        .getCurrent(columnIndex);\n\n                return value;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 616,
    "lines": "{\n                Object value =\n                    session.sessionContext.rangeIterators[rangePosition]\n                        .getCurrent(columnIndex);\n\n                return value;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQLInvoked.java",
    "startLineNumber": 189,
    "lines": "{\n            Object value =\n                session.sessionContext.rangeIterators[rangePosition]\n                    .getCurrent(columnIndex);\n\n            return value;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/ExpressionOp.java & more ...",
  "id": 495,
  "numClones": 6,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 894,
    "lines": "if (n == null) {\n                store.setAccessor(this, ((RowAVL) row).getNode(position));\n\n                return;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
    "startLineNumber": 192,
    "lines": "if (n == null) {\n                store.setAccessor(this, ((RowAVL) row).getNode(position));\n\n                return;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
  "id": 496,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TriggerDef.java",
    "startLineNumber": 196,
    "lines": "rangeVars[OLD_ROW] != null\n                              || rangeVars[NEW_ROW] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TriggerDefSQL.java",
    "startLineNumber": 90,
    "lines": "rangeVars[OLD_ROW] != null || rangeVars[NEW_ROW] != null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TriggerDef.java, /hsqldb/src/org/hsqldb/TriggerDefSQL.java",
  "id": 497,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMappedList.java",
    "startLineNumber": 233,
    "lines": "private void checkRange(int i) {\n\n        if (i < 0 || i >= size()) {\n            throw new IndexOutOfBoundsException();\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java",
    "startLineNumber": 155,
    "lines": "private void checkRange(int i) {\n\n        if (i < 0 || i >= size()) {\n            throw new IndexOutOfBoundsException();\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedHashSet.java",
    "startLineNumber": 197,
    "lines": "private void checkRange(int i) {\n\n        if (i < 0 || i >= size()) {\n            throw new IndexOutOfBoundsException();\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java",
    "startLineNumber": 155,
    "lines": "private void checkRange(int i) {\n\n        if (i < 0 || i >= size()) {\n            throw new IndexOutOfBoundsException();\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HashMappedList.java, /hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java & more ...",
  "id": 498,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4580,
    "lines": "if (list[i].nodes.length != degree) {\n                        throw Error.error(ErrorCode.X_42564);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4720,
    "lines": "if (list[i].nodes.length != degree) {\n                    throw Error.error(ErrorCode.X_42564);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 499,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 189,
    "lines": "if (dataTypes.length != otherTypes.length) {\n            throw Error.error(ErrorCode.X_42564);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 316,
    "lines": "if (dataTypes.length != otherTypes.length) {\n            throw Error.error(ErrorCode.X_42564);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 344,
    "lines": "if (dataTypes.length != otherTypes.length) {\n            throw Error.error(ErrorCode.X_42564);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/RowType.java, /hsqldb/src/org/hsqldb/types/RowType.java & more ...",
  "id": 500,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1043,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 600,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1110,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 570,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 778,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 742,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1141,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1149,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1244,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2024,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2032,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2160,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2056,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2051,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2155,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 913,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1013,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2002,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1890,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2086,
    "lines": "data[0] == null || data[1] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1222,
    "lines": "data[0] == null || data[1] == null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 501,
  "numClones": 21,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 191,
    "lines": "if (newLimit > limit) {\n                Object[] list = session.rowActionList.getArray();\n\n                mergeTransaction(list, limit, newLimit,\n                                 session.actionTimestamp);\n                finaliseRows(session, list, limit, newLimit);\n                session.rowActionList.setSize(limit);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 139,
    "lines": "if (newLimit > limit) {\n                Object[] list = session.rowActionList.getArray();\n\n                mergeTransaction(list, limit, newLimit,\n                                 session.actionTimestamp);\n                finaliseRows(session, list, limit, newLimit);\n                session.rowActionList.setSize(limit);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java, /hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
  "id": 502,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java",
    "startLineNumber": 105,
    "lines": "for (; i < array.length; i++) {\n            if (!super.containsKey(array[i])) {\n                break;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMapConcurrent.java",
    "startLineNumber": 137,
    "lines": "for (; i < array.length; i++) {\n                if (!super.containsKey(array[i])) {\n                    break;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java",
    "startLineNumber": 105,
    "lines": "for (; i < array.length; i++) {\n            if (!super.containsKey(array[i])) {\n                break;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyHashMap.java",
    "startLineNumber": 171,
    "lines": "for (; i < array.length; i++) {\n                if (!super.containsKey(array[i])) {\n                    break;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java, /hsqldb/src/org/hsqldb/lib/IntKeyHashMapConcurrent.java & more ...",
  "id": 503,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1383,
    "lines": "return result >= 0 ? Boolean.TRUE\n                                   : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1485,
    "lines": "return result >= 0 ? Boolean.TRUE\n                                   : Boolean.FALSE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 504,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 223,
    "lines": "if (getRightNode() != null) {\n            sb.append(\" arg_right=[\");\n            sb.append(nodes[RIGHT].describe(session, blanks + 1));\n            sb.append(']');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 334,
    "lines": "if (getRightNode() != null) {\n            sb.append(\" arg_right=[\");\n            sb.append(nodes[RIGHT].describe(session, blanks + 1));\n            sb.append(']');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 620,
    "lines": "if (getRightNode() != null) {\n            sb.append(\" arg_right=[\");\n            sb.append(nodes[RIGHT].describe(session, blanks + 1));\n            sb.append(']');\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionOp.java & more ...",
  "id": 505,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 120,
    "lines": "c.core.updateAction == SchemaObject.ReferentialAction.SET_NULL"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 78,
    "lines": "c.core.updateAction == SchemaObject\n                .ReferentialAction.SET_NULL"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 506,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 279,
    "lines": "if (level == SessionInterface.TX_READ_UNCOMMITTED) {\n            level = SessionInterface.TX_READ_COMMITTED;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 253,
    "lines": "if (level == SessionInterface.TX_READ_UNCOMMITTED) {\n            level = SessionInterface.TX_READ_COMMITTED;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 507,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDatabaseMetaData.java",
    "startLineNumber": 3130,
    "lines": "(types != null && types.length == 0)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDatabaseMetaData.java",
    "startLineNumber": 4778,
    "lines": "(types != null && types.length == 0)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCDatabaseMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCDatabaseMetaData.java",
  "id": 508,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 579,
    "lines": "if (token.tokenType != Tokens.X_VALUE\n                        || token.dataType.typeCode != Types.SQL_CHAR) {\n                    break;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 546,
    "lines": "if (token.tokenType != Tokens.X_VALUE\n                        || token.dataType.typeCode != Types.SQL_CHAR) {\n                    break;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 562,
    "lines": "if (token.tokenType != Tokens.X_VALUE\n                        || token.dataType.typeCode != Types.SQL_CHAR) {\n                    break;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserBase.java, /hsqldb/src/org/hsqldb/ParserBase.java & more ...",
  "id": 509,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 462,
    "lines": "NumberSequence seq =\n                                session.database.schemaManager.getSequence(\n                                    tableName, session.getSchemaName(schema),\n                                    false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 447,
    "lines": "NumberSequence seq =\n                                session.database.schemaManager.getSequence(\n                                    tableName, session.getSchemaName(schema),\n                                    false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionColumn.java, /hsqldb/src/org/hsqldb/ExpressionColumn.java",
  "id": 510,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 205,
    "lines": "if (node.nRight == null || !node.nRight.isInMemory()) {\n            node.nRight         = findNode(store, node.iRight);\n            node.nRight.nParent = node;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 249,
    "lines": "if (node.nRight == null || !node.nRight.isInMemory()) {\n            node.nRight         = findNode(store, node.iRight);\n            node.nRight.nParent = node;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java, /hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
  "id": 511,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 508,
    "lines": "if (rights.hasNext()) {\n            OrderedHashSet set = new OrderedHashSet();\n\n            while (rights.hasNext()) {\n                set.add(rights.next());\n            }\n\n            return set;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 485,
    "lines": "if (rights.hasNext()) {\n            OrderedHashSet set = new OrderedHashSet();\n\n            while (rights.hasNext()) {\n                set.add(rights.next());\n            }\n\n            return set;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/Grantee.java, /hsqldb/src/org/hsqldb/rights/Grantee.java",
  "id": 512,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 1957,
    "lines": "sb.append(database.sqlSyntaxOra ? Tokens.T_TRUE\n                                            : Tokens.T_FALSE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 1927,
    "lines": "sb.append(database.sqlSyntaxOra ? Tokens.T_TRUE\n                                            : Tokens.T_FALSE);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Logger.java, /hsqldb/src/org/hsqldb/persist/Logger.java",
  "id": 513,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 474,
    "lines": "map[index] = (byte) (b | mask);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 577,
    "lines": "map[index] = (byte) (b | mask);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BitMap.java, /hsqldb/src/org/hsqldb/map/BitMap.java",
  "id": 514,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5556,
    "lines": "Expression condition   = new ExpressionLogical(OpTypes.IS_NULL, c);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5591,
    "lines": "Expression condition   = new ExpressionLogical(OpTypes.IS_NULL, c);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 515,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 890,
    "lines": "{\n                nodes[RIGHT].dataType = nodes[LEFT].dataType;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 896,
    "lines": "{\n                nodes[RIGHT].dataType = nodes[LEFT].dataType;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 413,
    "lines": "{\n                            nodes[RIGHT].dataType = nodes[LEFT].dataType;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 423,
    "lines": "{\n                        nodes[RIGHT].dataType = nodes[LEFT].dataType;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 403,
    "lines": "{\n                        nodes[RIGHT].dataType = nodes[LEFT].dataType;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java & more ...",
  "id": 516,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultLob.java",
    "startLineNumber": 410,
    "lines": "result.byteBlock   = new byte[(int) result.blockLength];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultLob.java",
    "startLineNumber": 386,
    "lines": "result.byteBlock   = new byte[(int) result.blockLength];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/ResultLob.java, /hsqldb/src/org/hsqldb/result/ResultLob.java",
  "id": 517,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 750,
    "lines": "{\n\n        if (data == null) {\n            throw JDBCUtil.nullArgument();\n        }\n        m_data                = data;\n        m_createdByConnection = false;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
    "startLineNumber": 881,
    "lines": "{\n\n        if (data == null) {\n            throw JDBCUtil.nullArgument();\n        }\n        m_data                = data;\n        m_createdByConnection = false;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
  "id": 518,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 331,
    "lines": "System.out.println(\"Max/Min memory usage: \"\n                           + (MemoryWatcher.max / 1024) + \" / \"\n                           + (MemoryWatcher.min / 1024) + \" kb\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 340,
    "lines": "System.out.println(\"Max/Min memory usage: \"\n                           + (MemoryWatcher.max / 1024) + \" / \"\n                           + (MemoryWatcher.min / 1024) + \" kb\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 519,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 670,
    "lines": "{\n                            CreateIndex =\n                                CreateIndex.substring(\n                                    0, CreateIndex.length() - 1) + \");\";\n                            DropIndex += \";\";\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 720,
    "lines": "{\n                    CreateIndex =\n                        CreateIndex.substring(0, CreateIndex.length() - 1)\n                        + \");\";\n                    DropIndex += \";\";\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferDb.java, /hsqldb/src/org/hsqldb/util/TransferDb.java",
  "id": 520,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3651,
    "lines": "HsqlName indexname = database.nameManager.newAutoName(\"IDX\",\n            name.name, table.getSchemaName(), table.getName(),\n            SchemaObject.INDEX);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 651,
    "lines": "// create an autonamed index\n        HsqlName indexname = database.nameManager.newAutoName(\"IDX\",\n            name.name, table.getSchemaName(), table.getName(),\n            SchemaObject.INDEX);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 521,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringUtil.java",
    "startLineNumber": 251,
    "lines": "{\n\n        int          len = s.length;\n        StringBuffer sb  = new StringBuffer(len * 8);\n\n        for (int i = 0; i < len; i++) {\n            sb.append(quote);\n            sb.append(s[i]);\n            sb.append(quote);\n\n            if (i + 1 < len) {\n                sb.append(separator);\n            }\n        }\n\n        return sb.toString();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringUtil.java",
    "startLineNumber": 269,
    "lines": "{\n\n        int          len = s.length;\n        StringBuffer sb  = new StringBuffer(len * 8);\n\n        for (int i = 0; i < len; i++) {\n            sb.append(quote);\n            sb.append(s[i]);\n            sb.append(quote);\n\n            if (i + 1 < len) {\n                sb.append(separator);\n            }\n        }\n\n        return sb.toString();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/StringUtil.java, /hsqldb/src/org/hsqldb/lib/StringUtil.java",
  "id": 522,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 419,
    "lines": "SchemaObject[] routines =\n                ((RoutineSchema) dbObject).getSpecificRoutines();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 213,
    "lines": "SchemaObject[] routines =\n                ((RoutineSchema) dbObject).getSpecificRoutines();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java, /hsqldb/src/org/hsqldb/rights/GranteeManager.java",
  "id": 523,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreMem.java",
    "startLineNumber": 98,
    "lines": "if ((blockOffset + currentBlockCount) > blocksInLargeBlock) {\n                currentBlockCount = blocksInLargeBlock - blockOffset;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreMem.java",
    "startLineNumber": 66,
    "lines": "if ((blockOffset + currentBlockCount) > blocksInLargeBlock) {\n                currentBlockCount = blocksInLargeBlock - blockOffset;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobStoreMem.java, /hsqldb/src/org/hsqldb/persist/LobStoreMem.java",
  "id": 524,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1560,
    "lines": "for (int i = 0; i < ba2.length; i++) {\n            assertEquals(\"Byte \" + i + \" wrong (2)\", expectedBytes[i], ba2[i]);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1612,
    "lines": "for (int i = 0; i < ba2.length; i++) {\n            assertEquals(\"Byte \" + i + \" wrong (2)\", expectedBytes[i], ba2[i]);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 525,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobType.java",
    "startLineNumber": 92,
    "lines": "{\n                factor     = precision / (1024);\n                multiplier = Tokens.T_K_FACTOR;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobType.java",
    "startLineNumber": 94,
    "lines": "{\n            factor     = precision / (1024);\n            multiplier = Tokens.T_K_FACTOR;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ClobType.java, /hsqldb/src/org/hsqldb/types/BlobType.java",
  "id": 526,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 378,
    "lines": "sSchemas != null && sSchemas[SchemaIdx] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 394,
    "lines": "sSchemas != null && sSchemas[SchemaIdx] != null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferDb.java, /hsqldb/src/org/hsqldb/util/TransferDb.java",
  "id": 527,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/TextFileReader.java",
    "startLineNumber": 105,
    "lines": "if (!isReadOnly) {\n                        dataFile.write(TextFileSettings.BYTES_LINE_SEP, 0,\n                                       TextFileSettings.BYTES_LINE_SEP.length);\n                        buffer.write(TextFileSettings.BYTES_LINE_SEP);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/TextFileReader.java",
    "startLineNumber": 198,
    "lines": "if (!isReadOnly) {\n                        dataFile.write(TextFileSettings.BYTES_LINE_SEP, 0,\n                                       TextFileSettings.BYTES_LINE_SEP.length);\n                        buffer.write(TextFileSettings.BYTES_LINE_SEP);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/TextFileReader.java, /hsqldb/src/org/hsqldb/persist/TextFileReader.java",
  "id": 528,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptReaderText.java",
    "startLineNumber": 222,
    "lines": "catch (IOException e) {\n                throw Error.error(e, ErrorCode.FILE_IO_ERROR, null);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptReaderText.java",
    "startLineNumber": 298,
    "lines": "catch (IOException e) {\n            throw Error.error(e, ErrorCode.FILE_IO_ERROR, null);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/scriptio/ScriptReaderText.java, /hsqldb/src/org/hsqldb/scriptio/ScriptReaderText.java",
  "id": 529,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 334,
    "lines": "try {\n            if (result != null) {\n                while (result.next()) {\n                    ret.addElement(result.getString(1));\n                }\n\n                result.close();\n            }\n        } catch (SQLException e) {\n            throw new DataAccessPointException(e.toString());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 302,
    "lines": "try {\n            if (result != null) {\n                while (result.next()) {\n                    ret.addElement(result.getString(1));\n                }\n\n                result.close();\n            }\n        } catch (SQLException e) {\n            throw new DataAccessPointException(e.toString());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferDb.java, /hsqldb/src/org/hsqldb/util/TransferDb.java",
  "id": 530,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java",
    "startLineNumber": 120,
    "lines": "if (columnType.equals(\"SERIAL\")) {\n            String SeqName = new String(\"_\" + columnDesc.getString(4)\n                                        + \"_seq\");\n            int spaceleft = 31 - SeqName.length();\n\n            if (t.Stmts.sDestTable.length() > spaceleft) {\n                SeqName = t.Stmts.sDestTable.substring(0, spaceleft)\n                          + SeqName;\n            } else {\n                SeqName = t.Stmts.sDestTable + SeqName;\n            }\n\n            String DropSequence = \"DROP SEQUENCE \" + SeqName + \";\";\n\n            t.Stmts.sDestDrop += DropSequence;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/OracleTransferHelper.java",
    "startLineNumber": 98,
    "lines": "if (columnType.equals(\"SERIAL\")) {\n            String SeqName = new String(\"_\" + columnDesc.getString(4)\n                                        + \"_seq\");\n            int spaceleft = 31 - SeqName.length();\n\n            if (t.Stmts.sDestTable.length() > spaceleft) {\n                SeqName = t.Stmts.sDestTable.substring(0, spaceleft)\n                          + SeqName;\n            } else {\n                SeqName = t.Stmts.sDestTable + SeqName;\n            }\n\n            String DropSequence = \"DROP SEQUENCE \" + SeqName + \";\";\n\n            t.Stmts.sDestDrop += DropSequence;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java, /hsqldb/src/org/hsqldb/util/OracleTransferHelper.java",
  "id": 531,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 998,
    "lines": "protected void createFile() throws SQLException {\n\n        try {\n            if (!m_file.exists()) {\n                FileUtil.getFileUtil().makeParentDirectories(m_file);\n                m_file.createNewFile();\n            }\n        } catch (Exception ex) {\n            throw JDBCUtil.sqlException(ex);\n        }\n\n        checkIsFile( /*checkExists*/true);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 805,
    "lines": "private void createFile() throws SQLException {\n\n        try {\n            if (!m_file.exists()) {\n                FileUtil.getFileUtil().makeParentDirectories(m_file);\n                m_file.createNewFile();\n            }\n        } catch (Exception ex) {\n            throw JDBCUtil.sqlException(ex);\n        }\n\n        checkIsFile( /*checkExists*/true);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
  "id": 532,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 369,
    "lines": "spaceManagerPosition = (long) dataFile.readInt()\n                                       * DataSpaceManager.fixedBlockSizeUnit;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 259,
    "lines": "spaceManagerPosition = (long) dataFile.readInt()\n                                       * DataSpaceManager.fixedBlockSizeUnit;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java, /hsqldb/src/org/hsqldb/persist/DataFileCache.java",
  "id": 533,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1033,
    "lines": "assertEquals(Double.class, rs.getObject(\"f\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 303,
    "lines": "assertEquals(Double.class, rs.getObject(\"f\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 534,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 230,
    "lines": "if (iMaxRows != 0 || i % 100 == 0) {\n                    tracer.trace(\"Transfered \" + i + \" rows\");\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 124,
    "lines": "if (iMaxRows != 0 || i % 100 == 0) {\n                    tracer.trace(\"Transfered \" + i + \" rows\");\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferDb.java, /hsqldb/src/org/hsqldb/util/TransferSQLText.java",
  "id": 535,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 807,
    "lines": "if (hasLength) {\n            end = offset + length;\n        } else {\n            end = dataLength > offset ? dataLength\n                                      : offset;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 602,
    "lines": "if (hasLength) {\n            end = offset + length;\n        } else {\n            end = dataLength > offset ? dataLength\n                                      : offset;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 444,
    "lines": "if (hasLength) {\n            end = offset + length;\n        } else {\n            end = dataLength > offset ? dataLength\n                                      : offset;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java & more ...",
  "id": 536,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1948,
    "lines": "scale = ((Number) token.tokenValue).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1916,
    "lines": "scale = ((Number) token.tokenValue).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 537,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 844,
    "lines": "if (alias != null) {\n                    sb.append(\" AS \").append(alias.name);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 835,
    "lines": "if (alias != null) {\n                    sb.append(\" AS \").append(alias.name);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionColumn.java, /hsqldb/src/org/hsqldb/ExpressionColumn.java",
  "id": 538,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java",
    "startLineNumber": 1552,
    "lines": "Expression e = new ExpressionLogical(rangeVar, leftIndex,\n                                                         newRangeVar,\n                                                         rightIndex);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java",
    "startLineNumber": 1534,
    "lines": "Expression e = new ExpressionLogical(rangeVar, leftIndex,\n                                                         newRangeVar,\n                                                         rightIndex);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java, /hsqldb/src/org/hsqldb/RangeVariableResolver.java",
  "id": 539,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 812,
    "lines": "if (reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)) {\n                    System.out.println(\"Update \" + (i + 1) + \" : \"\n                                       + sw.elapsedTime() + \" rps: \"\n                                       + (i * 1000 / (sw.elapsedTime() + 1)));\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 854,
    "lines": "if (reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)) {\n                    System.out.println(\"Update \" + (i + 1) + \" : \"\n                                       + sw.elapsedTime() + \" rps: \"\n                                       + (i * 1000 / (sw.elapsedTime() + 1)));\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 766,
    "lines": "if (reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)) {\n                    System.out.println(\"Update \" + (i + 1) + \" : \"\n                                       + sw.elapsedTime() + \" rps: \"\n                                       + (i * 1000 / (sw.elapsedTime() + 1)));\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java & more ...",
  "id": 540,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1047,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    if (nodes[i] == null) {\n                        continue;\n                    }\n\n                    unresolvedSet = nodes[i].resolveColumnReferences(session,\n                            rangeGroup, rangeCount, rangeGroups,\n                            unresolvedSet, acceptsSequences);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 358,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] == null) {\n                continue;\n            }\n\n            unresolvedSet = nodes[i].resolveColumnReferences(session,\n                    rangeGroup, rangeCount, rangeGroups, unresolvedSet,\n                    acceptsSequences);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 240,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] == null) {\n                continue;\n            }\n\n            unresolvedSet = nodes[i].resolveColumnReferences(session,\n                    rangeGroup, rangeCount, rangeGroups, unresolvedSet,\n                    acceptsSequences);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1061,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] == null) {\n                continue;\n            }\n\n            unresolvedSet = nodes[i].resolveColumnReferences(session,\n                    rangeGroup, rangeCount, rangeGroups, unresolvedSet,\n                    acceptsSequences);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 65,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] == null) {\n                continue;\n            }\n\n            unresolvedSet = nodes[i].resolveColumnReferences(session,\n                    rangeGroup, rangeCount, rangeGroups, unresolvedSet, acceptsSequences);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/ExpressionOp.java & more ...",
  "id": 541,
  "numClones": 5,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2556,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_TIMESTAMP;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3238,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_TIMESTAMP;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 542,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1209,
    "lines": "if (i == -1) {\n            throw Error.error(ErrorCode.X_42501, name);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1493,
    "lines": "if (i == -1) {\n            throw Error.error(ErrorCode.X_42501, name);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 543,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 707,
    "lines": "if (accessTable != null) {\n                    accessTable[lookup] = 0;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 382,
    "lines": "if (accessTable != null) {\n                    accessTable[lookup] = 0;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 840,
    "lines": "if (accessTable != null) {\n                    accessTable[lookup] = 0;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java & more ...",
  "id": 544,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 594,
    "lines": "Right right = (Right) fullRightsMap.get(table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 458,
    "lines": "Right right = (Right) fullRightsMap.get(table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 831,
    "lines": "Right right = (Right) fullRightsMap.get(table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 575,
    "lines": "Right right = (Right) fullRightsMap.get(table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 816,
    "lines": "Right right = (Right) fullRightsMap.get(table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 632,
    "lines": "Right right = (Right) fullRightsMap.get(table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 556,
    "lines": "Right right = (Right) fullRightsMap.get(table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 613,
    "lines": "Right right = (Right) fullRightsMap.get(table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 537,
    "lines": "Right right = (Right) fullRightsMap.get(table.getName());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/Grantee.java, /hsqldb/src/org/hsqldb/rights/Grantee.java & more ...",
  "id": 545,
  "numClones": 9,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 91,
    "lines": "if (tx) {\n                RowAction.addInsertAction(session, (Table) table,\n                                          (Row) object);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 98,
    "lines": "if (tx) {\n                RowAction.addInsertAction(session, (Table) table,\n                                          (Row) object);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
  "id": 546,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 1740,
    "lines": "{\n                        row[numeric_precision] =\n                            ValuePool.getInt(type.getJDBCPrecision());\n                        row[character_octet_length] =\n                            ValuePool.getInt(type.getJDBCPrecision());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 1731,
    "lines": "{\n                        row[numeric_precision] =\n                            ValuePool.getInt(type.getJDBCPrecision());\n\n                        // this is length not octet_length, for character columns\n                        row[character_octet_length] =\n                            ValuePool.getInt(type.getJDBCPrecision());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 547,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 201,
    "lines": "protected String describe(Session session, int blanks) {\n\n        StringBuffer sb = new StringBuffer();\n\n        sb.append('\\n');\n\n        for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }\n\n        sb.append(Tokens.T_STATEMENT);\n\n        return sb.toString();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementExpression.java",
    "startLineNumber": 117,
    "lines": "protected String describe(Session session, int blanks) {\n\n        StringBuffer sb = new StringBuffer();\n\n        sb.append('\\n');\n\n        for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }\n\n        sb.append(Tokens.T_STATEMENT);\n\n        return sb.toString();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSet.java",
    "startLineNumber": 270,
    "lines": "protected String describe(Session session, int blanks) {\n\n        StringBuffer sb = new StringBuffer();\n\n        sb.append('\\n');\n\n        for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }\n\n        sb.append(Tokens.T_STATEMENT);\n\n        return sb.toString();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSimple.java",
    "startLineNumber": 106,
    "lines": "protected String describe(Session session, int blanks) {\n\n        StringBuffer sb = new StringBuffer();\n\n        sb.append('\\n');\n\n        for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }\n\n        sb.append(Tokens.T_STATEMENT);\n\n        return sb.toString();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCompound.java, /hsqldb/src/org/hsqldb/StatementExpression.java & more ...",
  "id": 548,
  "numClones": 4,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 950,
    "lines": "if (existing.grantableRights == null) {\n                existing.grantableRights = add.grantableRights.duplicate();\n            } else {\n                existing.grantableRights.add(add.grantableRights);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 985,
    "lines": "if (existing.grantableRights == null) {\n                    existing.grantableRights = add.grantableRights.duplicate();\n                } else {\n                    existing.grantableRights.add(add.grantableRights);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/Grantee.java, /hsqldb/src/org/hsqldb/rights/Grantee.java",
  "id": 549,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1406,
    "lines": "assertEquals(Timestamp.class, rs.getObject(\"tsw\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 630,
    "lines": "assertEquals(Timestamp.class, rs.getObject(\"tsw\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 550,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 1175,
    "lines": "if (value < 8 && value != 1) {\n            throw Error.error(ErrorCode.X_42556);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 1190,
    "lines": "if (value < 8 && value != 1) {\n            throw Error.error(ErrorCode.X_42556);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Logger.java, /hsqldb/src/org/hsqldb/persist/Logger.java",
  "id": 551,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
    "startLineNumber": 255,
    "lines": "public void commitRow(Session session, Row row, int changeAction,\n                          int txModel) {\n\n        switch (changeAction) {\n\n            case RowAction.ACTION_DELETE :\n                remove(row);\n                break;\n\n            case RowAction.ACTION_INSERT :\n                break;\n\n            case RowAction.ACTION_INSERT_DELETE :\n\n                // INSERT + DELEETE\n                remove(row);\n                break;\n\n            case RowAction.ACTION_DELETE_FINAL :\n                delete(session, row);\n                remove(row);\n                break;\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 132,
    "lines": "public void commitRow(Session session, Row row, int changeAction,\n                          int txModel) {\n\n        switch (changeAction) {\n\n            case RowAction.ACTION_DELETE :\n                remove(row);\n                break;\n\n            case RowAction.ACTION_INSERT :\n                break;\n\n            case RowAction.ACTION_INSERT_DELETE :\n\n                // INSERT + DELEETE\n                remove(row);\n                break;\n\n            case RowAction.ACTION_DELETE_FINAL :\n                delete(session, row);\n                remove(row);\n                break;\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
  "id": 552,
  "numClones": 2,
  "cloneSize": 17
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 287,
    "lines": "name.type == SchemaObject.COLUMN\n                            || name.type == SchemaObject.TABLE"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ColumnSchema.java",
    "startLineNumber": 395,
    "lines": "name.type == SchemaObject.COLUMN\n                        || name.type == SchemaObject.TABLE"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Constraint.java, /hsqldb/src/org/hsqldb/ColumnSchema.java",
  "id": 553,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSimple.java",
    "startLineNumber": 125,
    "lines": "try {\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 267,
    "lines": "try {\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 216,
    "lines": "try {\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchemaDefinition.java",
    "startLineNumber": 63,
    "lines": "try {\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 238,
    "lines": "try {\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSimple.java, /hsqldb/src/org/hsqldb/StatementSchema.java & more ...",
  "id": 554,
  "numClones": 5,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSimple.java",
    "startLineNumber": 121,
    "lines": "public Result execute(Session session) {\n\n        Result result;\n\n        try {\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }\n\n        if (result.isError()) {\n            result.getException().setStatementType(group, type);\n        }\n\n        return result;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchemaDefinition.java",
    "startLineNumber": 59,
    "lines": "public Result execute(Session session) {\n\n        Result result;\n\n        try {\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }\n\n        if (result.isError()) {\n            result.getException().setStatementType(group, type);\n        }\n\n        return result;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSimple.java, /hsqldb/src/org/hsqldb/StatementSchemaDefinition.java",
  "id": 555,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 476,
    "lines": "{\n                    byte[] data = b.getBytes(session, 0, (int) precision);\n\n                    b = new BinaryData(data, false);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 462,
    "lines": "{\n                    byte[] data = b.getBytes(session, 0, (int) precision);\n\n                    b = new BinaryData(data, false);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BinaryType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java",
  "id": 556,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 265,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 239,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 252,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 196,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 174,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 218,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java & more ...",
  "id": 557,
  "numClones": 6,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Tree.java",
    "startLineNumber": 490,
    "lines": "if (root[ci].length() < key.length()) {\n                ci++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Tree.java",
    "startLineNumber": 360,
    "lines": "if (root[ci].length() < key.length()) {\n                ci++;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Tree.java, /hsqldb/src/org/hsqldb/util/Tree.java",
  "id": 558,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 858,
    "lines": "{\n                            return dataType.add(session, data[3],\n                                                ValuePool.INTEGER_1,\n                                                Type.SQL_INTEGER);\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 878,
    "lines": "{\n                            return dataType.add(session, data[3],\n                                                ValuePool.INTEGER_1,\n                                                Type.SQL_INTEGER);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 559,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java",
    "startLineNumber": 60,
    "lines": "{\n\n        int oldSize = size();\n\n        super.addOrRemove(key, 0, null, null, false);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java",
    "startLineNumber": 60,
    "lines": "{\n\n        int oldSize = size();\n\n        super.addOrRemove(key, 0, null, null, false);\n\n        return oldSize != size();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java, /hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java",
  "id": 560,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2053,
    "lines": "if (aParts.length == bParts.length) {\n            return 0;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2087,
    "lines": "if (aParts.length == bParts.length) {\n            return 0;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 561,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 454,
    "lines": "private static final String  revnum =\n            (revStringLength - \" $\".length() > \"$Revision: \".length())\n            ?  revString.substring(\"$Revision: \".length(),\n                    revStringLength - \" $\".length())\n            : \"<UNTRACKED>\";"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 83,
    "lines": "private static final String  revnum =\n            (revStringLength - \" $\".length() > \"$Revision: \".length())\n            ?  revString.substring(\"$Revision: \".length(),\n                    revStringLength - \" $\".length())\n            : \"<UNTRACKED>\";"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
  "id": 562,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4427,
    "lines": "parameterSet[i - 1]    = Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4355,
    "lines": "parameterSet[i - 1]    = Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4412,
    "lines": "parameterSet[i - 1]    = Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4400,
    "lines": "parameterSet[i - 1]    = Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4332,
    "lines": "parameterSet[i - 1]    = Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4433,
    "lines": "parameterSet[i - 1]    = Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4361,
    "lines": "parameterSet[i - 1]    = Boolean.FALSE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java & more ...",
  "id": 563,
  "numClones": 7,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 190,
    "lines": "nodes.length > 0 ? nodes[LEFT]\n                                                            : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 862,
    "lines": "nodes.length > 0 ? nodes[LEFT]\n                                : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAggregate.java",
    "startLineNumber": 71,
    "lines": "nodes.length > 0 ? nodes[LEFT]\n                                                           : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 109,
    "lines": "nodes.length > 0 ? nodes[LEFT]\n                                                      : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 101,
    "lines": "nodes.length > 0 ? nodes[LEFT]\n                                                           : null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionOp.java, /hsqldb/src/org/hsqldb/Expression.java & more ...",
  "id": 564,
  "numClones": 5,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/HsqlSocketFactorySecure.java",
    "startLineNumber": 126,
    "lines": "if (Error.TRACESYSTEMOUT) {\n            Error.printSystemOut(\"[\" + this + \"]: createServerSocket()\");\n            Error.printSystemOut(\"capabilities for \" + ss + \":\");\n            Error.printSystemOut(\"----------------------------\");\n            dump(\"supported cipher suites\", ss.getSupportedCipherSuites());\n            dump(\"enabled cipher suites\", ss.getEnabledCipherSuites());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/HsqlSocketFactorySecure.java",
    "startLineNumber": 156,
    "lines": "if (Error.TRACESYSTEMOUT) {\n            Error.printSystemOut(\"[\" + this + \"]: createServerSocket()\");\n            Error.printSystemOut(\"capabilities for \" + ss + \":\");\n            Error.printSystemOut(\"----------------------------\");\n            dump(\"supported cipher suites\", ss.getSupportedCipherSuites());\n            dump(\"enabled cipher suites\", ss.getEnabledCipherSuites());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/HsqlSocketFactorySecure.java, /hsqldb/src/org/hsqldb/server/HsqlSocketFactorySecure.java",
  "id": 565,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 509,
    "lines": "switch (dataType.typeCode) {\n\n            case Types.TINYINT :\n                max = Byte.MAX_VALUE;\n                min = Byte.MIN_VALUE;\n                break;\n\n            case Types.SQL_SMALLINT :\n                max = Short.MAX_VALUE;\n                min = Short.MIN_VALUE;\n                break;\n\n            case Types.SQL_INTEGER :\n                max = Integer.MAX_VALUE;\n                min = Integer.MIN_VALUE;\n                break;\n\n            case Types.SQL_BIGINT :\n                max = Long.MAX_VALUE;\n                min = Long.MIN_VALUE;\n                break;\n\n            case Types.SQL_NUMERIC :\n            case Types.SQL_DECIMAL :\n                max = Long.MAX_VALUE;\n                min = Long.MIN_VALUE;\n                break;\n\n            default :\n                throw Error.runtimeError(ErrorCode.U_S0500, \"NumberSequence\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 468,
    "lines": "switch (dataType.typeCode) {\n\n            case Types.TINYINT :\n                max = Byte.MAX_VALUE;\n                min = Byte.MIN_VALUE;\n                break;\n\n            case Types.SQL_SMALLINT :\n                max = Short.MAX_VALUE;\n                min = Short.MIN_VALUE;\n                break;\n\n            case Types.SQL_INTEGER :\n                max = Integer.MAX_VALUE;\n                min = Integer.MIN_VALUE;\n                break;\n\n            case Types.SQL_BIGINT :\n                max = Long.MAX_VALUE;\n                min = Long.MIN_VALUE;\n                break;\n\n            case Types.SQL_NUMERIC :\n            case Types.SQL_DECIMAL :\n                max = Long.MAX_VALUE;\n                min = Long.MIN_VALUE;\n                break;\n\n            default :\n                throw Error.runtimeError(ErrorCode.U_S0500, \"NumberSequence\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 338,
    "lines": "switch (dataType.typeCode) {\n\n            case Types.TINYINT :\n                max = Byte.MAX_VALUE;\n                min = Byte.MIN_VALUE;\n                break;\n\n            case Types.SQL_SMALLINT :\n                max = Short.MAX_VALUE;\n                min = Short.MIN_VALUE;\n                break;\n\n            case Types.SQL_INTEGER :\n                max = Integer.MAX_VALUE;\n                min = Integer.MIN_VALUE;\n                break;\n\n            case Types.SQL_BIGINT :\n                max = Long.MAX_VALUE;\n                min = Long.MIN_VALUE;\n                break;\n\n            case Types.SQL_NUMERIC :\n            case Types.SQL_DECIMAL :\n                max = Long.MAX_VALUE;\n                min = Long.MIN_VALUE;\n                break;\n\n            default :\n                throw Error.runtimeError(ErrorCode.U_S0500, \"NumberSequence\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/NumberSequence.java, /hsqldb/src/org/hsqldb/NumberSequence.java & more ...",
  "id": 566,
  "numClones": 3,
  "cloneSize": 25
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ClientConnection.java",
    "startLineNumber": 248,
    "lines": "catch (Throwable e) {\n            throw Error.error(ErrorCode.X_08006, e.toString());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ClientConnection.java",
    "startLineNumber": 231,
    "lines": "catch (Throwable e) {\n            throw Error.error(ErrorCode.X_08006, e.toString());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ClientConnection.java, /hsqldb/src/org/hsqldb/ClientConnection.java",
  "id": 567,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 160,
    "lines": "boolean isRight(NodeAVL n) {\n\n        if (n == null) {\n            return iRight == NO_POS;\n        }\n\n        return iRight == n.getPos();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 204,
    "lines": "boolean isRight(NodeAVL n) {\n\n        if (n == null) {\n            return iRight == NO_POS;\n        }\n\n        return iRight == n.getPos();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java, /hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
  "id": 568,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/UserManager.java",
    "startLineNumber": 475,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_DATABASE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2586,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_DATABASE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/UserManager.java",
    "startLineNumber": 464,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_DATABASE);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/UserManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java & more ...",
  "id": 569,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 415,
    "lines": "if (c == '\\'') {\n                complete = true;\n\n                currentPosition++;\n\n                break;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 515,
    "lines": "if (c == '\\'') {\n                complete = true;\n\n                currentPosition++;\n\n                break;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 570,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 667,
    "lines": "try {\n            String ddl0 = \"DROP TABLE CLOBTEST IF EXISTS\";\n            String ddl1 =\n                \"CREATE TABLE CLOBTEST(ID IDENTITY, CLOBFIELD CLOB(100000))\";\n\n            statement.execute(ddl0);\n            statement.execute(ddl1);\n        } catch (SQLException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 262,
    "lines": "try {\n            String ddl0 = \"DROP TABLE CLOBTEST IF EXISTS\";\n            String ddl1 =\n                \"CREATE TABLE CLOBTEST(ID IDENTITY, CLOBFIELD CLOB(100000))\";\n\n            statement.execute(ddl0);\n            statement.execute(ddl1);\n        } catch (SQLException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 742,
    "lines": "try {\n            String ddl0 = \"DROP TABLE CLOBTEST IF EXISTS\";\n            String ddl1 =\n                \"CREATE TABLE CLOBTEST(ID IDENTITY, CLOBFIELD CLOB(100000))\";\n\n            statement.execute(ddl0);\n            statement.execute(ddl1);\n        } catch (SQLException e) {}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLobs.java, /hsqldb/src/org/hsqldb/test/TestLobs.java & more ...",
  "id": 571,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 279,
    "lines": "assertTrue(\"Not enough rows fetched\", rs.next());\n            assertEquals(3, rs.getInt(2));\n            assertEquals(40, rs.getInt(1));\n            assertEquals(\"forty\", rs.getString(3));\n            assertEquals(\"str\", rs.getString(4));\n\n            assertFalse(\"Too many rows fetched\", rs.next());\n            rs.close();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 102,
    "lines": "assertTrue(\"Not enough rows fetched\", rs.next());\n            assertEquals(3, rs.getInt(2));\n            assertEquals(40, rs.getInt(1));\n            assertEquals(\"forty\", rs.getString(3));\n            assertEquals(\"str\", rs.getString(4));\n\n            assertFalse(\"Too many rows fetched\", rs.next());\n            rs.close();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 314,
    "lines": "assertTrue(\"Not enough rows fetched\", rs.next());\n            assertEquals(3, rs.getInt(2));\n            assertEquals(40, rs.getInt(1));\n            assertEquals(\"forty\", rs.getString(3));\n            assertEquals(\"str\", rs.getString(4));\n\n            assertFalse(\"Too many rows fetched\", rs.next());\n            rs.close();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java, /hsqldb/src/org/hsqldb/test/TestOdbcService.java & more ...",
  "id": 572,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7702,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6, 7\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4988,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6, 7\n            }, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 573,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 196,
    "lines": "{\n            System.err.println(\n                \"Failed to get home directory.\\n\"\n                + \"Therefore not retrieving/storing user preferences.\\n(\"\n                + e.getMessage() + ')');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 191,
    "lines": "{\n            System.err.println(\n                \"Failed to get home directory.\\n\"\n                + \"Therefore not retrieving/storing user preferences.\\n(\"\n                + e.getMessage() + ')');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 181,
    "lines": "{\n            System.err.println(\n                \"Failed to get home directory.\\n\"\n                + \"Therefore not retrieving/storing user preferences.\\n(\"\n                + e.getMessage() + ')');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 201,
    "lines": "{\n            System.err.println(\n                \"Failed to get home directory.\\n\"\n                + \"Therefore not retrieving/storing user preferences.\\n(\"\n                + e.getMessage() + ')');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 186,
    "lines": "{\n            System.err.println(\n                \"Failed to get home directory.\\n\"\n                + \"Therefore not retrieving/storing user preferences.\\n(\"\n                + e.getMessage() + ')');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 206,
    "lines": "{\n            System.err.println(\n                \"Failed to get home directory.\\n\"\n                + \"Therefore not retrieving/storing user preferences.\\n(\"\n                + e.getMessage() + ')');\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java & more ...",
  "id": 574,
  "numClones": 6,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 132,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    tps = Integer.parseInt(Args[i]);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 132,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    tps = Integer.parseInt(Args[i]);\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 575,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1896,
    "lines": "if (l > size[j]) {\n                    size[j] = l;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1109,
    "lines": "if (l > size[j]) {\n                    size[j] = l;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java",
  "id": 576,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1103,
    "lines": "lines[0] = lines[0].substring(closeCmd + 2).trim();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1011,
    "lines": "lines[0] = lines[0].substring(closeCmd + 2).trim();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUtil.java, /hsqldb/src/org/hsqldb/test/TestUtil.java",
  "id": 577,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 3039,
    "lines": "{\n\n        Double value = new Double(x);\n\n        startUpdate(columnIndex);\n        preparedStatement.setParameter(columnIndex, value);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 3004,
    "lines": "{\n\n        Double value = new Double(x);\n\n        startUpdate(columnIndex);\n        preparedStatement.setParameter(columnIndex, value);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 578,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 388,
    "lines": "if (exprList.size() > 1) {\n            throw Error.parseError(ErrorCode.X_42602, null,\n                                   scanner.getLineNumber());\n        }\n\n        Expression expression = (Expression) exprList.get(0);\n\n        if (expression.getDegree() != targetSet.size()) {\n            throw Error.error(ErrorCode.X_42546, Tokens.T_SET);\n        }\n\n        int[] columnMap = new int[colIndexList.size()];\n\n        colIndexList.toArray(columnMap);\n\n        Expression[] targets = new Expression[targetSet.size()];\n\n        targetSet.toArray(targets);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 449,
    "lines": "if (exprList.size() > 1) {\n            throw Error.parseError(ErrorCode.X_42602, null,\n                                   scanner.getLineNumber());\n        }\n\n        Expression expression = (Expression) exprList.get(0);\n\n        if (expression.getDegree() != targetSet.size()) {\n            throw Error.error(ErrorCode.X_42546, Tokens.T_SET);\n        }\n\n        int[] columnMap = new int[colIndexList.size()];\n\n        colIndexList.toArray(columnMap);\n\n        Expression[] targets = new Expression[targetSet.size()];\n\n        targetSet.toArray(targets);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java",
  "id": 579,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 974,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                set = nodes[i].collectRangeVariables(rangeVariables, set);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 932,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                set = nodes[i].collectRangeVariables(rangeVariables, set);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionColumn.java, /hsqldb/src/org/hsqldb/Expression.java",
  "id": 580,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 835,
    "lines": "Error.error(null, ErrorCode.X_23513,\n                                   ErrorCode.CONSTRAINT, info)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 1010,
    "lines": "Error.error(null, ErrorCode.X_23513,\n                                  ErrorCode.CONSTRAINT, info)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 800,
    "lines": "Error.error(null, ErrorCode.X_23513, ErrorCode.CONSTRAINT,\n                              info)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Constraint.java, /hsqldb/src/org/hsqldb/Constraint.java & more ...",
  "id": 581,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 124,
    "lines": "public RowAVL getRow(PersistentStore store) {\n\n        if (!row.isInMemory()) {\n            return (RowAVLDisk) store.get(this.row, false);\n        } else {\n            row.updateAccessCount(store.getAccessCount());\n        }\n\n        return row;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 168,
    "lines": "public RowAVL getRow(PersistentStore store) {\n\n        if (!row.isInMemory()) {\n            return (RowAVLDisk) store.get(this.row, false);\n        } else {\n            row.updateAccessCount(store.getAccessCount());\n        }\n\n        return row;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java, /hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
  "id": 582,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/TarGenerator.java",
    "startLineNumber": 587,
    "lines": "sum += isInRange\n                       ? 32\n                       : (255 & rawHeader[i]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/TarReader.java",
    "startLineNumber": 788,
    "lines": "// We ignore current contents of the checksum field so that\n                // this method will continue to work right, even if we later\n                // recycle the header or RE-calculate a header.\n                sum += isInRange ? 32\n                                 : (255 & rawHeader[i]);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/TarGenerator.java, /hsqldb/src/org/hsqldb/lib/tar/TarReader.java",
  "id": 583,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 3806,
    "lines": "{\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 285,
    "lines": "{\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 6975,
    "lines": "{\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPool.java",
    "startLineNumber": 174,
    "lines": "{\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 841,
    "lines": "{\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDataSource.java",
    "startLineNumber": 217,
    "lines": "{\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1733,
    "lines": "{\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDatabaseMetaData.java",
    "startLineNumber": 5802,
    "lines": "{\n\n        if (isWrapperFor(iface)) {\n            return (T) this;\n        }\n\n        throw JDBCUtil.invalidArgument(\"iface: \" + iface);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java & more ...",
  "id": 584,
  "numClones": 8,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCascade.java",
    "startLineNumber": 71,
    "lines": "System.out.println(this + \".setUp() error: \" + e.getMessage());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 102,
    "lines": "//e.printStackTrace();\n            System.out.println(this + \".setUp() error: \" + e.getMessage());"
   },
   {
    "fileName": "/hsqldb/doc/verbatim/src/org/hsqldb/test/TestBase.java",
    "startLineNumber": 140,
    "lines": "System.out.println(this + \".setUp() error: \" + e.getMessage());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCascade.java, /hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java & more ...",
  "id": 585,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1642,
    "lines": "checkSetParameterIndex(parameterIndex);\n\n        int i = parameterIndex - 1;\n\n        if (x == null) {\n            parameterValues[i] = null;\n            parameterSet[i]    = Boolean.TRUE;\n\n            return;\n        }\n\n        Type     outType    = parameterTypes[i];\n        long     millis     = x.getTime();\n        int      zoneOffset = 0;\n        Calendar calendar   = cal == null ? session.getCalendar()\n                : cal;\n\n        millis = HsqlDateTime.convertMillisFromCalendar(calendar, millis);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1717,
    "lines": "checkSetParameterIndex(parameterIndex);\n\n        int i = parameterIndex - 1;\n\n        if (x == null) {\n            parameterValues[i] = null;\n            parameterSet[i]    = Boolean.TRUE;\n\n            return;\n        }\n\n        Type     outType    = parameterTypes[i];\n        long     millis     = x.getTime();\n        int      zoneOffset = 0;\n        Calendar calendar   = cal == null ? session.getCalendar()\n                : cal;\n\n        millis = HsqlDateTime.convertMillisFromCalendar(calendar, millis);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 586,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 244,
    "lines": "{\n                    assertTrue(\"Expected array len \" + baR1.length\n                               + \", got len \" + baOut.length, false);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 189,
    "lines": "{\n                    assertTrue(\"Expected array len \" + baR1.length\n                               + \", got len \" + baOut.length, false);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 238,
    "lines": "{\n                assertTrue(\"Expected array len \" + baR1.length + \", got len \"\n                           + baOut.length, false);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 183,
    "lines": "{\n                assertTrue(\"Expected array len \" + baR1.length + \", got len \"\n                           + baOut.length, false);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLobs.java, /hsqldb/src/org/hsqldb/test/TestLobs.java & more ...",
  "id": 587,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/integration/hibernate/src/org/hibernate/dialect/HSQLDialect.java",
    "startLineNumber": 514,
    "lines": "{\n                if ( hsqldbVersion < 20 ) {\n                        return Boolean.TRUE;\n                }\n                else {\n                        return Boolean.FALSE;\n                }\n        }"
   },
   {
    "fileName": "/hsqldb/integration/hibernate/src/org/hibernate/dialect/HSQLDialect.java",
    "startLineNumber": 536,
    "lines": "{\n            if ( hsqldbVersion < 20 ) {\n                    return Boolean.TRUE;\n            }\n            else {\n                    return Boolean.FALSE;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/integration/hibernate/src/org/hibernate/dialect/HSQLDialect.java, /hsqldb/integration/hibernate/src/org/hibernate/dialect/HSQLDialect.java",
  "id": 588,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 558,
    "lines": "if (index >= 0) {\n            transactionCount--;\n\n            liveTransactionTimestamps.remove(index);\n            mergeExpiredTransactions(session);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 840,
    "lines": "if (index >= 0) {\n            transactionCount--;\n\n            liveTransactionTimestamps.remove(index);\n            mergeExpiredTransactions(session);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 589,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 338,
    "lines": "public String getString(String s1, String s2, int i3) {\n        return vrb.getString(this, s1, s2, i3);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 173,
    "lines": "public String getString(String s1, String s2, int i3) {\n        return vrb.getString(this, s1, s2, i3);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java, /hsqldb/src/org/hsqldb/lib/tar/RB.java",
  "id": 590,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultLob.java",
    "startLineNumber": 418,
    "lines": "result.charBlock   = new char[(int) result.blockLength];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultLob.java",
    "startLineNumber": 395,
    "lines": "result.charBlock   = new char[(int) result.blockLength];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/ResultLob.java, /hsqldb/src/org/hsqldb/result/ResultLob.java",
  "id": 591,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1149,
    "lines": "catch (Exception e2) {\n                    token.tokenType   = Tokens.X_MALFORMED_NUMERIC;\n                    token.isMalformed = true;\n\n                    return;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1134,
    "lines": "catch (Exception e2) {\n                    token.tokenType   = Tokens.X_MALFORMED_NUMERIC;\n                    token.isMalformed = true;\n\n                    return;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 592,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 3021,
    "lines": "if (tmpString != null) {\n                    showRowCounts = Boolean.valueOf(tmpString).booleanValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2963,
    "lines": "if (tmpString != null) {\n                    showRowCounts = Boolean.valueOf(tmpString).booleanValue();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 593,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/CodeSwitcher.java",
    "startLineNumber": 393,
    "lines": "{\n                            working = true;\n\n                            v.insertElementAt(\"/*\", ++i);\n\n                            switchoff = true;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/CodeSwitcher.java",
    "startLineNumber": 367,
    "lines": "{\n                            working = true;\n\n                            v.insertElementAt(\"/*\", ++i);\n\n                            switchoff = true;\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/CodeSwitcher.java, /hsqldb/src/org/hsqldb/util/CodeSwitcher.java",
  "id": 594,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 910,
    "lines": "int bBlockOffset = bAddresses[bIndex][LOBS.BLOCK_ADDR] + bOffset;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 978,
    "lines": "int bBlockOffset = bAddresses[bIndex][LOBS.BLOCK_ADDR] + bOffset;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 595,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 619,
    "lines": "if ((i % 100 == 0) && (transactions)) {\n                    Conn.commit();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 652,
    "lines": "if ((i % 100 == 0) && (transactions)) {\n                    Conn.commit();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/JDBCBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 596,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1683,
    "lines": "i = compareObject(session, currentRow.getData(),\n                                              rowdata, rowColMap, fieldCount,\n                                              compareType);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1712,
    "lines": "i = compareObject(session, currentRow.getData(),\n                                              rowdata, rowColMap, fieldCount,\n                                              compareType);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1698,
    "lines": "i = compareObject(session, currentRow.getData(),\n                                              rowdata, rowColMap, fieldCount,\n                                              compareType);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1726,
    "lines": "i = compareObject(session, currentRow.getData(),\n                                              rowdata, rowColMap, fieldCount,\n                                              compareType);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java & more ...",
  "id": 597,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 395,
    "lines": "Object[]    compareData = null;\n        RowIterator it;\n        Row         otherRow  = null;\n        Object[]    otherData = null;\n\n        sortFull(session);\n        other.sortFull(session);\n\n        it = fullIndex.emptyIterator();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 454,
    "lines": "Object[]    compareData = null;\n        RowIterator it;\n        Row         otherRow  = null;\n        Object[]    otherData = null;\n\n        sortFull(session);\n        other.sortFull(session);\n\n        it = fullIndex.emptyIterator();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
  "id": 598,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1383,
    "lines": "!nodes[0].dataType.isNumberType()\n                        || !nodes[1].dataType.isNumberType()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2803,
    "lines": "!nodes[0].dataType.isNumberType()\n                        || !nodes[1].dataType.isNumberType()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1409,
    "lines": "!nodes[0].dataType.isNumberType()\n                        || !nodes[1].dataType.isNumberType()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 599,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 496,
    "lines": "if (condition != null) {\n            rangeVariables[0].addJoinCondition(condition);\n\n            RangeVariableResolver resolver =\n                new RangeVariableResolver(rangeVariables, null,\n                                          compileContext, false);\n\n            resolver.processConditions(session);\n\n            rangeVariables = resolver.rangeVariables;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 615,
    "lines": "if (condition != null) {\n            rangeVariables[0].addJoinCondition(condition);\n\n            RangeVariableResolver resolver =\n                new RangeVariableResolver(rangeVariables, null,\n                                          compileContext, false);\n\n            resolver.processConditions(session);\n\n            rangeVariables = resolver.rangeVariables;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDML.java",
  "id": 600,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 353,
    "lines": "buffer[count++] = (byte) (v >>> 8);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 266,
    "lines": "buffer[count++] = (byte) (v >>> 8);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 174,
    "lines": "buffer[count++] = (byte) (v >>> 8);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 115,
    "lines": "buffer[count++] = (byte) (v >>> 8);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 187,
    "lines": "buffer[count++] = (byte) (v >>> 8);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 127,
    "lines": "buffer[count++] = (byte) (v >>> 8);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java, /hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java & more ...",
  "id": 601,
  "numClones": 6,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 539,
    "lines": "return o == null ? 0\n                         : ((Number) o).byteValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 471,
    "lines": "return o == null ? 0\n                         : ((Number) o).byteValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
  "id": 602,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1652,
    "lines": "if (args[0] == null && args[1] == null) {\n                        throw unexpectedToken();\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 676,
    "lines": "if (args[0] == null && args[1] == null) {\n                    throw unexpectedToken();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 603,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 326,
    "lines": "public String getString(int i1, int i2, String s3) {\n        return vrb.getString(this, i1, i2, s3);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 161,
    "lines": "public String getString(int i1, int i2, String s3) {\n        return vrb.getString(this, i1, i2, s3);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java, /hsqldb/src/org/hsqldb/lib/tar/RB.java",
  "id": 604,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 363,
    "lines": "unresolvedSet = nodes[i].resolveColumnReferences(session,\n                    rangeGroup, rangeCount, rangeGroups, unresolvedSet,\n                    acceptsSequences);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1066,
    "lines": "unresolvedSet = nodes[i].resolveColumnReferences(session,\n                    rangeGroup, rangeCount, rangeGroups, unresolvedSet,\n                    acceptsSequences);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 245,
    "lines": "unresolvedSet = nodes[i].resolveColumnReferences(session,\n                    rangeGroup, rangeCount, rangeGroups, unresolvedSet,\n                    acceptsSequences);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1052,
    "lines": "unresolvedSet = nodes[i].resolveColumnReferences(session,\n                            rangeGroup, rangeCount, rangeGroups,\n                            unresolvedSet, acceptsSequences);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLike.java",
    "startLineNumber": 84,
    "lines": "unresolvedSet = nodes[i].resolveColumnReferences(session,\n                        rangeGroup, rangeCount, rangeGroups, unresolvedSet,\n                        acceptsSequences);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 70,
    "lines": "unresolvedSet = nodes[i].resolveColumnReferences(session,\n                    rangeGroup, rangeCount, rangeGroups, unresolvedSet, acceptsSequences);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionOp.java, /hsqldb/src/org/hsqldb/Expression.java & more ...",
  "id": 605,
  "numClones": 6,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 750,
    "lines": "sb.append('\\n').append(columnMap[i]).append(':').append(\n                ' ')"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 775,
    "lines": "sb.append('\\n').append(columnMap[i]).append(':').append(\n                    ' ')"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDMQL.java, /hsqldb/src/org/hsqldb/StatementDMQL.java",
  "id": 606,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/OtherType.java",
    "startLineNumber": 58,
    "lines": "{\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 201,
    "lines": "{\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobType.java",
    "startLineNumber": 59,
    "lines": "{\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 89,
    "lines": "{\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 90,
    "lines": "{\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobType.java",
    "startLineNumber": 58,
    "lines": "{\n        return precision > Integer.MAX_VALUE ? Integer.MAX_VALUE\n                                             : (int) precision;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/OtherType.java, /hsqldb/src/org/hsqldb/types/Type.java & more ...",
  "id": 607,
  "numClones": 6,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchemaDefinition.java",
    "startLineNumber": 161,
    "lines": "if (session.parser.token.tokenType\n                                != Tokens.X_ENDPARSE) {\n                            throw session.parser.unexpectedToken();\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchemaDefinition.java",
    "startLineNumber": 121,
    "lines": "if (session.parser.token.tokenType\n                                != Tokens.X_ENDPARSE) {\n                            throw session.parser.unexpectedToken();\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchemaDefinition.java, /hsqldb/src/org/hsqldb/StatementSchemaDefinition.java",
  "id": 608,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/OdbcPacketInputStream.java",
    "startLineNumber": 214,
    "lines": "DataInputStream dis = new DataInputStream(new ByteArrayInputStream(ba));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/OdbcPacketInputStream.java",
    "startLineNumber": 163,
    "lines": "DataInputStream dis = new DataInputStream(new ByteArrayInputStream(ba));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/OdbcPacketInputStream.java, /hsqldb/src/org/hsqldb/server/OdbcPacketInputStream.java",
  "id": 609,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAStorageWrapper.java",
    "startLineNumber": 84,
    "lines": "public void write(byte[] b, int off, int len) throws IOException {\n        file.write(b, off, len);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileSimple.java",
    "startLineNumber": 93,
    "lines": "public void write(byte[] b, int off, int len) throws IOException {\n        file.write(b, off, len);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RAStorageWrapper.java, /hsqldb/src/org/hsqldb/persist/RAFileSimple.java",
  "id": 610,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1290,
    "lines": "if (!nodes[0].dataType.isCharacterType()\n                        && !nodes[0].dataType.isBinaryType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1314,
    "lines": "if (!nodes[0].dataType.isCharacterType()\n                        && !nodes[0].dataType.isBinaryType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 611,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 211,
    "lines": "{\n            ps.setInt(1, i);\n            ps.setInt(4, i);\n            ps.executeUpdate();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 187,
    "lines": "{\n            ps.setInt(1, i);\n            ps.setInt(4, i);\n            ps.executeUpdate();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 179,
    "lines": "{\n            ps.setInt(1, i);\n            ps.setInt(4, i);\n            ps.executeUpdate();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 523,
    "lines": "{\n            ps.setInt(1, i);\n            ps.setInt(4, i);\n            ps.executeUpdate();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 203,
    "lines": "{\n            ps.setInt(1, i);\n            ps.setInt(4, i);\n            ps.executeUpdate();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 195,
    "lines": "{\n            ps.setInt(1, i);\n            ps.setInt(4, i);\n            ps.executeUpdate();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 515,
    "lines": "{\n            ps.setInt(1, i);\n            ps.setInt(4, i);\n            ps.executeUpdate();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java, /hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java & more ...",
  "id": 612,
  "numClones": 7,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 757,
    "lines": "if (data == null || otherData == null) {\n            return -1L;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 583,
    "lines": "if (data == null || otherData == null) {\n            return -1L;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 425,
    "lines": "if (data == null || otherData == null) {\n            return -1L;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java & more ...",
  "id": 613,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongValueHashMap.java",
    "startLineNumber": 210,
    "lines": "{\n\n        Iterator it = t.keySet().iterator();\n\n        while (it.hasNext()) {\n            Object key = it.next();\n\n            put(key, t.get(key));\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMap.java",
    "startLineNumber": 85,
    "lines": "{\n\n        Iterator it = t.keySet().iterator();\n\n        while (it.hasNext()) {\n            Object key = it.next();\n\n            put(key, t.get(key));\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntValueHashMap.java",
    "startLineNumber": 259,
    "lines": "{\n\n        Iterator it = t.keySet().iterator();\n\n        while (it.hasNext()) {\n            Object key = it.next();\n\n            put(key, t.get(key));\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongValueHashMap.java, /hsqldb/src/org/hsqldb/lib/HashMap.java & more ...",
  "id": 614,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCPooledDataSource.java",
    "startLineNumber": 103,
    "lines": "Reference ref   = new Reference(getClass().getName(), cname, null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPool.java",
    "startLineNumber": 211,
    "lines": "Reference ref   = new Reference(getClass().getName(), cname, null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDataSource.java",
    "startLineNumber": 261,
    "lines": "Reference ref   = new Reference(getClass().getName(), cname, null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCXADataSource.java",
    "startLineNumber": 142,
    "lines": "Reference ref   = new Reference(getClass().getName(), cname, null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCPooledDataSource.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPool.java & more ...",
  "id": 615,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 371,
    "lines": "{\n                    returnValue              = objectValueTable[lookup];\n                    objectValueTable[lookup] = null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 794,
    "lines": "{\n                    returnValue              = objectValueTable[lookup];\n                    objectValueTable[lookup] = null;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 616,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 754,
    "lines": "if (translateTTI) {\n                    if (type.isIntervalType()) {\n                        type = ((IntervalType) type).getCharacterType();\n                    } else if (type.isDateTimeTypeWithZone()) {\n                        type = ((DateTimeType) type)\n                            .getDateTimeTypeWithoutZone();\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2573,
    "lines": "if (translateTTI) {\n                if (type.isIntervalType()) {\n                    type = ((IntervalType) type).getCharacterType();\n                } else if (type.isDateTimeTypeWithZone()) {\n                    type = ((DateTimeType) type).getDateTimeTypeWithoutZone();\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 949,
    "lines": "if (translateTTI) {\n                    if (type.isIntervalType()) {\n                        type = ((IntervalType) type).getCharacterType();\n                    } else if (type.isDateTimeTypeWithZone()) {\n                        type = ((DateTimeType) type)\n                            .getDateTimeTypeWithoutZone();\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 1708,
    "lines": "if (translateTTI) {\n                        if (type.isIntervalType()) {\n                            type = ((IntervalType) type).getCharacterType();\n                        } else if (type.isDateTimeTypeWithZone()) {\n                            type = ((DateTimeType) type)\n                                .getDateTimeTypeWithoutZone();\n                        }\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2728,
    "lines": "if (translateTTI) {\n                if (type.isIntervalType()) {\n                    type = ((IntervalType) type).getCharacterType();\n                } else if (type.isDateTimeTypeWithZone()) {\n                    type = ((DateTimeType) type).getDateTimeTypeWithoutZone();\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java & more ...",
  "id": 617,
  "numClones": 5,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3480,
    "lines": "((Number) nodes[1].valueData).intValue() == Tokens.DESC"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3494,
    "lines": "((Number) nodes[1].valueData).intValue() == Tokens.DESC"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 618,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 467,
    "lines": "if (i + 1 < count) {\n                sb.append(',');\n                sb.append(' ');\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlArrayHeap.java",
    "startLineNumber": 293,
    "lines": "if (i + 1 < count) {\n                sb.append(',');\n                sb.append(' ');\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java, /hsqldb/src/org/hsqldb/lib/HsqlArrayHeap.java",
  "id": 619,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1599,
    "lines": "if (set.map.size() != 0) {\n                    values = new Object[set.map.size()];\n\n                    set.map.valuesToArray(values);\n\n                    objects = new WrapperIterator(objects,\n                                                  new WrapperIterator(values));\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1611,
    "lines": "if (set.map.size() != 0) {\n                        values = new Object[set.map.size()];\n\n                        set.map.valuesToArray(values);\n\n                        objects =\n                            new WrapperIterator(objects,\n                                                new WrapperIterator(values));\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 620,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 957,
    "lines": "if (table.getColumnIndex(name.name) != -1) {\n                        throw Error.error(ErrorCode.X_42578,\n                                          token.tokenString);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 991,
    "lines": "if (table.getColumnIndex(name.name) != -1) {\n                        throw Error.error(ErrorCode.X_42578,\n                                          token.tokenString);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 621,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaObjectSet.java",
    "startLineNumber": 450,
    "lines": "ColumnSchema column =\n                                ((Table) object).getColumn(index);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2128,
    "lines": "ColumnSchema column =\n                                    ((Table) object).getColumn(index);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaObjectSet.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 622,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultMetaData.java",
    "startLineNumber": 153,
    "lines": "md.columnLabels        = new String[colCount];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultMetaData.java",
    "startLineNumber": 138,
    "lines": "md.columnLabels        = new String[colCount];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/ResultMetaData.java, /hsqldb/src/org/hsqldb/result/ResultMetaData.java",
  "id": 623,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 726,
    "lines": "if (enforcedDefaultIndex == columnMap[i]) {\n                    if (e.getType() != OpTypes.DEFAULT) {\n                        throw Error.error(ErrorCode.X_42541);\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 683,
    "lines": "if (enforcedDefaultIndex == columnMap[i]) {\n                        if (e.getType() != OpTypes.DEFAULT) {\n                            throw Error.error(ErrorCode.X_42541);\n                        }\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDML.java",
  "id": 624,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 238,
    "lines": "database.logger.writeInsertStatement(session, row,\n                                                     (Table) table);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java",
    "startLineNumber": 145,
    "lines": "database.logger.writeInsertStatement(session, row,\n                                                     (Table) table);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java",
  "id": 625,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableBase.java",
    "startLineNumber": 479,
    "lines": "for (i = 0; i < indexList.length; i++) {\n            indexList[i].setPosition(i);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableBase.java",
    "startLineNumber": 490,
    "lines": "for (i = 0; i < indexList.length; i++) {\n                    indexList[i].setPosition(i);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableBase.java, /hsqldb/src/org/hsqldb/TableBase.java",
  "id": 626,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 618,
    "lines": "{\n\n                public void close() throws IOException {\n\n                    try {\n                        super.close();\n                    } finally {\n                        m_streams.remove(this);\n                    }\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 437,
    "lines": "{\n\n                public void close() throws IOException {\n\n                    try {\n                        super.close();\n                    } finally {\n                        m_streams.remove(this);\n                    }\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 221,
    "lines": "{\n\n                public void close() throws IOException {\n\n                    try {\n                        super.close();\n                    } finally {\n                        m_streams.remove(this);\n                    }\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 733,
    "lines": "{\n\n                public void close() throws IOException {\n\n                    try {\n                        super.close();\n                    } finally {\n                        m_streams.remove(this);\n                    }\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 503,
    "lines": "{\n\n                public void close() throws IOException {\n\n                    try {\n                        super.close();\n                    } finally {\n                        m_streams.remove(this);\n                    }\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 563,
    "lines": "{\n\n                public void close() throws IOException {\n\n                    try {\n                        super.close();\n                    } finally {\n                        m_streams.remove(this);\n                    }\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java & more ...",
  "id": 627,
  "numClones": 6,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 693,
    "lines": "return (ai > bi) ? 1\n                                     : (bi > ai ? -1\n                                                : 0);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 700,
    "lines": "return (ai > bi) ? 1\n                                     : (bi > ai ? -1\n                                                : 0);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/NumberType.java, /hsqldb/src/org/hsqldb/types/NumberType.java",
  "id": 628,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataChangeMemory.java",
    "startLineNumber": 122,
    "lines": "public void read(RowInputInterface in,\n                     ResultMetaData meta) throws IOException {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 292,
    "lines": "public void read(RowInputInterface in,\n                     ResultMetaData meta) throws IOException {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 308,
    "lines": "public void read(RowInputInterface in,\n                     ResultMetaData meta) throws IOException {}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataChangeMemory.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java & more ...",
  "id": 629,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1528,
    "lines": "arrb[i] == arra[j] || arrb[i].equals(arra[j])"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1505,
    "lines": "arrb[i] == arra[j] || arrb[i].equals(arra[j])"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
  "id": 630,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 341,
    "lines": "action.session == session && action.commitTimestamp == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 615,
    "lines": "action.session == session && action.commitTimestamp == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 327,
    "lines": "action.session == session && action.commitTimestamp == 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAction.java, /hsqldb/src/org/hsqldb/RowAction.java & more ...",
  "id": 631,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 809,
    "lines": "millis = HsqlDateTime.convertMillisFromCalendar(\n                            session.getCalendar(),\n                            ((java.util.Date) a).getTime());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 760,
    "lines": "millis = HsqlDateTime.convertMillisFromCalendar(\n                            session.getCalendar(),\n                            ((java.util.Date) a).getTime());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 788,
    "lines": "millis = HsqlDateTime.convertMillisFromCalendar(\n                        session.getCalendar(), ((java.util.Date) a).getTime());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java & more ...",
  "id": 632,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 818,
    "lines": "while (count-- > 0) {\n                int account = TestBench.getRandomID(ACCOUNT);\n                int branch  = TestBench.getRandomID(BRANCH);\n                int teller  = TestBench.getRandomID(TELLER);\n                int delta   = TestBench.getRandomInt(-1000, 1000);\n\n                doOne(branch, teller, account, delta);\n                incrementTransactionCount();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 977,
    "lines": "while (count-- > 0) {\n                int account = TestBench.getRandomID(ACCOUNT);\n                int branch  = TestBench.getRandomID(BRANCH);\n                int teller  = TestBench.getRandomID(TELLER);\n                int delta   = TestBench.getRandomInt(-1000, 1000);\n\n                doOne(branch, teller, account, delta);\n                incrementTransactionCount();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/TestBench.java",
  "id": 633,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 816,
    "lines": "if (aLimit > lobBlockSize / 2) {\n                    aLimit = lobBlockSize / 2;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 986,
    "lines": "if (aLimit > lobBlockSize / 2) {\n                aLimit = lobBlockSize / 2;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 634,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1300,
    "lines": "{\n                    intarr[j] = colarr[i] + adjust;\n\n                    j++;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1292,
    "lines": "{\n                intarr[j] = colarr[i] + adjust;\n\n                j++;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
  "id": 635,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1023,
    "lines": "if (readIfThis(Tokens.NO)) {\n                    readThis(Tokens.PAD);\n\n                    padSpace = Boolean.FALSE;\n                } else if (readIfThis(Tokens.PAD)) {\n                    readThis(Tokens.SPACE);\n\n                    padSpace = Boolean.TRUE;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1886,
    "lines": "if (readIfThis(Tokens.NO)) {\n            readThis(Tokens.PAD);\n\n            padSpace = Boolean.FALSE;\n        } else if (readIfThis(Tokens.PAD)) {\n            readThis(Tokens.SPACE);\n\n            padSpace = Boolean.TRUE;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 636,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 561,
    "lines": "boolean readonly =\n                            ((Boolean) parameters[0]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 591,
    "lines": "boolean readonly =\n                            ((Boolean) parameters[0]).booleanValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSession.java, /hsqldb/src/org/hsqldb/StatementSession.java",
  "id": 637,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 378,
    "lines": "if (rcFile != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_params_redundant.getString());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 371,
    "lines": "if (rcFile != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_params_redundant.getString());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java, /hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
  "id": 638,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferResultSet.java",
    "startLineNumber": 87,
    "lines": "{\n            iRowIdx      = 0;\n            iMaxRowIdx   = 0;\n            iColumnCount = 0;\n            vRows        = new Vector();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferResultSet.java",
    "startLineNumber": 95,
    "lines": "{\n\n        iRowIdx      = 0;\n        iMaxRowIdx   = 0;\n        iColumnCount = 0;\n        vRows        = new Vector();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferResultSet.java, /hsqldb/src/org/hsqldb/util/TransferResultSet.java",
  "id": 639,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 163,
    "lines": "public CachedObject get(long key) {\n\n        CachedObject object = cache.get(key, this, false);\n\n        return object;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 109,
    "lines": "public CachedObject get(long key) {\n\n        CachedObject object = cache.get(key, this, false);\n\n        return object;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
  "id": 640,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2663,
    "lines": "{\n            read();\n\n            isIdentity   = true;\n            isPKIdentity = true;\n            sequence     = new NumberSequence(null, 0, 1, typeObject);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2626,
    "lines": "{\n                    read();\n\n                    isIdentity   = true;\n                    isPKIdentity = true;\n                    sequence     = new NumberSequence(null, 0, 1, typeObject);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 641,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Collation.java",
    "startLineNumber": 562,
    "lines": "if (!padSpace) {\n            sb.append(Tokens.T_NO).append(' ').append(Tokens.T_PAD);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Collation.java",
    "startLineNumber": 531,
    "lines": "if (!padSpace) {\n            sb.append(Tokens.T_NO).append(' ').append(Tokens.T_PAD);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/Collation.java, /hsqldb/src/org/hsqldb/types/Collation.java",
  "id": 642,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1374,
    "lines": "return result != 0 ? Boolean.TRUE\n                                   : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1468,
    "lines": "return result != 0 ? Boolean.TRUE\n                                   : Boolean.FALSE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 643,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 143,
    "lines": "{\n            if (is != null) {\n                try {\n                    is.close();\n                } catch (Exception ex) {}\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 211,
    "lines": "{\n            if (is != null) {\n                try {\n                    is.close();\n                } catch (Exception ex) {}\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
  "id": 644,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2029,
    "lines": "long[][] aParts = getParts(aID, 0, Long.MAX_VALUE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2064,
    "lines": "long[][] aParts = getParts(aID, 0, Long.MAX_VALUE);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 645,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2260,
    "lines": "if (token.tokenType == Tokens.X_DELIMITED_IDENTIFIER\n                        || token.tokenType == Tokens.X_IDENTIFIER) {}\n                else {\n                    throw unexpectedToken(Tokens.T_COLON);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2323,
    "lines": "if (token.tokenType == Tokens.X_DELIMITED_IDENTIFIER\n                        || token.tokenType == Tokens.X_IDENTIFIER) {}\n                else {\n                    throw unexpectedToken(Tokens.T_COLON);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 646,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5306,
    "lines": "if (!readIfThis(Tokens.OPENBRACKET)) {\n            rewind(position);\n\n            return null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5476,
    "lines": "if (!readIfThis(Tokens.OPENBRACKET)) {\n            rewind(position);\n\n            return null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5576,
    "lines": "if (!readIfThis(Tokens.OPENBRACKET)) {\n            rewind(position);\n\n            return null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5044,
    "lines": "if (!readIfThis(Tokens.OPENBRACKET)) {\n            rewind(position);\n\n            return null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5404,
    "lines": "if (!readIfThis(Tokens.OPENBRACKET)) {\n            rewind(position);\n\n            return null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5545,
    "lines": "if (!readIfThis(Tokens.OPENBRACKET)) {\n            rewind(position);\n\n            return null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5081,
    "lines": "if (!readIfThis(Tokens.OPENBRACKET)) {\n                rewind(position);\n\n                return null;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5447,
    "lines": "if (!readIfThis(Tokens.OPENBRACKET)) {\n            rewind(position);\n\n            return null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5371,
    "lines": "if (!readIfThis(Tokens.OPENBRACKET)) {\n            rewind(position);\n\n            return null;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java & more ...",
  "id": 647,
  "numClones": 9,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 554,
    "lines": "if (session.database.sqlEnforceTypes) {\n                throw Error.error(ErrorCode.X_42562);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 540,
    "lines": "if (session.database.sqlEnforceTypes) {\n                throw Error.error(ErrorCode.X_42562);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 913,
    "lines": "if (session.database.sqlEnforceTypes) {\n                        throw Error.error(ErrorCode.X_42562);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 934,
    "lines": "if (session.database.sqlEnforceTypes) {\n                        throw Error.error(ErrorCode.X_42562);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLike.java",
    "startLineNumber": 160,
    "lines": "if (session.database.sqlEnforceTypes) {\n                throw Error.error(ErrorCode.X_42562);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 924,
    "lines": "if (session.database.sqlEnforceTypes) {\n                        throw Error.error(ErrorCode.X_42562);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 944,
    "lines": "if (session.database.sqlEnforceTypes) {\n                        throw Error.error(ErrorCode.X_42562);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionArithmetic.java & more ...",
  "id": 648,
  "numClones": 7,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 655,
    "lines": "while (f != null) {\n                checkNodes(store, f);\n\n                f = next(store, f);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
    "startLineNumber": 141,
    "lines": "while (f != null) {\n                checkNodes(store, f);\n\n                f = next(store, f);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
  "id": 649,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 368,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 812,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 233,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 949,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 541,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 905,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 346,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 422,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 610,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 854,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 766,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 463,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 383,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 575,
    "lines": "reportProgress && (i + 1) % 10000 == 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java & more ...",
  "id": 650,
  "numClones": 14,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 338,
    "lines": "for (; position < limit; position++) {\n                if (indexList[position] != keys[position]) {\n                    break;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 355,
    "lines": "for (; position < limit; position++) {\n            if (indexList[position] != keys[position]) {\n                break;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
  "id": 651,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 539,
    "lines": "public void setArguments(Expression[] newNodes) {\n        this.nodes = newNodes;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQLInvoked.java",
    "startLineNumber": 64,
    "lines": "public void setArguments(Expression[] newNodes) {\n        this.nodes = newNodes;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQLInvoked.java",
  "id": 652,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 354,
    "lines": "if (indexList.length == 0 || accessorList[0] == null) {\n            indexList    = keys;\n            accessorList = new CachedObject[indexList.length];\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 312,
    "lines": "if (indexList.length == 0 || accessorList[0] == null) {\n            indexList    = keys;\n            accessorList = new CachedObject[indexList.length];\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 221,
    "lines": "if (indexList.length == 0 || accessorList[0] == null) {\n            indexList    = keys;\n            accessorList = new CachedObject[indexList.length];\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
    "startLineNumber": 356,
    "lines": "if (indexList.length == 0 || accessorList[0] == null) {\n            indexList    = keys;\n            accessorList = new CachedObject[indexList.length];\n\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVL.java & more ...",
  "id": 653,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2923,
    "lines": "addColumn(t, \"GRANTOR\", SQL_IDENTIFIER);           // not null\n            addColumn(t, \"GRANTEE\", SQL_IDENTIFIER);           // not null\n            addColumn(t, \"TABLE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_NAME\", SQL_IDENTIFIER);        // not null\n            addColumn(t, \"COLUMN_NAME\", SQL_IDENTIFIER);       // not null\n            addColumn(t, \"PRIVILEGE_TYPE\", CHARACTER_DATA);    // not null\n            addColumn(t, \"IS_GRANTABLE\", YES_OR_NO);           // not null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4724,
    "lines": "addColumn(t, \"GRANTOR\", SQL_IDENTIFIER);          // not null\n            addColumn(t, \"GRANTEE\", SQL_IDENTIFIER);          // not null\n            addColumn(t, \"SPECIFIC_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SPECIFIC_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SPECIFIC_NAME\", SQL_IDENTIFIER);    // not null\n            addColumn(t, \"ROUTINE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"ROUTINE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"ROUTINE_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"PRIVILEGE_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"IS_GRANTABLE\", YES_OR_NO);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3350,
    "lines": "addColumn(t, \"GRANTOR\", SQL_IDENTIFIER);           // not null\n            addColumn(t, \"GRANTEE\", SQL_IDENTIFIER);           // not null\n            addColumn(t, \"TABLE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_NAME\", SQL_IDENTIFIER);        // not null\n            addColumn(t, \"PRIVILEGE_TYPE\", CHARACTER_DATA);    // not null\n            addColumn(t, \"IS_GRANTABLE\", YES_OR_NO);           // not null\n            addColumn(t, \"WITH_HIERARCHY\", YES_OR_NO);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4975,
    "lines": "addColumn(t, \"GRANTOR\", SQL_IDENTIFIER);        // not null\n            addColumn(t, \"GRANTEE\", SQL_IDENTIFIER);        // not null\n            addColumn(t, \"OBJECT_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"OBJECT_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"OBJECT_NAME\", SQL_IDENTIFIER);    // not null\n            addColumn(t, \"OBJECT_TYPE\", CHARACTER_DATA);    // not null\n            addColumn(t, \"PRIVILEGE_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"IS_GRANTABLE\", YES_OR_NO);        // not null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4819,
    "lines": "addColumn(t, \"GRANTOR\", SQL_IDENTIFIER);           // not null\n            addColumn(t, \"GRANTEE\", SQL_IDENTIFIER);           // not null\n            addColumn(t, \"TABLE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_NAME\", SQL_IDENTIFIER);        // not null\n            addColumn(t, \"PRIVILEGE_TYPE\", CHARACTER_DATA);    // not null\n            addColumn(t, \"IS_GRANTABLE\", YES_OR_NO);           // not null\n            addColumn(t, \"WITH_HIERARCHY\", YES_OR_NO);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4899,
    "lines": "addColumn(t, \"GRANTOR\", SQL_IDENTIFIER);     // not null\n            addColumn(t, \"GRANTEE\", SQL_IDENTIFIER);     // not null\n            addColumn(t, \"UDT_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_NAME\", SQL_IDENTIFIER);    // not null\n            addColumn(t, \"PRIVILEGE_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"IS_GRANTABLE\", YES_OR_NO);     // not null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5182,
    "lines": "addColumn(t, \"GRANTOR\", SQL_IDENTIFIER);           // not null\n            addColumn(t, \"GRANTEE\", SQL_IDENTIFIER);           // not null\n            addColumn(t, \"SPECIFIC_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SPECIFIC_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SPECIFIC_NAME\", SQL_IDENTIFIER);     // not null\n            addColumn(t, \"ROUTINE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"ROUTINE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"ROUTINE_NAME\", SQL_IDENTIFIER);      // not null\n            addColumn(t, \"PRIVILEGE_TYPE\", CHARACTER_DATA);    // not null\n            addColumn(t, \"IS_GRANTABLE\", YES_OR_NO);           // not null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7510,
    "lines": "addColumn(t, \"GRANTOR\", SQL_IDENTIFIER);\n            addColumn(t, \"GRANTEE\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"PRIVILEGE_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"IS_GRANTABLE\", YES_OR_NO);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4642,
    "lines": "addColumn(t, \"GRANTOR\", SQL_IDENTIFIER);           // not null\n            addColumn(t, \"GRANTEE\", SQL_IDENTIFIER);           // not null\n            addColumn(t, \"TABLE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"TABLE_NAME\", SQL_IDENTIFIER);        // not null\n            addColumn(t, \"COLUMN_NAME\", SQL_IDENTIFIER);       // not null\n            addColumn(t, \"PRIVILEGE_TYPE\", CHARACTER_DATA);    // not null\n            addColumn(t, \"IS_GRANTABLE\", YES_OR_NO);           // not null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7686,
    "lines": "addColumn(t, \"GRANTOR\", SQL_IDENTIFIER);        // not null\n            addColumn(t, \"GRANTEE\", SQL_IDENTIFIER);        // not null\n            addColumn(t, \"OBJECT_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"OBJECT_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"OBJECT_NAME\", SQL_IDENTIFIER);    // not null\n            addColumn(t, \"OBJECT_TYPE\", CHARACTER_DATA);    // not null\n            addColumn(t, \"PRIVILEGE_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"IS_GRANTABLE\", YES_OR_NO);        // not null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 654,
  "numClones": 10,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 711,
    "lines": "while (it.hasNext()) {\n            Session s = (Session) it.next();\n\n            if (s == session) {\n                it.remove();\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 701,
    "lines": "while (it.hasNext()) {\n            Session s = (Session) it.next();\n\n            if (s == session) {\n                it.remove();\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java, /hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
  "id": 655,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1155,
    "lines": "if (type.typeComparisonGroup != otherType.typeComparisonGroup) {\n                throw Error.error(ErrorCode.X_42562);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1166,
    "lines": "if (type.typeComparisonGroup != otherType.typeComparisonGroup) {\n            throw Error.error(ErrorCode.X_42562);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 656,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 156,
    "lines": "{\n                Object[] list = session.rowActionList.toArray();\n\n                addToCommittedQueue(session, list);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 209,
    "lines": "{\n                    Object[] list = session.rowActionList.toArray();\n\n                    addToCommittedQueue(session, list);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 657,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2037,
    "lines": "(IntervalSecondData) Type.SQL_INTERVAL_HOUR_TO_MINUTE\n                        .convertToDefaultType(session, data[1])"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2040,
    "lines": "(IntervalSecondData) Type.SQL_INTERVAL_HOUR_TO_MINUTE\n                        .convertToDefaultType(session, data[1])"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2008,
    "lines": "(IntervalSecondData) Type.SQL_INTERVAL_HOUR_TO_MINUTE\n                        .convertToDefaultType(session, data[1])"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 658,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestINPredicateParameterizationAndCorrelation.java",
    "startLineNumber": 137,
    "lines": "pstmt         = conn.prepareStatement(sql);\n\n        pstmt.setInt(1, 0);\n        pstmt.setInt(2, 9);\n\n        rs = pstmt.executeQuery();\n\n        rs.next();\n\n        actualCount = rs.getInt(1);\n\n        assertEquals(\"\\\"\" + sql + \"\\\"\", expectedCount, actualCount);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestINPredicateParameterizationAndCorrelation.java",
    "startLineNumber": 121,
    "lines": "pstmt         = conn.prepareStatement(sql);\n\n        pstmt.setInt(1, 0);\n        pstmt.setInt(2, 9);\n\n        rs = pstmt.executeQuery();\n\n        rs.next();\n\n        actualCount = rs.getInt(1);\n\n        assertEquals(\"\\\"\" + sql + \"\\\"\", expectedCount, actualCount);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestINPredicateParameterizationAndCorrelation.java, /hsqldb/src/org/hsqldb/test/TestINPredicateParameterizationAndCorrelation.java",
  "id": 659,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
    "startLineNumber": 213,
    "lines": "ps = c.prepareStatement(s, new String[]{ \"I\" });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
    "startLineNumber": 102,
    "lines": "ps = c.prepareStatement(s, new String[]{ \"I\" });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java, /hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
  "id": 660,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 155,
    "lines": "public String getString(int i1, String s2) {\n        return vrb.getString(this, i1, s2);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 320,
    "lines": "public String getString(int i1, String s2) {\n        return vrb.getString(this, i1, s2);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/RB.java, /hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
  "id": 661,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/OdbcPacketInputStream.java",
    "startLineNumber": 198,
    "lines": "ba[0] = (byte) (len >>> 8);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/OdbcPacketInputStream.java",
    "startLineNumber": 160,
    "lines": "ba[0] = (byte) (len >>> 8);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/OdbcPacketInputStream.java, /hsqldb/src/org/hsqldb/server/OdbcPacketInputStream.java",
  "id": 662,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 4475,
    "lines": "Type   sourceType = resultMetaData.columnTypes[columnIndex - 1];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7638,
    "lines": "Type   sourceType = resultMetaData.columnTypes[columnIndex - 1];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 1042,
    "lines": "Type   sourceType = resultMetaData.columnTypes[columnIndex - 1];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 458,
    "lines": "Type sourceType = resultMetaData.columnTypes[columnIndex - 1];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 1650,
    "lines": "Type sourceType = resultMetaData.columnTypes[columnIndex - 1];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 782,
    "lines": "Type sourceType = resultMetaData.columnTypes[columnIndex - 1];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7618,
    "lines": "Type   sourceType = resultMetaData.columnTypes[columnIndex - 1];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 4413,
    "lines": "Type   sourceType = resultMetaData.columnTypes[columnIndex - 1];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 1921,
    "lines": "Type   sourceType = resultMetaData.columnTypes[columnIndex - 1];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java & more ...",
  "id": 663,
  "numClones": 9,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 235,
    "lines": "if (ArrayUtil.haveCommonElement(\n                                constraint.getRefColumns(), updateColumnMap)) {\n                            set.add(baseTable.fkConstraints[i].getMain()\n                                .getName());\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 251,
    "lines": "if (ArrayUtil.haveCommonElement(\n                                    constraint.getRefColumns(),\n                                    updateColumnMap)) {\n                                set.add(baseTable.fkConstraints[i].getMain()\n                                    .getName());\n                            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 664,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 143,
    "lines": "public void delete() {\n\n        iLeft    = NO_POS;\n        iRight   = NO_POS;\n        iParent  = NO_POS;\n        nLeft    = null;\n        nRight   = null;\n        nParent  = null;\n        iBalance = 0;\n\n        row.setNodesChanged();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 99,
    "lines": "public void delete() {\n\n        iLeft    = NO_POS;\n        iRight   = NO_POS;\n        iParent  = NO_POS;\n        nLeft    = null;\n        nRight   = null;\n        nParent  = null;\n        iBalance = 0;\n\n        row.setNodesChanged();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
  "id": 665,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 936,
    "lines": "if (defDirectory != null) {\n                defScript = defDirectory + File.separator + defScript;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 492,
    "lines": "if (defDirectory != null) {\n                defScript = defDirectory + File.separator + defScript;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java",
  "id": 666,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 430,
    "lines": "for (int i = slen; i < precision; i++) {\n                    b[i] = ' ';\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 674,
    "lines": "for (int i = slen; i < precision; i++) {\n                    b[i] = ' ';\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 667,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 491,
    "lines": "if (cs.getCompileTimestamp()\n                    < database.schemaManager.getSchemaChangeTimestamp()) {\n                cs = session.statementManager.getStatement(session, cs);\n                session.sessionContext.currentStatement = cs;\n\n                if (cs == null) {\n                    return;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 725,
    "lines": "if (cs.getCompileTimestamp()\n                    < database.schemaManager.getSchemaChangeTimestamp()) {\n                cs = session.statementManager.getStatement(session, cs);\n                session.sessionContext.currentStatement = cs;\n\n                if (cs == null) {\n                    return;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 286,
    "lines": "if (cs.getCompileTimestamp()\n                    < database.schemaManager.getSchemaChangeTimestamp()) {\n                cs = session.statementManager.getStatement(session, cs);\n                session.sessionContext.currentStatement = cs;\n\n                if (cs == null) {\n                    return;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java & more ...",
  "id": 668,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3654,
    "lines": "Index index = table.createIndexStructure(indexname, cols, null, null,\n            true, true, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 655,
    "lines": "Index index = table.createIndexStructure(indexname, cols, null, null,\n            true, true, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 669,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 146,
    "lines": "if (Args[i].equals(\"-v\")) {\n                verbose = true;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 138,
    "lines": "if (Args[i].equals(\"-v\")) {\n                verbose = true;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 670,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 586,
    "lines": "{\n            int i = Integer.parseInt(s.substring(1));\n\n            txtCommand.setText(sRecent[i]);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1102,
    "lines": "{\n            int i = Integer.parseInt(s.substring(1));\n\n            txtCommand.setText(sRecent[i]);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 671,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 638,
    "lines": "public static int getRandomID(int type) {\n\n        int min = 0,\n            max = 0;\n\n        switch (type) {\n\n            case TELLER :\n                max = ntellers * tps - 1;\n                break;\n\n            case BRANCH :\n                max = nbranches * tps - 1;\n                break;\n\n            case ACCOUNT :\n                max = naccounts * tps - 1;\n                break;\n        }\n\n        return (getRandomInt(min, max));\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 730,
    "lines": "public static int getRandomID(int type) {\n\n        int min = 0,\n            max = 0;\n\n        switch (type) {\n\n            case TELLER :\n                max = ntellers * tps - 1;\n                break;\n\n            case BRANCH :\n                max = nbranches * tps - 1;\n                break;\n\n            case ACCOUNT :\n                max = naccounts * tps - 1;\n                break;\n        }\n\n        return (getRandomInt(min, max));\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 672,
  "numClones": 2,
  "cloneSize": 16
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 108,
    "lines": "/**\n     * Returns the current row object. Type of object is implementation defined.\n     */\n    public Object[] getCurrent() {\n\n        if (currentPos < 0 || currentPos >= size) {\n            return null;\n        }\n\n        if (currentPos == currentOffset + table.length) {\n            getBlock(currentOffset + table.length);\n        }\n\n        return table[currentPos - currentOffset];\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 247,
    "lines": "public Object[] getCurrent() {\n\n        if (currentPos < 0 || currentPos >= size) {\n            return null;\n        }\n\n        if (currentPos == currentOffset + table.length) {\n            getBlock(currentOffset + table.length);\n        }\n\n        return table[currentPos - currentOffset];\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
  "id": 673,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DTIType.java",
    "startLineNumber": 212,
    "lines": "if (i < endPartIndex) {\n                sb.append((char) DTIType.yearToSecondSeparators[i]);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1059,
    "lines": "if (i < endPartIndex) {\n                sb.append((char) DTIType.yearToSecondSeparators[i]);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DTIType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java",
  "id": 674,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2977,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    if (nodes[i].dataType == null) {\n                        nodes[i].dataType = Type.SQL_VARCHAR;\n                    } else if (!nodes[i].dataType.isCharacterType()) {\n                        throw Error.error(ErrorCode.X_42561);\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3083,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    if (nodes[i].dataType == null) {\n                        nodes[i].dataType = Type.SQL_VARCHAR;\n                    } else if (!nodes[i].dataType.isCharacterType()) {\n                        throw Error.error(ErrorCode.X_42561);\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 675,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1320,
    "lines": "if (blockAddresses[i][LOBS.BLOCK_COUNT]\n                    + blockAddresses[i][LOBS.BLOCK_OFFSET] > blockLimit) {\n                blockCount -= (blockAddresses[i][LOBS.BLOCK_COUNT]\n                               + blockAddresses[i][LOBS.BLOCK_OFFSET]\n                               - blockLimit);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1286,
    "lines": "if (blockAddresses[i][LOBS.BLOCK_COUNT]\n                + blockAddresses[i][LOBS.BLOCK_OFFSET] > blockLimit) {\n            blockCount -= (blockAddresses[i][LOBS.BLOCK_COUNT]\n                           + blockAddresses[i][LOBS.BLOCK_OFFSET]\n                           - blockLimit);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 676,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSchemaParse.java",
    "startLineNumber": 126,
    "lines": "queryRowCount(\"SELECT vc FROM \" + prefix\n                                   + \"tsttbl WHERE i = (\\n\"\n                                   + \"    SELECT i2 FROM \" + prefix\n                                   + \"joinedtbl\\n\" + \")\")"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSchemaParse.java",
    "startLineNumber": 880,
    "lines": "queryRowCount(\"SELECT vc FROM \" + prefix\n                                      + \"tsttbl WHERE i = (\\n\"\n                                      + \"    SELECT i2 FROM \" + prefix\n                                      + \"joinedtbl\\n\" + \")\")"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSchemaParse.java, /hsqldb/src/org/hsqldb/test/TestSchemaParse.java",
  "id": 677,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 691,
    "lines": "if (value == null || Boolean.FALSE.equals(value)) {\n                        setAsConstantValue(Boolean.FALSE, parent);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 684,
    "lines": "if (value == null || Boolean.FALSE.equals(value)) {\n                            setAsConstantValue(Boolean.FALSE, parent);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 678,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1383,
    "lines": "if (nodes[0] == null) {\n                    ts = session.getCurrentTimestamp(true);\n                } else {\n                    if (data[0] == null) {\n                        return null;\n                    }\n\n                    ts = (TimestampData) data[0];\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1366,
    "lines": "if (nodes[0] == null) {\n                    ts = session.getCurrentTimestamp(true);\n                } else {\n                    if (data[0] == null) {\n                        return null;\n                    }\n\n                    ts = (TimestampData) data[0];\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 679,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 268,
    "lines": "while (srs.previous()) {\n                String name = srs.getString(2);\n                float  id   = srs.getFloat(1);\n\n                System.out.println(name + \"   \" + id);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 277,
    "lines": "while (srs.previous()) {\n                String name = srs.getString(2);\n                float  id   = srs.getFloat(1);\n\n                System.out.println(name + \"   \" + id);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 246,
    "lines": "while (srs.previous()) {\n                String name = srs.getString(2);\n                float  id   = srs.getFloat(1);\n\n                System.out.println(name + \"   \" + id);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 259,
    "lines": "while (srs.previous()) {\n                String name = srs.getString(2);\n                float  id   = srs.getFloat(1);\n\n                System.out.println(name + \"   \" + id);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java, /hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java & more ...",
  "id": 680,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4321,
    "lines": "if (history == null)\n            throw new BadSpecial(SqltoolRB.history_unavailable.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4292,
    "lines": "if (history == null)\n            throw new BadSpecial(SqltoolRB.history_unavailable.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4264,
    "lines": "if (history == null)\n            throw new BadSpecial(SqltoolRB.history_unavailable.getString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 681,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 96,
    "lines": "org.hsqldb.lib.IntKeyHashMap hIntMap =\n            new org.hsqldb.lib.IntKeyHashMap();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 190,
    "lines": "org.hsqldb.lib.IntKeyHashMap hIntMap =\n            new org.hsqldb.lib.IntKeyHashMap();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 169,
    "lines": "org.hsqldb.lib.IntKeyHashMap hIntMap =\n            new org.hsqldb.lib.IntKeyHashMap();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 57,
    "lines": "org.hsqldb.lib.IntKeyHashMap hIntMap =\n            new org.hsqldb.lib.IntKeyHashMap();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java, /hsqldb/src/org/hsqldb/test/TestHashStructures.java & more ...",
  "id": 682,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4841,
    "lines": "/** @todo - implement */\n            if (token.tokenType == Tokens.GRANTED) {\n                read();\n                readThis(Tokens.BY);\n\n                if (token.tokenType == Tokens.CURRENT_USER) {\n                    read();\n\n                    //\n                } else {\n                    readThis(Tokens.CURRENT_ROLE);\n\n                    if (session.getRole() == null) {\n                        throw Error.error(ErrorCode.X_0P000);\n                    }\n\n                    grantor = session.getRole();\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4944,
    "lines": "if (token.tokenType == Tokens.GRANTED) {\n            read();\n            readThis(Tokens.BY);\n\n            if (token.tokenType == Tokens.CURRENT_USER) {\n                read();\n\n                //\n            } else {\n                readThis(Tokens.CURRENT_ROLE);\n\n                if (session.getRole() == null) {\n                    throw Error.error(ErrorCode.X_0P000);\n                }\n\n                grantor = session.getRole();\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 683,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 963,
    "lines": "opType == OpTypes.EQUAL || opType == OpTypes.NOT_EQUAL"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1035,
    "lines": "opType == OpTypes.EQUAL || opType == OpTypes.NOT_EQUAL"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 684,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 280,
    "lines": "Type[] otherTypes = ((RowType) otherType).getTypesArray();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 255,
    "lines": "Type[] otherTypes = ((RowType) otherType).getTypesArray();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 187,
    "lines": "Type[] otherTypes = ((RowType) otherType).getTypesArray();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/RowType.java, /hsqldb/src/org/hsqldb/types/RowType.java & more ...",
  "id": 685,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6057,
    "lines": "if (newVal.charAt(newVal.length() - 1) == ';')\n                    throw new BadSpecial(SqltoolRB.macrodef_semi.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6013,
    "lines": "if (newVal.charAt(newVal.length() - 1) == ';')\n                    throw new BadSpecial(SqltoolRB.macrodef_semi.getString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 686,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 130,
    "lines": "public CachedObject get(CachedObject object, RowInputInterface in) {\n        return object;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/SimpleStore.java",
    "startLineNumber": 167,
    "lines": "public CachedObject get(CachedObject object, RowInputInterface in) {\n        return object;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java, /hsqldb/src/org/hsqldb/persist/SimpleStore.java",
  "id": 687,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 521,
    "lines": "token.dataType.typeCode != Types.SQL_INTEGER\n                && token.dataType.typeCode != Types.SQL_BIGINT"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 351,
    "lines": "token.dataType.typeCode != Types.SQL_INTEGER\n                                && token.dataType.typeCode\n                                   != Types.SQL_BIGINT"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserBase.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 688,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 115,
    "lines": "NodeAVL node  = ((RowAVL) row).getNode(0);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 188,
    "lines": "NodeAVL node  = ((RowAVL) row).getNode(0);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
  "id": 689,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 821,
    "lines": "Statement cs = new StatementSchema(sql,\n                                           StatementTypes.DROP_CONSTRAINT,\n                                           args, null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 853,
    "lines": "Statement cs = new StatementSchema(sql,\n                                           StatementTypes.DROP_CONSTRAINT,\n                                           args, null, writeLockNames);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 690,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3799,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 981,
    "lines": "HsqlName[] writeLockNames =\n                    database.schemaManager.getCatalogAndBaseTableNames(\n                        table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 964,
    "lines": "HsqlName[] writeLockNames =\n                    database.schemaManager.getCatalogAndBaseTableNames(\n                        table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 850,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 810,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3822,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4010,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3662,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3833,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4037,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4113,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3696,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4052,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3772,
    "lines": "HsqlName[] writeLockNames =\n            database.schemaManager.getCatalogAndBaseTableNames(\n                table.getName());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserCommand.java & more ...",
  "id": 691,
  "numClones": 14,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1268,
    "lines": "if (nodes[1].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3159,
    "lines": "if (nodes[1].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1213,
    "lines": "if (nodes[1].dataType == null) {\n                        throw Error.error(ErrorCode.X_42567);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 692,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 335,
    "lines": "if (endindex <= firstindex) {\n            System.arraycopy(list, 0, newList, list.length, endindex);\n\n            endindex = list.length + endindex;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 327,
    "lines": "if (endindex <= firstindex) {\n            System.arraycopy(list, 0, newList, list.length, endindex);\n\n            endindex = list.length + endindex;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java, /hsqldb/src/org/hsqldb/lib/LongDeque.java",
  "id": 693,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 785,
    "lines": "((Integer) row[HsqlProperties.indexType]).intValue()\n                  == SQL_PROPERTY"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 758,
    "lines": "((Integer) row[HsqlProperties.indexType]).intValue()\n                  == SQL_PROPERTY"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 767,
    "lines": "((Integer) row[HsqlProperties.indexType]).intValue()\n                  == SQL_PROPERTY"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 776,
    "lines": "((Integer) row[HsqlProperties.indexType]).intValue()\n                  == SQL_PROPERTY"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 744,
    "lines": "((Integer) row[HsqlProperties.indexType]).intValue()\n                    == SQL_PROPERTY"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java & more ...",
  "id": 694,
  "numClones": 5,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/DatabaseManager.java",
    "startLineNumber": 310,
    "lines": "if (type == DatabaseURL.S_RES) {\n            databaseMap = resDatabaseMap;\n        } else if (type == DatabaseURL.S_MEM) {\n            databaseMap = memDatabaseMap;\n        } else {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"DatabaseManager\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/DatabaseManager.java",
    "startLineNumber": 372,
    "lines": "if (type == DatabaseURL.S_RES) {\n            databaseMap = resDatabaseMap;\n        } else if (type == DatabaseURL.S_MEM) {\n            databaseMap = memDatabaseMap;\n        } else {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"DatabaseManager\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/DatabaseManager.java, /hsqldb/src/org/hsqldb/DatabaseManager.java",
  "id": 695,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBatchExecution.java",
    "startLineNumber": 125,
    "lines": "// get the connection and statement\n        driver =\n            (Driver) Class.forName(\"org.hsqldb.jdbc.JDBCDriver\").newInstance();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java",
    "startLineNumber": 63,
    "lines": "driver =\n            (Driver) Class.forName(\"org.hsqldb.jdbc.JDBCDriver\").newInstance();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBatchExecution.java, /hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java",
  "id": 696,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2963,
    "lines": "if (constName == null) {\n                    constName = database.nameManager.newAutoName(\"CT\",\n                            schemaObject.getSchemaName(),\n                            schemaObject.getName(), SchemaObject.CONSTRAINT);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2996,
    "lines": "if (constName == null) {\n                    constName = database.nameManager.newAutoName(\"CT\",\n                            schemaObject.getSchemaName(),\n                            schemaObject.getName(), SchemaObject.CONSTRAINT);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 697,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 4270,
    "lines": "if (o instanceof ClobDataID) {\n            return ((ClobDataID) o).getCharacterStream(session);\n        } else if (o instanceof Clob) {\n            return ((Clob) o).getCharacterStream();\n        } else if (o instanceof String) {\n            return new StringReader((String) o);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 1928,
    "lines": "if (o instanceof ClobDataID) {\n            return ((ClobDataID) o).getCharacterStream(session);\n        } else if (o instanceof Clob) {\n            return ((Clob) o).getCharacterStream();\n        } else if (o instanceof String) {\n            return new StringReader((String) o);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 698,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 569,
    "lines": "{\n                token.tokenType   = Tokens.X_MALFORMED_UNICODE_STRING;\n                token.isMalformed = true;\n\n                return;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 600,
    "lines": "{\n                    token.tokenType   = Tokens.X_MALFORMED_UNICODE_STRING;\n                    token.isMalformed = true;\n\n                    return;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 586,
    "lines": "{\n                token.tokenType   = Tokens.X_MALFORMED_UNICODE_STRING;\n                token.isMalformed = true;\n\n                return;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 618,
    "lines": "{\n                    token.tokenType   = Tokens.X_MALFORMED_UNICODE_STRING;\n                    token.isMalformed = true;\n\n                    return;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java & more ...",
  "id": 699,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 427,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    sb.append(nodes[i].describe(session, blanks + 1));\n                    sb.append(' ');\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 306,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    sb.append(nodes[i].describe(session, blanks + 1));\n                    sb.append(' ');\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 418,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    sb.append(nodes[i].describe(session, blanks + 1));\n                    sb.append(' ');\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/ExpressionOp.java & more ...",
  "id": 700,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 314,
    "lines": "Type[] otherTypes = ((RowType) other).getTypesArray();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 342,
    "lines": "Type[] otherTypes = ((RowType) other).getTypesArray();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/RowType.java, /hsqldb/src/org/hsqldb/types/RowType.java",
  "id": 701,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 167,
    "lines": "whereConditions = new RangeVariableConditions[]{\n            new RangeVariableConditions(this, false) };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 642,
    "lines": "whereConditions = new RangeVariableConditions[]{\n            new RangeVariableConditions(this, false) };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 140,
    "lines": "whereConditions = new RangeVariableConditions[]{\n            new RangeVariableConditions(this, false) };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 188,
    "lines": "whereConditions = new RangeVariableConditions[]{\n            new RangeVariableConditions(this, false) };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariable.java & more ...",
  "id": 702,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 300,
    "lines": "if (!rightQueryExpression.accessibleColumns[index]) {\n                        throw Error.error(ErrorCode.X_42578);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 341,
    "lines": "if (!rightQueryExpression.accessibleColumns[index]) {\n                    throw Error.error(ErrorCode.X_42578);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QueryExpression.java, /hsqldb/src/org/hsqldb/QueryExpression.java",
  "id": 703,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 2083,
    "lines": "{\n                    endOfPart = true;\n\n                    if (currentPart != lastPart) {\n                        i++;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 2238,
    "lines": "{\n                    endOfPart = true;\n\n                    if (currentPart != lastPart) {\n                        i++;\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 704,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAVLDiskData.java",
    "startLineNumber": 146,
    "lines": "public NodeAVL insertNode(int index) {\n\n        NodeAVL backnode = getNode(index - 1);\n        NodeAVL newnode  = new NodeAVL(this);\n\n        newnode.nNext  = backnode.nNext;\n        backnode.nNext = newnode;\n\n        return newnode;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAVL.java",
    "startLineNumber": 161,
    "lines": "public NodeAVL insertNode(int index) {\n\n        NodeAVL backnode = getNode(index - 1);\n        NodeAVL newnode  = new NodeAVL(this);\n\n        newnode.nNext  = backnode.nNext;\n        backnode.nNext = newnode;\n\n        return newnode;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAVLDiskData.java, /hsqldb/src/org/hsqldb/RowAVL.java",
  "id": 705,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7775,
    "lines": "try {\n                        t.insertSys(session, store, row);\n                    } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8123,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5591,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5275,
    "lines": "try {\n                        t.insertSys(session, store, row);\n                    } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5711,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6847,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8239,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8358,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2958,
    "lines": "try {\n                                t.insertSys(session, store, row);\n                            } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3718,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7066,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3686,
    "lines": "try {\n                t.insertSys(session, store, row);\n            } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5126,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3440,
    "lines": "try {\n                            t.insertSys(session, store, row);\n                        } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3020,
    "lines": "try {\n                                t.insertSys(session, store, row);\n                            } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6957,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3633,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3749,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7177,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7580,
    "lines": "try {\n                        t.insertSys(session, store, row);\n                    } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5484,
    "lines": "try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2988,
    "lines": "try {\n                                t.insertSys(session, store, row);\n                            } catch (HsqlException e) {}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 706,
  "numClones": 22,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1323,
    "lines": "{\n                if (nodes[0].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }\n\n                if (!nodes[0].dataType.isArrayType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }\n\n                dataType = Type.SQL_INTEGER;\n\n                break;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1336,
    "lines": "{\n                if (nodes[0].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }\n\n                if (!nodes[0].dataType.isArrayType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }\n\n                dataType = Type.SQL_INTEGER;\n\n                break;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 707,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobDataID.java",
    "startLineNumber": 227,
    "lines": "public void setBytes(SessionInterface session, long pos, BlobData b,\n                         long offset, long length) {\n\n        if (length > Integer.MAX_VALUE) {\n            throw new IndexOutOfBoundsException();\n        }\n\n        byte[] bytes = b.getBytes(session, offset, (int) length);\n\n        setBytes(session, pos, bytes, 0, bytes.length);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryData.java",
    "startLineNumber": 199,
    "lines": "public void setBytes(SessionInterface session, long pos, BlobData b,\n                         long offset, long length) {\n\n        if (length > Integer.MAX_VALUE) {\n            throw new IndexOutOfBoundsException();\n        }\n\n        byte[] bytes = b.getBytes(session, offset, (int) length);\n\n        setBytes(session, pos, bytes, 0, bytes.length);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobDataID.java, /hsqldb/src/org/hsqldb/types/BinaryData.java",
  "id": 708,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 204,
    "lines": "public void rollbackAction(Session session) {\n\n        rollbackPartial(session, session.actionIndex,\n                        session.actionStartTimestamp);\n        endActionTPL(session);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 154,
    "lines": "public void rollbackAction(Session session) {\n\n        rollbackPartial(session, session.actionIndex,\n                        session.actionStartTimestamp);\n        endActionTPL(session);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManager2PL.java",
  "id": 709,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4004,
    "lines": "if (i < 1 || i > parameterValues.length) {\n            String msg = \"parameter index out of range: \" + i;\n\n            throw JDBCUtil.outOfRangeArgument(msg);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4024,
    "lines": "if (i < 1 || i > parameterValues.length) {\n            String msg = \"parameter index out of range: \" + i;\n\n            throw JDBCUtil.outOfRangeArgument(msg);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 710,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 604,
    "lines": "{\n\n        if (object instanceof Table) {\n            Table table = (Table) object;\n\n            if (isFullyAccessibleByRole(table.getName())) {\n                return;\n            }\n\n            Right right = (Right) fullRightsMap.get(table.getName());\n\n            if (right != null && right.canReference(table, checkList)) {\n                return;\n            }\n        }\n\n        throw Error.error(ErrorCode.X_42501, object.getName().name);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 585,
    "lines": "{\n\n        if (object instanceof Table) {\n            Table table = (Table) object;\n\n            if (isFullyAccessibleByRole(table.getName())) {\n                return;\n            }\n\n            Right right = (Right) fullRightsMap.get(table.getName());\n\n            if (right != null && right.canReference(table, checkList)) {\n                return;\n            }\n        }\n\n        throw Error.error(ErrorCode.X_42501, object.getName().name);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/Grantee.java, /hsqldb/src/org/hsqldb/rights/Grantee.java",
  "id": 711,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 588,
    "lines": "long rate = ((long) i * 1000) / (time + 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 553,
    "lines": "long rate = ((long) i * 1000) / (time + 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 415,
    "lines": "long rate = ((long) i * 1000) / (time + 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 623,
    "lines": "long rate = ((long) i * 1000) / (time + 1);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java & more ...",
  "id": 712,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1354,
    "lines": "if (!nodes[0].dataType.isArrayType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3200,
    "lines": "if (!nodes[0].dataType.isArrayType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1328,
    "lines": "if (!nodes[0].dataType.isArrayType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1341,
    "lines": "if (!nodes[0].dataType.isArrayType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 713,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 540,
    "lines": "return o == null ? 0\n                         : ((Number) o).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 606,
    "lines": "return o == null ? 0\n                         : ((Number) o).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 714,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 179,
    "lines": "for (int i = 0; i < session.tempSet.size(); i++) {\n                Session current =\n                    ((RowActionBase) session.tempSet.get(i)).session;\n\n                current.abortTransaction = true;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 132,
    "lines": "for (int i = 0; i < session.tempSet.size(); i++) {\n                Session current =\n                    ((RowActionBase) session.tempSet.get(i)).session;\n\n                current.abortTransaction = true;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 715,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3974,
    "lines": "if (sequence == null) {\n                sequence = new NumberSequence(null, type);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3989,
    "lines": "if (sequence == null) {\n                        sequence = new NumberSequence(null, type);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 716,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBatchBug.java",
    "startLineNumber": 181,
    "lines": "for (int ii = 0; ii < DECIMAL_FIELDS_PER_DATASET; ii++) {\n            prep.setDouble(ii + 3, 0.123456789);    // Wert\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBatchBug.java",
    "startLineNumber": 173,
    "lines": "for (int ii = 0; ii < DECIMAL_FIELDS_PER_DATASET; ii++) {\n            prep.setDouble(ii + 3, 0.123456789);    // Wert\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBatchBug.java, /hsqldb/src/org/hsqldb/test/TestBatchBug.java",
  "id": 717,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Cache.java",
    "startLineNumber": 142,
    "lines": "if (accessCount > ACCESS_MAX && updateAccess) {\n            updateAccessCounts();\n            resetAccessCount();\n            updateObjectAccessCounts();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Cache.java",
    "startLineNumber": 103,
    "lines": "if (accessCount > ACCESS_MAX && updateAccess) {\n            updateAccessCounts();\n            resetAccessCount();\n            updateObjectAccessCounts();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Cache.java, /hsqldb/src/org/hsqldb/persist/Cache.java",
  "id": 718,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1076,
    "lines": "if (data == null) {\n                return Result.newErrorResult(Error.error(ErrorCode.X_0F502));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1550,
    "lines": "if (data == null) {\n                return Result.newErrorResult(Error.error(ErrorCode.X_0F502));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1619,
    "lines": "if (data == null) {\n                return Result.newErrorResult(Error.error(ErrorCode.X_0F502));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1695,
    "lines": "if (data == null) {\n                return Result.newErrorResult(Error.error(ErrorCode.X_0F502));\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 719,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 1301,
    "lines": "{\n                                try {\n                                    session.setAutoCommit(true);\n                                } catch (HsqlException he) {\n                                    throw new RecoverableOdbcFailure(\n                                        \"Failed to change transaction state: \"\n                                        + he.getMessage(), he.getSQLState());\n                                }\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 1972,
    "lines": "{\n            try {\n                session.setAutoCommit(true);\n            } catch (HsqlException he) {\n                throw new RecoverableOdbcFailure(\n                    \"Failed to change transaction state: \" + he.getMessage(),\n                    he.getSQLState());\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/ServerConnection.java, /hsqldb/src/org/hsqldb/server/ServerConnection.java",
  "id": 720,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 969,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                if (nodes[i].hasReference(range)) {\n                    return true;\n                }\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 1102,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                if (nodes[i].hasReference(range)) {\n                    return true;\n                }\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/ExpressionColumn.java",
  "id": 721,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2282,
    "lines": "newData =\n                                (Object[]) ArrayUtil.duplicateArray(newData);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2273,
    "lines": "newData =\n                                (Object[]) ArrayUtil.duplicateArray(newData);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 722,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java",
    "startLineNumber": 323,
    "lines": "if (mURL.getText().indexOf('\\u00AB') >= 0) {\n                    throw new Exception(\"please specify db path\");\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
    "startLineNumber": 308,
    "lines": "if (mURL.getText().indexOf('\\u00AB') >= 0) {\n                    throw new Exception(\"please specify db path\");\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java, /hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
  "id": 723,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobType.java",
    "startLineNumber": 99,
    "lines": "StringBuffer sb = new StringBuffer(16);\n\n        sb.append(getNameString());\n        sb.append('(');\n        sb.append(factor);\n\n        if (multiplier != null) {\n            sb.append(multiplier);\n        }\n\n        sb.append(')');\n\n        return sb.toString();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobType.java",
    "startLineNumber": 98,
    "lines": "StringBuffer sb = new StringBuffer(16);\n\n        sb.append(getNameString());\n        sb.append('(');\n        sb.append(factor);\n\n        if (multiplier != null) {\n            sb.append(multiplier);\n        }\n\n        sb.append(')');\n\n        return sb.toString();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobType.java, /hsqldb/src/org/hsqldb/types/ClobType.java",
  "id": 724,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1364,
    "lines": "params.length > 0 && params[0].equals(java.sql.Connection.class)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1069,
    "lines": "params.length > 0\n                    && params[0].equals(java.sql.Connection.class)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1261,
    "lines": "params.length > 0\n                    && params[0].equals(java.sql.Connection.class)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java & more ...",
  "id": 725,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
    "startLineNumber": 88,
    "lines": "ps = c.prepareStatement(s, new int[]{ 1 });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
    "startLineNumber": 196,
    "lines": "ps = c.prepareStatement(s, new int[]{ 1 });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java, /hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
  "id": 726,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 590,
    "lines": "int columnIndex =\n                                ((Integer) arguments[3]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 579,
    "lines": "int columnIndex =\n                                ((Integer) arguments[3]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 553,
    "lines": "int columnIndex =\n                                ((Integer) arguments[3]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 601,
    "lines": "int columnIndex =\n                                ((Integer) arguments[3]).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchema.java, /hsqldb/src/org/hsqldb/StatementSchema.java & more ...",
  "id": 727,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
    "startLineNumber": 150,
    "lines": "public Object get(Object key) {\n            throw new RuntimeException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java",
    "startLineNumber": 142,
    "lines": "public Object get(Object key) {\n            throw new RuntimeException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java",
    "startLineNumber": 127,
    "lines": "public Object get(Object key) {\n            throw new RuntimeException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 143,
    "lines": "public Object get(Object key) {\n            throw new RuntimeException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedLongKeyHashMap.java",
    "startLineNumber": 185,
    "lines": "public Object get(Object key) {\n            throw new RuntimeException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
    "startLineNumber": 154,
    "lines": "public Object get(Object key) {\n            throw new RuntimeException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMapConcurrent.java",
    "startLineNumber": 181,
    "lines": "public Object get(Object key) {\n            throw new RuntimeException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyHashMap.java",
    "startLineNumber": 215,
    "lines": "public Object get(Object key) {\n            throw new RuntimeException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/MultiValueHashMap.java",
    "startLineNumber": 140,
    "lines": "public Object get(Object key) {\n            throw new RuntimeException();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java, /hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java & more ...",
  "id": 728,
  "numClones": 9,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 541,
    "lines": "for (int i = (int) position; i < position + count; i++) {\n            Object[] rowData = new Object[2];\n\n            rowData[0] = Integer.valueOf(i + 1);\n            rowData[1] = data[i];\n\n            navigator.add(rowData);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 587,
    "lines": "for (int i = (int) position; i < position + count; i++) {\n            Object[] rowData = new Object[2];\n\n            rowData[0] = Integer.valueOf(i + 1);\n            rowData[1] = data[i];\n\n            navigator.add(rowData);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
  "id": 729,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1931,
    "lines": "if (e.getType() != OpTypes.VALUE\n                    && (e.getType() != OpTypes.SQL_FUNCTION\n                        || !((FunctionSQL) e).isValueFunction())) {\n                throw Error.error(ErrorCode.X_0P000);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 550,
    "lines": "if (e.getType() != OpTypes.VALUE\n                        && (e.getType() != OpTypes.SQL_FUNCTION\n                            || !((FunctionSQL) e).isValueFunction())) {\n                    throw Error.error(ErrorCode.X_0P000);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 577,
    "lines": "if (e.getType() != OpTypes.VALUE\n                        && (e.getType() != OpTypes.SQL_FUNCTION\n                            || !((FunctionSQL) e).isValueFunction())) {\n                    throw Error.error(ErrorCode.X_0P000);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java & more ...",
  "id": 730,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3034,
    "lines": "e = boole ? (Expression) new ExpressionLogical(type, a, e)\n                      : new ExpressionArithmetic(type, a, e);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3087,
    "lines": "e = boole ? (Expression) new ExpressionLogical(type, a, e)\n                      : new ExpressionArithmetic(type, a, e);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 731,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
    "startLineNumber": 251,
    "lines": "ps = c.prepareStatement(s, new String[]{ \"C\", \"I\" });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
    "startLineNumber": 134,
    "lines": "ps = c.prepareStatement(s, new String[]{ \"C\", \"I\" });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java, /hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
  "id": 732,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java",
    "startLineNumber": 446,
    "lines": "if (idx < 0) {\n                    e.isSingleColumnEqual     = true;\n                    e.isSingleColumnCondition = true;\n\n                    tempMap.put(e.getRightNode().getColumn(), e.getLeftNode());\n\n                    continue;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java",
    "startLineNumber": 430,
    "lines": "if (idx < 0) {\n                    e.isSingleColumnEqual     = true;\n                    e.isSingleColumnCondition = true;\n\n                    tempMap.put(e.getRightNode().getColumn(), e.getLeftNode());\n\n                    continue;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java, /hsqldb/src/org/hsqldb/RangeVariableResolver.java",
  "id": 733,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 521,
    "lines": "if (result.getErrorCode() == StatementTypes.ITERATE) {\n                    if (result.getMainString() == null) {\n                        continue;\n                    }\n\n                    if (label != null\n                            && label.name.equals(result.getMainString())) {\n                        continue;\n                    }\n\n                    break;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 589,
    "lines": "if (result.getErrorCode() == StatementTypes.ITERATE) {\n                    if (result.getMainString() == null) {\n                        continue;\n                    }\n\n                    if (label != null\n                            && label.name.equals(result.getMainString())) {\n                        continue;\n                    }\n\n                    break;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCompound.java, /hsqldb/src/org/hsqldb/StatementCompound.java",
  "id": 734,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
    "startLineNumber": 276,
    "lines": "/**\n     * Attempts to reduce this writer's buffer capacity to its current size. <p>\n     *\n     * If the buffer is larger than necessary to hold its current sequence of\n     * characters, then it may be resized to become more space efficient.\n     * Calling this method may, but is not required to, affect the value\n     * returned by a subsequent call to the {@link #capacity()} method.\n     */\n    public synchronized void trimToSize() throws IOException {\n\n        checkFreed();\n\n        if (buf.length > count) {\n            buf = copyOf(buf, count);\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
    "startLineNumber": 239,
    "lines": "/**\n     * Attempts to reduce this stream's capacity to its current size. <p>\n     *\n     * If the data buffer is larger than necessary to hold its current sequence\n     * of bytes, then it may be resized to become more space efficient.\n     * Calling this method may, but is not required to, affect the value\n     * returned by a subsequent call to the {@link #capacity()} method. <p>\n     *\n     * @throws java.io.IOException if an I/O error occurs.\n     *      In particular, an <tt>IOException</tt> may be thrown\n     *      if this output stream has been {@link #free() freed}.\n     */\n    public synchronized void trimToSize() throws IOException {\n\n        checkFreed();\n\n        if (buf.length > count) {\n            buf = copyOf(buf, count);\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java, /hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
  "id": 735,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 894,
    "lines": "{\n                nodes[LEFT].dataType = nodes[RIGHT].dataType;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 888,
    "lines": "{\n                nodes[LEFT].dataType = nodes[RIGHT].dataType;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 389,
    "lines": "{\n                nodes[LEFT].dataType = nodes[RIGHT].dataType;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java & more ...",
  "id": 736,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1212,
    "lines": "data[1] = Type.SQL_INTEGER.convertToType(session, data[1],\n                            nodes[1].getDataType());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1731,
    "lines": "data[1] = Type.SQL_INTEGER.convertToType(session, data[1],\n                        nodes[1].getDataType());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 737,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 87,
    "lines": "{\n                byte[] array = (byte[]) data;\n\n                while (--to >= from) {\n                    array[to] = 0;\n                }\n\n                return;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 96,
    "lines": "{\n                byte[] array = (byte[]) data;\n\n                while (--to >= from) {\n                    array[to] = 0;\n                }\n\n                return;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
  "id": 738,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 614,
    "lines": "int    shortLength = a.length > b.length ? b.length\n                                                 : a.length;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 599,
    "lines": "int    shortLength = a.length > b.length ? b.length\n                                                 : a.length;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 637,
    "lines": "int    shortLength = a.length > b.length ? b.length\n                                                 : a.length;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BitMap.java, /hsqldb/src/org/hsqldb/map/BitMap.java & more ...",
  "id": 739,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 1107,
    "lines": "catch (HsqlException e) {\n                    if (ifNotExists != null && ifNotExists.booleanValue()) {\n                        return Result.updateZeroResult;\n                    } else {\n                        return Result.newErrorResult(e, sql);\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 1147,
    "lines": "catch (HsqlException e) {\n                    if (ifNotExists != null && ifNotExists.booleanValue()) {\n                        return Result.updateZeroResult;\n                    } else {\n                        return Result.newErrorResult(e, sql);\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchema.java, /hsqldb/src/org/hsqldb/StatementSchema.java",
  "id": 740,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 546,
    "lines": "if (longKey == 0) {\n                                hasZeroKey   = false;\n                                zeroKeyIndex = -1;\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 575,
    "lines": "if (longKey == 0) {\n                                hasZeroKey   = false;\n                                zeroKeyIndex = -1;\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 687,
    "lines": "if (longKey == 0) {\n                    hasZeroKey   = false;\n                    zeroKeyIndex = -1;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 359,
    "lines": "if (longKey == 0) {\n                        hasZeroKey   = false;\n                        zeroKeyIndex = -1;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java & more ...",
  "id": 741,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 206,
    "lines": "if (table != baseTable) {\n                    int[] baseColumnMap = table.getBaseTableColumnMap();\n                    int[] newColumnMap  = new int[columnMap.length];\n\n                    ArrayUtil.projectRow(baseColumnMap, columnMap,\n                                         newColumnMap);\n\n                    columnMap = newColumnMap;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 283,
    "lines": "if (table != baseTable) {\n            int[] baseColumnMap = table.getBaseTableColumnMap();\n            int[] newColumnMap  = new int[columnMap.length];\n\n            ArrayUtil.projectRow(baseColumnMap, columnMap, newColumnMap);\n\n            columnMap = newColumnMap;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDML.java",
  "id": 742,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 124,
    "lines": "if (adapter != null) {\n                try {\n                    adapter.close();\n                } catch (Exception ex) {}\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 629,
    "lines": "if (adapter != null) {\n                try {\n                    adapter.close();\n                } catch (Exception ex) {}\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
  "id": 743,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 450,
    "lines": "Object[] args = new Object[]{ ValuePool.getInt(type) };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 745,
    "lines": "Object[] args = new Object[]{ ValuePool.getInt(type) };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 744,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 74,
    "lines": "if (WTextWrite == null) {\n            try {\n                WTextWrite = new BufferedWriter(new FileWriter(sFileName));\n            } catch (IOException e) {\n                throw new DataAccessPointException(e.getMessage());\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 167,
    "lines": "if (WTextWrite == null) {\n            try {\n                WTextWrite = new BufferedWriter(new FileWriter(sFileName));\n            } catch (IOException e) {\n                throw new DataAccessPointException(e.getMessage());\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 101,
    "lines": "if (WTextWrite == null) {\n            try {\n                WTextWrite = new BufferedWriter(new FileWriter(sFileName));\n            } catch (IOException e) {\n                throw new DataAccessPointException(e.getMessage());\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java, /hsqldb/src/org/hsqldb/util/TransferSQLText.java & more ...",
  "id": 745,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/doc/verbatim/src/org/hsqldb/test/TestBase.java",
    "startLineNumber": 138,
    "lines": "catch (Exception e) {\n            e.printStackTrace();\n            System.out.println(this + \".setUp() error: \" + e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCascade.java",
    "startLineNumber": 69,
    "lines": "catch (Exception e) {\n            e.printStackTrace();\n            System.out.println(this + \".setUp() error: \" + e.getMessage());\n        }"
   }
  ],
  "title": "/hsqldb/doc/verbatim/src/org/hsqldb/test/TestBase.java, /hsqldb/src/org/hsqldb/test/TestCascade.java",
  "id": 746,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2564,
    "lines": "if (!isCached) {\n            throw Error.error(ErrorCode.X_42501, tableName.name);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2588,
    "lines": "if (!isCached) {\n            throw Error.error(ErrorCode.X_42501, tableName.name);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 747,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionContext.java",
    "startLineNumber": 223,
    "lines": "((Integer) stack.remove(stack.size() - 1)).intValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionContext.java",
    "startLineNumber": 181,
    "lines": "((Integer) stack.remove(stack.size() - 1)).intValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionContext.java",
    "startLineNumber": 180,
    "lines": "((Integer) stack.remove(stack.size() - 1)).intValue()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SessionContext.java, /hsqldb/src/org/hsqldb/SessionContext.java & more ...",
  "id": 748,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 146,
    "lines": "0x80000000 >> ((pos + count - 1) & 0x1F)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 120,
    "lines": "0x80000000 >> ((pos + count - 1) & 0x1F)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BitMap.java, /hsqldb/src/org/hsqldb/map/BitMap.java",
  "id": 749,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 261,
    "lines": "if (!JDBCClobClient.isInLimits(data.length, index - 1, count)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 250,
    "lines": "if (!JDBCClobClient.isInLimits(data.length, index - 1, count)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
  "id": 750,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1310,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1300,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2813,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2953,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2920,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2880,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3379,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2907,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3371,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2991,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_VARCHAR;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 751,
  "numClones": 10,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 157,
    "lines": "public void rollbackRow(Session session, Row row, int changeAction,\n                            int txModel) {\n\n        switch (changeAction) {\n\n            case RowAction.ACTION_DELETE :\n                row = (Row) get(row, true);\n\n                ((RowAVL) row).setNewNodes(this);\n                row.keepInMemory(false);\n                indexRow(session, row);\n                break;\n\n            case RowAction.ACTION_INSERT :\n                delete(session, row);\n                remove(row);\n                break;\n\n            case RowAction.ACTION_INSERT_DELETE :\n\n                // INSERT + DELEETE\n                remove(row);\n                break;\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
    "startLineNumber": 280,
    "lines": "public void rollbackRow(Session session, Row row, int changeAction,\n                            int txModel) {\n\n        switch (changeAction) {\n\n            case RowAction.ACTION_DELETE :\n                row = (Row) get(row, true);\n\n                ((RowAVL) row).setNewNodes(this);\n                row.keepInMemory(false);\n                indexRow(session, row);\n                break;\n\n            case RowAction.ACTION_INSERT :\n                delete(session, row);\n                remove(row);\n                break;\n\n            case RowAction.ACTION_INSERT_DELETE :\n\n                // INSERT + DELEETE\n                remove(row);\n                break;\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
  "id": 752,
  "numClones": 2,
  "cloneSize": 18
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 225,
    "lines": "if (hashIndex.elementCount >= threshold) {\n            reset();\n\n            return getOrAddString(key);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 270,
    "lines": "if (hashIndex.elementCount >= threshold) {\n            reset();\n\n            return getOrAddString(key);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java, /hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
  "id": 753,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1281,
    "lines": "return new IntervalType(group, type, precision, fractionPrecision,\n                                startType, endType, defaultPrecision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1185,
    "lines": "return new IntervalType(group, type, precision, fractionPrecision,\n                                    startType, endType, defaultPrecision);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java",
  "id": 754,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 2521,
    "lines": "token.tokenType != Tokens.X_VALUE\n                        || token.dataType.typeCode != Types.SQL_CHAR"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 579,
    "lines": "token.tokenType != Tokens.X_VALUE\n                        || token.dataType.typeCode != Types.SQL_CHAR"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 546,
    "lines": "token.tokenType != Tokens.X_VALUE\n                        || token.dataType.typeCode != Types.SQL_CHAR"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 562,
    "lines": "token.tokenType != Tokens.X_VALUE\n                        || token.dataType.typeCode != Types.SQL_CHAR"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/ParserBase.java & more ...",
  "id": 755,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1110,
    "lines": "if (data[0] == null || data[1] == null || data[2] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1013,
    "lines": "if (data[0] == null || data[1] == null || data[2] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2032,
    "lines": "if (data[0] == null || data[1] == null || data[2] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2160,
    "lines": "if (data[0] == null || data[1] == null || data[2] == null) {\n                    return null;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 756,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 991,
    "lines": "catch (Exception E) {\n                System.out.println(E.getMessage());\n                E.printStackTrace();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 247,
    "lines": "catch (Exception E) {\n            System.out.println(E.getMessage());\n            E.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 191,
    "lines": "catch (Exception E) {\n            System.out.println(E.getMessage());\n            E.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 959,
    "lines": "catch (Exception E) {\n                System.out.println(E.getMessage());\n                E.printStackTrace();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 863,
    "lines": "catch (Exception E) {\n                System.out.println(E.getMessage());\n                E.printStackTrace();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 788,
    "lines": "catch (Exception E) {\n                System.out.println(E.getMessage());\n                E.printStackTrace();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 620,
    "lines": "catch (Exception E) {\n            System.out.println(E.getMessage());\n            E.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 685,
    "lines": "catch (Exception E) {\n            System.out.println(E.getMessage());\n            E.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 669,
    "lines": "catch (Exception E) {\n            System.out.println(E.getMessage());\n            E.printStackTrace();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/TestBench.java & more ...",
  "id": 757,
  "numClones": 9,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputText.java",
    "startLineNumber": 93,
    "lines": "if (varSep.endsWith(\"\\n\")) {\n            varSepEnd = true;\n            varSep    = varSep.substring(0, varSep.length() - 1);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputText.java",
    "startLineNumber": 103,
    "lines": "if (varSep.endsWith(\"\\n\")) {\n            varSepEnd = true;\n            varSep    = varSep.substring(0, varSep.length() - 1);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowOutputText.java, /hsqldb/src/org/hsqldb/rowio/RowInputText.java",
  "id": 758,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 355,
    "lines": "/**\n     * add transaction info to a row just loaded from the cache. called only\n     * for CACHED tables\n     */\n    public void setTransactionInfo(PersistentStore store,\n                                   CachedObject object) {\n\n        if (object.isMemory()) {\n            return;\n        }\n\n        Row row = (Row) object;\n\n        if (row.getTable().tableType == TableBase.CACHED_TABLE) {\n            RowAction rowact = (RowAction) rowActionMap.get(row.getPos());\n\n            row.rowAction = rowact;\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 581,
    "lines": "/**\n     * add transaction info to a row just loaded from the cache. called only\n     * for CACHED tables\n     */\n    public void setTransactionInfo(PersistentStore store,\n                                   CachedObject object) {\n\n        if (object.isMemory()) {\n            return;\n        }\n\n        Row row = (Row) object;\n\n        if (row.getTable().tableType == TableBase.CACHED_TABLE) {\n            RowAction rowact = (RowAction) rowActionMap.get(row.getPos());\n\n            row.rowAction = rowact;\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 759,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 375,
    "lines": "int value = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 362,
    "lines": "int value = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 522,
    "lines": "int value = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 341,
    "lines": "int     value = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 497,
    "lines": "int value = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 561,
    "lines": "int value = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 548,
    "lines": "int value = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 452,
    "lines": "int value = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 320,
    "lines": "int     value = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 412,
    "lines": "int value = ((Integer) parameters[0]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 472,
    "lines": "int     value = ((Integer) parameters[0]).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementCommand.java & more ...",
  "id": 760,
  "numClones": 11,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferResultSet.java",
    "startLineNumber": 139,
    "lines": "if ((iMaxRowIdx <= 0) || (iMaxRowIdx < iRowIdx)) {\n            return null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferResultSet.java",
    "startLineNumber": 166,
    "lines": "if ((iMaxRowIdx <= 0) || (iMaxRowIdx < iRowIdx)) {\n            return null;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferResultSet.java, /hsqldb/src/org/hsqldb/util/TransferResultSet.java",
  "id": 761,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 996,
    "lines": "session.sessionContext.routineVariables =\n                        new Object[variableCount];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementProcedure.java",
    "startLineNumber": 229,
    "lines": "session.sessionContext.routineVariables = new Object[variableCount];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TriggerDefSQL.java",
    "startLineNumber": 99,
    "lines": "session.sessionContext.routineVariables =\n                new Object[variableCount];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/StatementProcedure.java & more ...",
  "id": 762,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java",
    "startLineNumber": 99,
    "lines": "public static Connection createConnection(String driver, String url,\n            String user, String password) throws Exception {\n\n        Class.forName(driver).newInstance();\n\n        return DriverManager.getConnection(url, user, password);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
    "startLineNumber": 77,
    "lines": "/**\n     * @throws Exception\n     */\n    public static Connection createConnection(String driver, String url,\n            String user, String password) throws Exception {\n\n        Class.forName(driver).newInstance();\n\n        return DriverManager.getConnection(url, user, password);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java, /hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
  "id": 763,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1089,
    "lines": "if (Error.TRACE) {\n                HsqlArrayList list = getAllTables(false);\n\n                for (int i = 0; i < list.size(); i++) {\n                    Table t = (Table) list.get(i);\n\n                    t.verifyConstraintsIntegrity();\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1137,
    "lines": "if (Error.TRACE) {\n                HsqlArrayList list = getAllTables(false);\n\n                for (int i = 0; i < list.size(); i++) {\n                    Table t = (Table) list.get(i);\n\n                    t.verifyConstraintsIntegrity();\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 764,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 630,
    "lines": "if (readIfThis(Tokens.FOR)) {\n                    charsets = new HsqlArrayList();\n\n                    while (true) {\n                        SchemaObject charset =\n                            readSchemaObjectName(SchemaObject.CHARSET);\n\n                        charsets.add(charset);\n\n                        if (token.tokenType == Tokens.COMMA) {\n                            read();\n\n                            continue;\n                        }\n\n                        break;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 593,
    "lines": "if (readIfThis(Tokens.FOR)) {\n                    charsets = new HsqlArrayList();\n\n                    while (true) {\n                        SchemaObject charset =\n                            readSchemaObjectName(SchemaObject.CHARSET);\n\n                        charsets.add(charset);\n\n                        if (token.tokenType == Tokens.COMMA) {\n                            read();\n\n                            continue;\n                        }\n\n                        break;\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 765,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1361,
    "lines": "{\n\n        if (hashIndex.elementCount == 0) {\n            return false;\n        }\n\n        int lookup = getLookup(key);\n\n        return lookup == -1 ? false\n                            : true;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1373,
    "lines": "{\n\n        if (hashIndex.elementCount == 0) {\n            return false;\n        }\n\n        int lookup = getLookup(key);\n\n        return lookup == -1 ? false\n                            : true;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 766,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1267,
    "lines": "while (l != null) {\n                x = l;\n                l = x.getLeft(store);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1303,
    "lines": "while (l != null) {\n                x = l;\n                l = x.getLeft(store);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java",
  "id": 767,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 588,
    "lines": "alterDrop = alterDrop.substring(0, alterDrop.length() - 1)\n                            + \";\";"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 524,
    "lines": "alterDrop =\n                                alterDrop.substring(0, alterDrop.length() - 1)\n                                + \";\";"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferDb.java, /hsqldb/src/org/hsqldb/util/TransferDb.java",
  "id": 768,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreInJar.java",
    "startLineNumber": 125,
    "lines": "try {\n            fis = getClass().getResourceAsStream(fileName);\n\n            if (fis == null) {\n                ClassLoader cl =\n                    Thread.currentThread().getContextClassLoader();\n\n                if (cl != null) {\n                    fis = cl.getResourceAsStream(fileName);\n                }\n            }\n        } catch (Throwable t) {\n\n            //\n        } finally {\n            if (fis == null) {\n                throw new FileNotFoundException(fileName);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileInJar.java",
    "startLineNumber": 226,
    "lines": "try {\n            fis = getClass().getResourceAsStream(fileName);\n\n            if (fis == null) {\n                ClassLoader cl =\n                    Thread.currentThread().getContextClassLoader();\n\n                if (cl != null) {\n                    fis = cl.getResourceAsStream(fileName);\n                }\n            }\n        } catch (Throwable t) {\n\n            //\n        } finally {\n            if (fis == null) {\n                throw new FileNotFoundException(fileName);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FileUtil.java",
    "startLineNumber": 355,
    "lines": "try {\n                fis = getClass().getResourceAsStream(fileName);\n\n                if (fis == null) {\n                    ClassLoader cl =\n                        Thread.currentThread().getContextClassLoader();\n\n                    if (cl != null) {\n                        fis = cl.getResourceAsStream(fileName);\n                    }\n                }\n            } catch (Throwable t) {\n\n                //\n            } finally {\n                if (fis == null) {\n                    throw new FileNotFoundException(fileName);\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobStoreInJar.java, /hsqldb/src/org/hsqldb/persist/RAFileInJar.java & more ...",
  "id": 769,
  "numClones": 3,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java",
    "startLineNumber": 66,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return longValueTable[lookup];\n        }\n\n        return defaultValue;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
    "startLineNumber": 76,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return longValueTable[lookup];\n        }\n\n        return defaultValue;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java, /hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
  "id": 770,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 332,
    "lines": "boolean chain = ((Boolean) parameters[0]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 280,
    "lines": "boolean chain = ((Boolean) parameters[0]).booleanValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSession.java, /hsqldb/src/org/hsqldb/StatementSession.java",
  "id": 771,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePool.java",
    "startLineNumber": 91,
    "lines": "public static final Object[] emptyObjectArray = new Object[]{};"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 144,
    "lines": "public static final Object[] emptyObjectArray = new Object[]{};"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/ValuePool.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 772,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SortAndSlice.java",
    "startLineNumber": 375,
    "lines": "if (opType == OpTypes.MAX) {\n                select.rangeVariables[0].reverseOrder();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SortAndSlice.java",
    "startLineNumber": 355,
    "lines": "if (opType == OpTypes.MAX) {\n                select.rangeVariables[0].reverseOrder();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SortAndSlice.java, /hsqldb/src/org/hsqldb/SortAndSlice.java",
  "id": 773,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestMultiInsert.java",
    "startLineNumber": 59,
    "lines": "protected void setUp() {\n\n        super.setUp();\n\n        try {\n            connection = super.newConnection();\n            stmnt      = connection.createStatement();\n        } catch (Exception e) {}\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSql.java",
    "startLineNumber": 63,
    "lines": "protected void setUp() {\n\n        super.setUp();\n\n        try {\n            connection = super.newConnection();\n            stmnt      = connection.createStatement();\n        } catch (Exception e) {}\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestMerge.java",
    "startLineNumber": 59,
    "lines": "protected void setUp() {\n\n        super.setUp();\n\n        try {\n            connection = super.newConnection();\n            stmnt      = connection.createStatement();\n        } catch (Exception e) {}\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestMultiInsert.java, /hsqldb/src/org/hsqldb/test/TestSql.java & more ...",
  "id": 774,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1450,
    "lines": "if (targetCommand == null) throw new BadSpecial(\n                        SqltoolRB.nobuffer_yet.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1412,
    "lines": "if (targetCommand == null) throw new BadSpecial(\n                        SqltoolRB.nobuffer_yet.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1364,
    "lines": "if (targetCommand == null) throw new BadSpecial(\n                        SqltoolRB.nobuffer_yet.getString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 775,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 218,
    "lines": "catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchemaDefinition.java",
    "startLineNumber": 65,
    "lines": "catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 240,
    "lines": "catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementExpression.java",
    "startLineNumber": 142,
    "lines": "catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSet.java",
    "startLineNumber": 295,
    "lines": "catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSimple.java",
    "startLineNumber": 127,
    "lines": "catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 269,
    "lines": "catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementSchemaDefinition.java & more ...",
  "id": 776,
  "numClones": 7,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 319,
    "lines": "if (action.table.tableType == TableBase.TEMP_TABLE) {\n            return true;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 472,
    "lines": "if (action.table.tableType == TableBase.TEMP_TABLE) {\n            return true;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 777,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 487,
    "lines": "name = (String) Type.SQL_VARCHAR.trim(session, name, ' ',\n                                                          true, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 361,
    "lines": "name = (String) Type.SQL_VARCHAR.trim(session, name, ' ',\n                                                          true, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 449,
    "lines": "name = (String) Type.SQL_VARCHAR.trim(session, name,\n                                                              ' ', true, true);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSession.java, /hsqldb/src/org/hsqldb/StatementSession.java & more ...",
  "id": 778,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 542,
    "lines": "{\n                table[i] = j + 1;\n\n                j++;\n                i++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 504,
    "lines": "{\n                table[i] = j + 1;\n\n                j++;\n                i++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 468,
    "lines": "{\n                table[i] = j + 1;\n\n                j++;\n                i++;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java, /hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java & more ...",
  "id": 779,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 79,
    "lines": "{\n\n        if (elementCount == 0) {\n            throw new NoSuchElementException();\n        }\n\n        return list[endindex - 1];\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 75,
    "lines": "{\n\n        if (elementCount == 0) {\n            throw new NoSuchElementException();\n        }\n\n        return list[endindex - 1];\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java, /hsqldb/src/org/hsqldb/lib/LongDeque.java",
  "id": 780,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 402,
    "lines": "imgEmpty = createImage(new MemoryImageSource(2, 2, new int[4 * 4], 2,\n                2));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 391,
    "lines": "imgEmpty = createImage(new MemoryImageSource(2, 2, new int[4 * 4], 2,\n                2));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/Transfer.java",
  "id": 781,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4131,
    "lines": "if (token.tokenType == Tokens.BY) {\n            read();\n            readThis(Tokens.DEFAULT);\n        } else {\n            readThis(Tokens.ALWAYS);\n\n            generatedAlways = true;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2570,
    "lines": "if (token.tokenType == Tokens.BY) {\n                        read();\n                        readThis(Tokens.DEFAULT);\n                    } else {\n                        readThis(Tokens.ALWAYS);\n\n                        generatedAlways = true;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2676,
    "lines": "if (token.tokenType == Tokens.BY) {\n                read();\n                readThis(Tokens.DEFAULT);\n            } else {\n                readThis(Tokens.ALWAYS);\n\n                generatedAlways = true;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 782,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1207,
    "lines": "{\n            if (isObjectKey) {\n                if (objectKeyTable[lookup] != null) {\n                    return lookup;\n                }\n            } else if (isIntKey) {\n                if (intKeyTable[lookup] != 0) {\n                    return lookup;\n                } else if (hasZeroKey && lookup == zeroKeyIndex) {\n                    return lookup;\n                }\n            } else {\n                if (longKeyTable[lookup] != 0) {\n                    return lookup;\n                } else if (hasZeroKey && lookup == zeroKeyIndex) {\n                    return lookup;\n                }\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 1178,
    "lines": "{\n            if (isObjectKey) {\n                if (objectKeyTable[lookup] != null) {\n                    return lookup;\n                }\n            } else if (isIntKey) {\n                if (intKeyTable[lookup] != 0) {\n                    return lookup;\n                } else if (hasZeroKey && lookup == zeroKeyIndex) {\n                    return lookup;\n                }\n            } else {\n                if (longKeyTable[lookup] != 0) {\n                    return lookup;\n                } else if (hasZeroKey && lookup == zeroKeyIndex) {\n                    return lookup;\n                }\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 783,
  "numClones": 2,
  "cloneSize": 19
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 413,
    "lines": "org.hsqldb.lib.Iterator hIt = hIntMap.keySet().iterator();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 438,
    "lines": "org.hsqldb.lib.Iterator hIt = hIntMap.keySet().iterator();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java, /hsqldb/src/org/hsqldb/test/TestHashStructures.java",
  "id": 784,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1986,
    "lines": "if (!set.isEmpty()) {\n            HsqlName objectName = (HsqlName) set.get(0);\n\n            throw Error.error(ErrorCode.X_42502,\n                              objectName.getSchemaQualifiedStatementName());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2209,
    "lines": "if (!set.isEmpty()) {\n                        HsqlName objectName = (HsqlName) set.get(0);\n\n                        throw Error.error(\n                            ErrorCode.X_42502,\n                            objectName.getSchemaQualifiedStatementName());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 785,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 375,
    "lines": "if (value < minValue || value > maxValue) {\n            throw Error.error(ErrorCode.X_42597);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 746,
    "lines": "if (value < minValue || value > maxValue) {\n            throw Error.error(ErrorCode.X_42597);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/NumberSequence.java, /hsqldb/src/org/hsqldb/NumberSequence.java",
  "id": 786,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2381,
    "lines": "Table table =\n                        (Table) schema.tableList.get(name.parent.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2360,
    "lines": "Table table =\n                            (Table) schema.tableList.get(name.parent.name);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 787,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4932,
    "lines": "{\n                    r = new Expression(OpTypes.ROW, new Expression[] {\n                        r, e\n                    });\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4941,
    "lines": "{\n                r = new Expression(OpTypes.ROW, new Expression[] {\n                    r, e\n                });\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 788,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestScripts.java",
    "startLineNumber": 162,
    "lines": "DriverManager.registerDriver(new org.hsqldb.jdbc.JDBCDriver());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestQuotes.java",
    "startLineNumber": 82,
    "lines": "DriverManager.registerDriver(new org.hsqldb.jdbc.JDBCDriver());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestScripts.java, /hsqldb/src/org/hsqldb/test/TestQuotes.java",
  "id": 789,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 808,
    "lines": "int aBlockOffset = aAddresses[aIndex][LOBS.BLOCK_ADDR]\n                                   + aOffset;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 977,
    "lines": "int aBlockOffset = aAddresses[aIndex][LOBS.BLOCK_ADDR] + aOffset;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 909,
    "lines": "int aBlockOffset = aAddresses[aIndex][LOBS.BLOCK_ADDR] + aOffset;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 713,
    "lines": "int aBlockOffset = aAddresses[aIndex][LOBS.BLOCK_ADDR]\n                                   + aOffset;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 790,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 118,
    "lines": "sb.append(left).append(' ').append(Tokens.T_AS).append(' ');"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 214,
    "lines": "sb.append(left).append(' ').append(Tokens.T_AS).append(' ');"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionOp.java",
  "id": 791,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/Storage.java",
    "startLineNumber": 54,
    "lines": "void read(byte[] b, int offset, int length) throws IOException;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RandomAccessInterface.java",
    "startLineNumber": 51,
    "lines": "void read(byte[] b, int offset, int length) throws IOException;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/Storage.java, /hsqldb/src/org/hsqldb/persist/RandomAccessInterface.java",
  "id": 792,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3475,
    "lines": "{\n                row[data_type] = \"INTERVAL\";\n                row[interval_type] =\n                    ((IntervalType) type).getQualifier(type.typeCode);\n                row[interval_precision] = ValuePool.getLong(type.precision);\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4426,
    "lines": "{\n                        row[data_type] = \"INTERVAL\";\n                        row[interval_type] =\n                            ((IntervalType) type).getQualifier(type.typeCode);\n                        row[interval_precision] =\n                            ValuePool.getLong(type.precision);\n                        row[datetime_precision] =\n                            ValuePool.getLong(type.scale);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7965,
    "lines": "{\n                row[data_type] = \"INTERVAL\";\n                row[interval_type] =\n                    ((IntervalType) type).getQualifier(type.typeCode);\n                row[interval_precision] = ValuePool.getLong(type.precision);\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2725,
    "lines": "{\n                    row[data_type] = \"INTERVAL\";\n                    row[interval_type] =\n                        ((IntervalType) type).getQualifier(type.typeCode);\n                    row[interval_precision] =\n                        ValuePool.getLong(type.precision);\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3817,
    "lines": "{\n            row[data_type] = \"INTERVAL\";\n            row[interval_type] =\n                ((IntervalType) type).getQualifier(type.typeCode);\n            row[interval_precision] = ValuePool.getLong(type.precision);\n            row[datetime_precision] = ValuePool.getLong(type.scale);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6005,
    "lines": "{\n                    row[data_type] = \"INTERVAL\";\n                    row[interval_type] =\n                        ((IntervalType) type).getQualifier(type.typeCode);\n                    row[interval_precision] =\n                        ValuePool.getLong(type.precision);\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 793,
  "numClones": 6,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3129,
    "lines": "htmlMode ? (\"<P>\" + SqlFile.escapeHtml(s) + \"</P>\") : s"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3133,
    "lines": "htmlMode ? (\"<P>\" + SqlFile.escapeHtml(s) + \"</P>\") : s"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3117,
    "lines": "htmlMode ? (\"<P>\" + SqlFile.escapeHtml(s) + \"</P>\") : s"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3113,
    "lines": "htmlMode ? (\"<P>\" + SqlFile.escapeHtml(s) + \"</P>\") : s"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 794,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 640,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 488,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 428,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 312,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 248,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 836,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 548,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 765,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 341,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 669,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 189,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 697,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 729,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 610,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 370,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 458,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 399,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 219,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 803,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 519,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 159,
    "lines": "{\n            try {\n                if (rs != null) {\n                    rs.close();\n                }\n                if (st != null) {\n                    st.close();\n                }\n            } catch(Exception e) {\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java & more ...",
  "id": 795,
  "numClones": 21,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6036,
    "lines": "matcher.groupCount() > 1 && matcher.group(2) != null\n                            && matcher.group(2).length() > 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6071,
    "lines": "matcher.groupCount() > 1 && matcher.group(2) != null\n                            && matcher.group(2).length() > 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6127,
    "lines": "matcher.groupCount() > 1 && matcher.group(2) != null\n                        && matcher.group(2).length() > 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6007,
    "lines": "matcher.groupCount() > 1 && matcher.group(2) != null\n                        && matcher.group(2).length() > 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 796,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5244,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                    read();\n                } else {\n                    readThis(Tokens.CLOSEBRACKET);\n\n                    break;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 1161,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                            read();\n                        } else {\n                            readThis(Tokens.CLOSEBRACKET);\n\n                            break;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 753,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n            } else {\n                readThis(Tokens.CLOSEBRACKET);\n\n                break;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 629,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                    read();\n                } else {\n                    readThis(Tokens.CLOSEBRACKET);\n\n                    break;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDML.java & more ...",
  "id": 797,
  "numClones": 4,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 124,
    "lines": "static {\n        vrb.setMissingPosValueBehavior(\n                ValidatingResourceBundle.NOOP_BEHAVIOR);\n        vrb.setMissingPropertyBehavior(\n                ValidatingResourceBundle.NOOP_BEHAVIOR);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 285,
    "lines": "static {\n        vrb.setMissingPosValueBehavior(ValidatingResourceBundle.NOOP_BEHAVIOR);\n        vrb.setMissingPropertyBehavior(ValidatingResourceBundle.NOOP_BEHAVIOR);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/RB.java, /hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
  "id": 798,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1119,
    "lines": "long offset = ((Number) value).longValue() - 1;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1052,
    "lines": "long offset = ((Number) value).longValue() - 1;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1022,
    "lines": "long offset = ((Number) value).longValue() - 1;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 922,
    "lines": "long offset = ((Number) value).longValue() - 1;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 799,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 427,
    "lines": "(len > 1 && lineString.charAt(len - 2) == '\\r') ? 2 : 1"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 435,
    "lines": "(len > 1 && lineString.charAt(len - 2) == '\\r') ? 2 : 1"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java, /hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
  "id": 800,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2055,
    "lines": "if (JDBCDatabaseMetaData.JDBC_MAJOR >= 4 && getAutoCommit()) {\n            throw JDBCUtil.sqlException(ErrorCode.X_3B001);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 1996,
    "lines": "if (JDBCDatabaseMetaData.JDBC_MAJOR >= 4 && getAutoCommit()) {\n            throw JDBCUtil.sqlException(ErrorCode.X_3B001);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java, /hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
  "id": 801,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3002,
    "lines": "Constraint c =\n                    new Constraint(constName, null,\n                                   SchemaObject.ConstraintTypes.CHECK);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3126,
    "lines": "Constraint c =\n                        new Constraint(constName, null,\n                                       SchemaObject.ConstraintTypes.CHECK);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3166,
    "lines": "Constraint c =\n                        new Constraint(constName, null,\n                                       SchemaObject.ConstraintTypes.CHECK);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 802,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDatabaseMetaData.java",
    "startLineNumber": 93,
    "lines": "while (rsp.next()) {\n                System.out.println(\"Table: \" + rsp.getString(3)\n                                   + \" IndexName: \" + rsp.getString(6));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDatabaseMetaData.java",
    "startLineNumber": 100,
    "lines": "while (rsp.next()) {\n                System.out.println(\"Table: \" + rsp.getString(3)\n                                   + \" IndexName: \" + rsp.getString(6));\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDatabaseMetaData.java, /hsqldb/src/org/hsqldb/test/TestDatabaseMetaData.java",
  "id": 803,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1106,
    "lines": "if (updateCounts.length != batchCount) {\n            if (errorResult == null) {\n                throw new BatchUpdateException(updateCounts);\n            } else {\n                errorResult.getMainString();\n\n                throw new BatchUpdateException(errorResult.getMainString(),\n                        errorResult.getSubString(),\n                        errorResult.getErrorCode(), updateCounts);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1933,
    "lines": "if (updateCounts.length != batchCount) {\n            if (errorResult == null) {\n                throw new BatchUpdateException(updateCounts);\n            } else {\n                errorResult.getMainString();\n\n                throw new BatchUpdateException(errorResult.getMainString(),\n                        errorResult.getSubString(),\n                        errorResult.getErrorCode(), updateCounts);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 804,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 327,
    "lines": "if (nodes[RIGHT].dataType == null) {\n                throw Error.error(ErrorCode.X_42567);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 514,
    "lines": "if (nodes[RIGHT].dataType == null) {\n                        throw Error.error(ErrorCode.X_42567);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionOp.java",
  "id": 805,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3588,
    "lines": "if (token.tokenType == Tokens.UNKNOWN) {\n                read();\n\n                unknown = true;\n            } else {\n                throw unexpectedToken();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3142,
    "lines": "if (token.tokenType == Tokens.UNKNOWN) {\n                read();\n\n                unknown = true;\n            } else {\n                throw unexpectedToken();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 806,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1822,
    "lines": "if (i <= 0) {\n                        n = x.getRight(store);\n                    } else {\n                        result = x;\n                        n      = x.getLeft(store);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1687,
    "lines": "if (i <= 0) {\n                                n = x.getRight(store);\n                            } else {\n                                result = x;\n                                n      = x.getLeft(store);\n                            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java",
  "id": 807,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4908,
    "lines": "if (token.tokenType == Tokens.LEFTBRACKET) {\n            read();\n\n            Expression e1 = XreadNumericValueExpression();\n\n            readThis(Tokens.RIGHTBRACKET);\n\n            e = new ExpressionAccessor(e, e1);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2968,
    "lines": "if (token.tokenType == Tokens.LEFTBRACKET) {\n            read();\n\n            Expression e1 = XreadNumericValueExpression();\n\n            readThis(Tokens.RIGHTBRACKET);\n\n            e = new ExpressionAccessor(e, e1);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 808,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 390,
    "lines": "if (!row.isInMemory()) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"NodeAVLDisk\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 381,
    "lines": "if (!row.isInMemory()) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"NodeAVLDisk\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 328,
    "lines": "if (!row.isInMemory()) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"NodeAVLDisk\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 351,
    "lines": "if (!row.isInMemory()) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"NodeAVLDisk\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 415,
    "lines": "if (!row.isInMemory()) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"NodeAVLDisk\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 367,
    "lines": "if (!row.isInMemory()) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"NodeAVLDisk\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java & more ...",
  "id": 809,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAggregate.java",
    "startLineNumber": 197,
    "lines": "sb.append(nodes[LEFT].describe(session, blanks + 1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 219,
    "lines": "sb.append(nodes[LEFT].describe(session, blanks + 1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 330,
    "lines": "sb.append(nodes[LEFT].describe(session, blanks + 1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 616,
    "lines": "sb.append(nodes[LEFT].describe(session, blanks + 1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 156,
    "lines": "sb.append(nodes[LEFT].describe(session, blanks + 1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 189,
    "lines": "sb.append(nodes[LEFT].describe(session, blanks + 1));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionAggregate.java, /hsqldb/src/org/hsqldb/ExpressionArithmetic.java & more ...",
  "id": 810,
  "numClones": 6,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 421,
    "lines": "((TimeData) a).getNanos()\n                           - ((TimeData) b).getNanos()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 910,
    "lines": "((TimeData) a).getNanos()\n                                 - ((TimeData) b).getNanos()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java",
  "id": 811,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 75,
    "lines": "public CachedObject get(long key, boolean keep) {\n\n        CachedObject object = cache.get(key, this, keep);\n\n        return object;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 116,
    "lines": "public CachedObject get(long key, boolean keep) {\n\n        CachedObject object = cache.get(key, this, keep);\n\n        return object;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
  "id": 812,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 435,
    "lines": "ArrayUtil.projectRowReverse(leftQueryExpression.unionColumnTypes,\n                                    leftQueryExpression.unionColumnMap,\n                                    unionColumnTypes);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 459,
    "lines": "ArrayUtil.projectRowReverse(leftQueryExpression.unionColumnTypes,\n                                    leftQueryExpression.unionColumnMap,\n                                    unionColumnTypes);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QueryExpression.java, /hsqldb/src/org/hsqldb/QueryExpression.java",
  "id": 813,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java",
    "startLineNumber": 657,
    "lines": "IndexUse[] indexes = table.getIndexForColumns(session,\n                colIndexSetEqual, OpTypes.EQUAL, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java",
    "startLineNumber": 758,
    "lines": "IndexUse[] indexes = table.getIndexForColumns(session,\n                    colIndexSetEqual, OpTypes.EQUAL, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java, /hsqldb/src/org/hsqldb/RangeVariableResolver.java",
  "id": 814,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2239,
    "lines": "if (table.isView()\n                    || !session.getGrantee().isFullyAccessibleByRole(\n                        table.getName())) {\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2910,
    "lines": "if (table.isView()\n                    || !session.getGrantee().isFullyAccessibleByRole(\n                        table.getName())) {\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1976,
    "lines": "if (table.isView()\n                    || !session.getGrantee().isFullyAccessibleByRole(\n                        table.getName())) {\n                continue;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 815,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 641,
    "lines": "private void ensureCapacity() {\n\n        if (size == table.length) {\n            int        newSize  = size == 0 ? 4\n                                            : size * 2;\n            Object[][] newTable = new Object[newSize][];\n\n            System.arraycopy(table, 0, newTable, 0, size);\n\n            table = newTable;\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 262,
    "lines": "private void ensureCapacity() {\n\n        if (size == table.length) {\n            int        newSize  = size == 0 ? 4\n                                            : size * 2;\n            Object[][] newTable = new Object[newSize][];\n\n            System.arraycopy(table, 0, newTable, 0, size);\n\n            table = newTable;\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
  "id": 816,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 1050,
    "lines": "class MemoryWatcherThread extends Thread {\n\n        long    min          = 0;\n        long    max          = 0;\n        boolean keep_running = true;\n\n        public MemoryWatcherThread() {\n\n            this.reset();\n\n            keep_running = true;\n        }\n\n        public void reset() {\n\n            System.gc();\n\n            long currentFree  = Runtime.getRuntime().freeMemory();\n            long currentAlloc = Runtime.getRuntime().totalMemory();\n\n            min = max = (currentAlloc - currentFree);\n        }\n\n        public void end() {\n            keep_running = false;\n        }\n\n        public void run() {\n\n            while (keep_running) {\n                long currentFree  = Runtime.getRuntime().freeMemory();\n                long currentAlloc = Runtime.getRuntime().totalMemory();\n                long used         = currentAlloc - currentFree;\n\n                if (used < min) {\n                    min = used;\n                }\n\n                if (used > max) {\n                    max = used;\n                }\n\n                try {\n                    sleep(100);\n                } catch (InterruptedException E) {}\n            }\n        }\n    }    /* end of class MemoryWatcherThread */"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 1067,
    "lines": "class MemoryWatcherThread extends Thread {\n\n        long    min          = 0;\n        long    max          = 0;\n        boolean keep_running = true;\n\n        public MemoryWatcherThread() {\n\n            this.reset();\n\n            keep_running = true;\n        }\n\n        public void reset() {\n\n            System.gc();\n\n            long currentFree  = Runtime.getRuntime().freeMemory();\n            long currentAlloc = Runtime.getRuntime().totalMemory();\n\n            min = max = (currentAlloc - currentFree);\n        }\n\n        public void end() {\n            keep_running = false;\n        }\n\n        public void run() {\n\n            while (keep_running) {\n                long currentFree  = Runtime.getRuntime().freeMemory();\n                long currentAlloc = Runtime.getRuntime().totalMemory();\n                long used         = currentAlloc - currentFree;\n\n                if (used < min) {\n                    min = used;\n                }\n\n                if (used > max) {\n                    max = used;\n                }\n\n                try {\n                    sleep(100);\n                } catch (InterruptedException E) {}\n            }\n        }\n    }    /* end of class MemoryWatcherThread */"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 817,
  "numClones": 2,
  "cloneSize": 33
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 427,
    "lines": "properties.setProperty(HsqlDatabaseProperties.hsqldb_script_format,\n                                   database.logger.propScriptFormat);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 216,
    "lines": "// set this one last to save the props\n        properties.setProperty(HsqlDatabaseProperties.hsqldb_script_format,\n                               database.logger.propScriptFormat);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Log.java, /hsqldb/src/org/hsqldb/persist/Log.java",
  "id": 818,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Grid.java",
    "startLineNumber": 294,
    "lines": "/**\n     * Method declaration\n     *\n     *\n     * @param e\n     */\n\n    // fredt@users 20020130 - comment by fredt\n    // to remove this deprecated method we need to rewrite the Grid class as a\n    // ScrollPane component\n    // sqlbob:  I believe that changing to the JDK1.1 event handler\n    // would require browsers to use the Java plugin.\n    public boolean handleEvent(Event e) {\n\n        switch (e.id) {\n\n            case Event.SCROLL_LINE_UP :\n            case Event.SCROLL_LINE_DOWN :\n            case Event.SCROLL_PAGE_UP :\n            case Event.SCROLL_PAGE_DOWN :\n            case Event.SCROLL_ABSOLUTE :\n                iX = sbHoriz.getValue();\n                iY = iRowHeight * sbVert.getValue();\n\n                repaint();\n\n                return true;\n        }\n\n        return super.handleEvent(e);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Tree.java",
    "startLineNumber": 280,
    "lines": "/**\n     * Method declaration\n     *\n     *\n     * @param e\n     */\n\n// fredt@users 20020130 - comment by fredt\n// to remove this deprecated method we need to rewrite the Tree class as a\n// ScrollPane component\n    public boolean handleEvent(Event e) {\n\n        switch (e.id) {\n\n            case Event.SCROLL_LINE_UP :\n            case Event.SCROLL_LINE_DOWN :\n            case Event.SCROLL_PAGE_UP :\n            case Event.SCROLL_PAGE_DOWN :\n            case Event.SCROLL_ABSOLUTE :\n                iX = sbHoriz.getValue();\n                iY = iRowHeight * sbVert.getValue();\n\n                repaint();\n\n                return true;\n        }\n\n        return super.handleEvent(e);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Grid.java, /hsqldb/src/org/hsqldb/util/Tree.java",
  "id": 819,
  "numClones": 2,
  "cloneSize": 14
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStressInsert.java",
    "startLineNumber": 177,
    "lines": "System.out.println(\"done \" + (t2 - t1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStressInsert.java",
    "startLineNumber": 154,
    "lines": "System.out.println(\"done \" + (t2 - t1));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestStressInsert.java, /hsqldb/src/org/hsqldb/test/TestStressInsert.java",
  "id": 820,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2065,
    "lines": "long[][] bParts = getParts(bID, 0, Long.MAX_VALUE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2030,
    "lines": "long[][] bParts = getParts(bID, 0, Long.MAX_VALUE);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 821,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 396,
    "lines": "label != null\n                           && label.name.equals(result.getMainString())"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 607,
    "lines": "label != null\n                            && label.name.equals(result.getMainString())"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 594,
    "lines": "label != null\n                            && label.name.equals(result.getMainString())"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 526,
    "lines": "label != null\n                            && label.name.equals(result.getMainString())"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCompound.java, /hsqldb/src/org/hsqldb/StatementCompound.java & more ...",
  "id": 822,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 464,
    "lines": "ArrayUtil.projectRowReverse(rightQueryExpression.unionColumnTypes,\n                                    rightQueryExpression.unionColumnMap,\n                                    unionColumnTypes);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 442,
    "lines": "ArrayUtil.projectRowReverse(rightQueryExpression.unionColumnTypes,\n                                    rightQueryExpression.unionColumnMap,\n                                    unionColumnTypes);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QueryExpression.java, /hsqldb/src/org/hsqldb/QueryExpression.java",
  "id": 823,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/UserManager.java",
    "startLineNumber": 199,
    "lines": "if (user == null) {\n            throw Error.error(ErrorCode.X_28501, name);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/UserManager.java",
    "startLineNumber": 330,
    "lines": "if (user == null) {\n            throw Error.error(ErrorCode.X_28501, name);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/UserManager.java, /hsqldb/src/org/hsqldb/rights/UserManager.java",
  "id": 824,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 6745,
    "lines": "{\n\n        int columnIndex = findColumn(columnLabel);\n\n        startUpdate(columnIndex);\n        preparedStatement.setCharacterStream(columnIndex, reader);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 6556,
    "lines": "{\n\n        int columnIndex = findColumn(columnLabel);\n\n        startUpdate(columnIndex);\n        preparedStatement.setCharacterStream(columnIndex, reader);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 825,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataSpaceManagerBlocks.java",
    "startLineNumber": 175,
    "lines": "// integrity check\n        if (index * fileBlockSize != cache.getFileFreePos()) {\n            throw Error.error(ErrorCode.FILE_IO_ERROR);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataSpaceManagerBlocks.java",
    "startLineNumber": 239,
    "lines": "// integrity check\n        if (index * fileBlockSize != cache.getFileFreePos()) {\n            throw Error.error(ErrorCode.FILE_IO_ERROR);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataSpaceManagerBlocks.java",
    "startLineNumber": 227,
    "lines": "if (index * fileBlockSize != cache.getFileFreePos()) {\n                throw Error.error(ErrorCode.FILE_IO_ERROR);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataSpaceManagerBlocks.java, /hsqldb/src/org/hsqldb/persist/DataSpaceManagerBlocks.java & more ...",
  "id": 826,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 738,
    "lines": "int i = colTypes[j].compare(session, a[colIndex[j]],\n                                        b[colIndex[j]]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 767,
    "lines": "int i = colTypes[j].compare(session, a[colIndex[j]],\n                                        b[colIndex[j]]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 812,
    "lines": "int i = colTypes[j].compare(session, a[colIndex[j]],\n                                        b[colIndex[j]]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 753,
    "lines": "int i = colTypes[j].compare(session, a[colIndex[j]],\n                                        b[colIndex[j]]);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java & more ...",
  "id": 827,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 746,
    "lines": "if (bd != null) {\n            bd = bd.setScale(scale, BigDecimal.ROUND_DOWN);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 695,
    "lines": "if (bd != null) {\n            bd = bd.setScale(scale, BigDecimal.ROUND_DOWN);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
  "id": 828,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 692,
    "lines": "if (isIntKey) {\n                    intKeyTable[lookup] = 0;\n                } else {\n                    longKeyTable[lookup] = 0;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 364,
    "lines": "if (isIntKey) {\n                        intKeyTable[lookup] = 0;\n                    } else {\n                        longKeyTable[lookup] = 0;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 829,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSet.java",
    "startLineNumber": 128,
    "lines": "TableDerived[] getSubqueries(Session session) {\n\n        OrderedHashSet subQueries = null;\n\n        if (expression != null) {\n            subQueries = expression.collectAllSubqueries(subQueries);\n        }\n\n        if (subQueries == null || subQueries.size() == 0) {\n            return TableDerived.emptyArray;\n        }\n\n        TableDerived[] subQueryArray = new TableDerived[subQueries.size()];\n\n        subQueries.toArray(subQueryArray);\n\n        for (int i = 0; i < subqueries.length; i++) {\n            subQueryArray[i].prepareTable();\n        }\n\n        return subQueryArray;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementExpression.java",
    "startLineNumber": 94,
    "lines": "TableDerived[] getSubqueries(Session session) {\n\n        OrderedHashSet subQueries = null;\n\n        if (expression != null) {\n            subQueries = expression.collectAllSubqueries(subQueries);\n        }\n\n        if (subQueries == null || subQueries.size() == 0) {\n            return TableDerived.emptyArray;\n        }\n\n        TableDerived[] subQueryArray = new TableDerived[subQueries.size()];\n\n        subQueries.toArray(subQueryArray);\n\n        for (int i = 0; i < subqueries.length; i++) {\n            subQueryArray[i].prepareTable();\n        }\n\n        return subQueryArray;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSet.java, /hsqldb/src/org/hsqldb/StatementExpression.java",
  "id": 830,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 462,
    "lines": "HsqlList unresolved = condition.resolveColumnReferences(session,\n                rangeGroup, rangeGroups, null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 575,
    "lines": "HsqlList unresolved = condition.resolveColumnReferences(session,\n                rangeGroup, rangeGroups, null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDML.java",
  "id": 831,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2560,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3047,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2619,
    "lines": "if (nodes[1].dataType == null) {\n                    nodes[1].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 832,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 386,
    "lines": "if (minimizeOnEmpty && hashIndex.elementCount == 0) {\n                    rehash(initialCapacity);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 844,
    "lines": "if (minimizeOnEmpty && hashIndex.elementCount == 0) {\n                    rehash(initialCapacity);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 833,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 520,
    "lines": "Statement Stmt = Conn.createStatement();\n            String    Query;\n\n            Query = \"DELETE FROM history\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DELETE FROM accounts\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DELETE FROM tellers\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DELETE FROM branches\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 557,
    "lines": "Statement Stmt = Conn.createStatement();\n            String    Query;\n\n            Query = \"DELETE FROM history\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DELETE FROM accounts\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DELETE FROM tellers\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();\n\n            Query = \"DELETE FROM branches\";\n\n            Stmt.execute(Query);\n            Stmt.clearWarnings();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 834,
  "numClones": 2,
  "cloneSize": 14
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java",
    "startLineNumber": 166,
    "lines": "if (txModel == TransactionManager.LOCKS) {\n                    ((RowAVL) row).setNewNodes(this);\n                    indexRow(session, row);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 238,
    "lines": "if (txModel == TransactionManager.LOCKS) {\n                    ((RowAVL) row).setNewNodes(this);\n                    indexRow(session, row);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
  "id": 835,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4027,
    "lines": "e = new Expression(OpTypes.ROW, new Expression[]{ e });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4587,
    "lines": "e = new Expression(OpTypes.ROW, new Expression[]{ e });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 836,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2347,
    "lines": "catch (RuntimeException re) {\n                throw new BadSpecial(SqltoolRB.math_expr_fail.getString(re));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2393,
    "lines": "catch (RuntimeException re) {\n                        throw new BadSpecial(\n                                SqltoolRB.math_expr_fail.getString(re));\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2753,
    "lines": "catch (RuntimeException re) {\n            throw new BadSpecial(SqltoolRB.math_expr_fail.getString(re));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2765,
    "lines": "catch (RuntimeException re) {\n            throw new BadSpecial(SqltoolRB.math_expr_fail.getString(re));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 837,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 808,
    "lines": "{\n                        millis = HsqlDateTime.convertMillisFromCalendar(\n                            session.getCalendar(),\n                            ((java.util.Date) a).getTime());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 759,
    "lines": "{\n                        millis = HsqlDateTime.convertMillisFromCalendar(\n                            session.getCalendar(),\n                            ((java.util.Date) a).getTime());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 838,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 781,
    "lines": "if (count == 0) {\n                session.addWarning(HsqlException.noDataCondition);\n\n                return Result.updateZeroResult;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 555,
    "lines": "if (count == 0) {\n                session.addWarning(HsqlException.noDataCondition);\n\n                return Result.updateZeroResult;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 839,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/OracleTransferHelper.java",
    "startLineNumber": 132,
    "lines": "void beginDataTransfer() {\n\n        try {\n            db.setAutoCommit(false);\n        } catch (Exception e) {}\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java",
    "startLineNumber": 154,
    "lines": "void beginDataTransfer() {\n\n        try {\n            db.setAutoCommit(false);\n        } catch (Exception e) {}\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/OracleTransferHelper.java, /hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java",
  "id": 840,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1042,
    "lines": "protected String getResultString() {\n\n        StringBuffer sb = new StringBuffer();\n\n        if (lines.length == 1 && lines[0].trim().length() < 1) {\n            return null;\n        }\n\n        for (int i = 0; i < lines.length; i++) {\n            if (i > 0) {\n                sb.append(LS);\n            }\n\n            sb.append(\"+ \" + lines[i]);\n        }\n\n        TestUtil.expandStamps(sb);\n\n        return sb.toString().trim();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1350,
    "lines": "protected String getResultString() {\n\n        StringBuffer sb = new StringBuffer();\n\n        if (lines.length == 1 && lines[0].trim().length() < 1) {\n            return null;\n        }\n\n        for (int i = 0; i < lines.length; i++) {\n            if (i > 0) {\n                sb.append(LS);\n            }\n\n            sb.append(\"+ \" + lines[i]);\n        }\n\n        TestUtil.expandStamps(sb);\n\n        return sb.toString().trim();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUtil.java, /hsqldb/src/org/hsqldb/test/TestUtil.java",
  "id": 841,
  "numClones": 2,
  "cloneSize": 14
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7473,
    "lines": "void setNavigator(RowSetNavigator navigator) {\n        this.navigator = navigator;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 1580,
    "lines": "public void setNavigator(RowSetNavigator navigator) {\n        this.navigator = navigator;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/result/Result.java",
  "id": 842,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3556,
    "lines": "if (not) {\n            e = new ExpressionLogical(OpTypes.NOT, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3155,
    "lines": "if (not) {\n            e = new ExpressionLogical(OpTypes.NOT, e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 843,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/Storage.java",
    "startLineNumber": 56,
    "lines": "void write(byte[] b, int offset, int length) throws IOException;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RandomAccessInterface.java",
    "startLineNumber": 53,
    "lines": "void write(byte[] b, int offset, int length) throws IOException;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/Storage.java, /hsqldb/src/org/hsqldb/persist/RandomAccessInterface.java",
  "id": 844,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 3048,
    "lines": "if (tmpString != null) {\n                    showTooltips = Boolean.valueOf(tmpString).booleanValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2990,
    "lines": "if (tmpString != null) {\n                    showTooltips = Boolean.valueOf(tmpString).booleanValue();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 845,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1705,
    "lines": "{\n                if (data[0] == null) {\n                    return null;\n                }\n\n                return dataType.convertToType(session, data[0],\n                                              nodes[0].dataType);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1234,
    "lines": "{\n                if (data[0] == null) {\n                    return null;\n                }\n\n                return dataType.convertToType(session, data[0],\n                                              nodes[0].dataType);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 846,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 930,
    "lines": "{\n            try {\n                prop = System.getProperty(key);\n            } catch (SecurityException e) {}\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 895,
    "lines": "{\n            try {\n                prop = System.getProperty(key);\n            } catch (SecurityException e) {}\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
  "id": 847,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5028,
    "lines": "Expression casewhen = new ExpressionOp(OpTypes.CASEWHEN, condition,\n                                               alternatives);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5628,
    "lines": "Expression casewhen = new ExpressionOp(OpTypes.CASEWHEN,\n                                                   condition, alternatives);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 848,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 770,
    "lines": "{\n\n        checkColumn(column);\n\n        return resultMetaData.colIndexes != null\n               && resultMetaData.colIndexes[--column] > -1;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 743,
    "lines": "{\n\n        checkColumn(column);\n\n        return resultMetaData.colIndexes != null\n               && resultMetaData.colIndexes[--column] > -1;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
  "id": 849,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 618,
    "lines": "if (length != shortLength) {\n            byte[] source = a.length > b.length ? a\n                                                : b;\n\n            System.arraycopy(source, shortLength, map, shortLength,\n                             length - shortLength);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 641,
    "lines": "if (length != shortLength) {\n            byte[] source = a.length > b.length ? a\n                                                : b;\n\n            System.arraycopy(source, shortLength, map, shortLength,\n                             length - shortLength);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BitMap.java, /hsqldb/src/org/hsqldb/map/BitMap.java",
  "id": 850,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDatabaseMetaData.java",
    "startLineNumber": 5813,
    "lines": "/**\n     * Returns true if this either implements the interface argument or is directly or indirectly a wrapper\n     * for an object that does. Returns false otherwise. If this implements the interface then return true,\n     * else if this is a wrapper then return the result of recursively calling <code>isWrapperFor</code> on the wrapped\n     * object. If this does not implement the interface and is not a wrapper, return false.\n     * This method should be implemented as a low-cost operation compared to <code>unwrap</code> so that\n     * callers can use this method to avoid expensive <code>unwrap</code> calls that may fail. If this method\n     * returns true then calling <code>unwrap</code> with the same argument should succeed.\n     *\n     * @param iface a Class defining an interface.\n     * @return true if this implements the interface or directly or indirectly wraps an object that does.\n     * @throws java.sql.SQLException  if an error occurs while determining whether this is a wrapper\n     * for an object with the given interface.\n     * @since JDK 1.6, HSQLDB 1.9\n     */\n//#ifdef JAVA6\n    public boolean isWrapperFor(\n            java.lang.Class<?> iface) throws java.sql.SQLException {\n        return (iface != null && iface.isAssignableFrom(this.getClass()));\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 296,
    "lines": "/**\n     * Returns true if this either implements the interface argument or is directly or indirectly a wrapper\n     * for an object that does. Returns false otherwise. If this implements the interface then return true,\n     * else if this is a wrapper then return the result of recursively calling <code>isWrapperFor</code> on the wrapped\n     * object. If this does not implement the interface and is not a wrapper, return false.\n     * This method should be implemented as a low-cost operation compared to <code>unwrap</code> so that\n     * callers can use this method to avoid expensive <code>unwrap</code> calls that may fail. If this method\n     * returns true then calling <code>unwrap</code> with the same argument should succeed.\n     *\n     * @param iface a Class defining an interface.\n     * @return true if this implements the interface or directly or indirectly wraps an object that does.\n     * @throws java.sql.SQLException  if an error occurs while determining whether this is a wrapper\n     * for an object with the given interface.\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n//#ifdef JAVA6\n    public boolean isWrapperFor(\n            java.lang.Class<?> iface) throws java.sql.SQLException {\n        return (iface != null && iface.isAssignableFrom(this.getClass()));\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 6986,
    "lines": "/**\n     * Returns true if this either implements the interface argument or is directly or indirectly a wrapper\n     * for an object that does. Returns false otherwise. If this implements the interface then return true,\n     * else if this is a wrapper then return the result of recursively calling <code>isWrapperFor</code> on the wrapped\n     * object. If this does not implement the interface and is not a wrapper, return false.\n     * This method should be implemented as a low-cost operation compared to <code>unwrap</code> so that\n     * callers can use this method to avoid expensive <code>unwrap</code> calls that may fail. If this method\n     * returns true then calling <code>unwrap</code> with the same argument should succeed.\n     *\n     * @param iface a Class defining an interface.\n     * @return true if this implements the interface or directly or indirectly wraps an object that does.\n     * @throws java.sql.SQLException  if an error occurs while determining whether this is a wrapper\n     * for an object with the given interface.\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n//#ifdef JAVA6\n    public boolean isWrapperFor(\n            java.lang.Class<?> iface) throws java.sql.SQLException {\n        return (iface != null && iface.isAssignableFrom(this.getClass()));\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 852,
    "lines": "/**\n     * Returns true if this either implements the interface argument or is directly or indirectly a wrapper\n     * for an object that does. Returns false otherwise. If this implements the interface then return true,\n     * else if this is a wrapper then return the result of recursively calling <code>isWrapperFor</code> on the wrapped\n     * object. If this does not implement the interface and is not a wrapper, return false.\n     * This method should be implemented as a low-cost operation compared to <code>unwrap</code> so that\n     * callers can use this method to avoid expensive <code>unwrap</code> calls that may fail. If this method\n     * returns true then calling <code>unwrap</code> with the same argument should succeed.\n     *\n     * @param iface a Class defining an interface.\n     * @return true if this implements the interface or directly or indirectly wraps an object that does.\n     * @throws java.sql.SQLException  if an error occurs while determining whether this is a wrapper\n     * for an object with the given interface.\n     * @since JDK 1.6, HSQLDB 1.8.x\n     */\n//#ifdef JAVA6\n    public boolean isWrapperFor(\n            java.lang.Class<?> iface) throws java.sql.SQLException {\n        return (iface != null && iface.isAssignableFrom(this.getClass()));\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDataSource.java",
    "startLineNumber": 228,
    "lines": "/**\n     * Returns true if this either implements the interface argument or is directly or indirectly a wrapper\n     * for an object that does. Returns false otherwise. If this implements the interface then return true,\n     * else if this is a wrapper then return the result of recursively calling <code>isWrapperFor</code> on the wrapped\n     * object. If this does not implement the interface and is not a wrapper, return false.\n     * This method should be implemented as a low-cost operation compared to <code>unwrap</code> so that\n     * callers can use this method to avoid expensive <code>unwrap</code> calls that may fail. If this method\n     * returns true then calling <code>unwrap</code> with the same argument should succeed.\n     *\n     * @param iface a Class defining an interface.\n     * @return true if this implements the interface or directly or indirectly wraps an object that does.\n     * @throws java.sql.SQLException  if an error occurs while determining whether this is a wrapper\n     * for an object with the given interface.\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n//#ifdef JAVA6\n    public boolean isWrapperFor(\n            java.lang.Class<?> iface) throws java.sql.SQLException {\n        return (iface != null && iface.isAssignableFrom(this.getClass()));\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1744,
    "lines": "/**\n     * Returns true if this either implements the interface argument or is directly or indirectly a wrapper\n     * for an object that does. Returns false otherwise. If this implements the interface then return true,\n     * else if this is a wrapper then return the result of recursively calling <code>isWrapperFor</code> on the wrapped\n     * object. If this does not implement the interface and is not a wrapper, return false.\n     * This method should be implemented as a low-cost operation compared to <code>unwrap</code> so that\n     * callers can use this method to avoid expensive <code>unwrap</code> calls that may fail. If this method\n     * returns true then calling <code>unwrap</code> with the same argument should succeed.\n     *\n     * @param iface a Class defining an interface.\n     * @return true if this implements the interface or directly or indirectly wraps an object that does.\n     * @throws java.sql.SQLException  if an error occurs while determining whether this is a wrapper\n     * for an object with the given interface.\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n//#ifdef JAVA6\n    public boolean isWrapperFor(\n            java.lang.Class<?> iface) throws java.sql.SQLException {\n        return (iface != null && iface.isAssignableFrom(this.getClass()));\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 3817,
    "lines": "/**\n     * Returns true if this either implements the interface argument or is directly or indirectly a wrapper\n     * for an object that does. Returns false otherwise. If this implements the interface then return true,\n     * else if this is a wrapper then return the result of recursively calling <code>isWrapperFor</code> on the wrapped\n     * object. If this does not implement the interface and is not a wrapper, return false.\n     * This method should be implemented as a low-cost operation compared to <code>unwrap</code> so that\n     * callers can use this method to avoid expensive <code>unwrap</code> calls that may fail. If this method\n     * returns true then calling <code>unwrap</code> with the same argument should succeed.\n     *\n     * @param iface a Class defining an interface.\n     * @return true if this implements the interface or directly or indirectly wraps an object that does.\n     * @throws java.sql.SQLException  if an error occurs while determining whether this is a wrapper\n     * for an object with the given interface.\n     * @since JDK 1.6, HSQLDB 2.0\n     */\n//#ifdef JAVA6\n    public boolean isWrapperFor(\n            java.lang.Class<?> iface) throws java.sql.SQLException {\n        return (iface != null && iface.isAssignableFrom(this.getClass()));\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCDatabaseMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java & more ...",
  "id": 851,
  "numClones": 7,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1304,
    "lines": "if (!nodes[0].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2583,
    "lines": "/*\n                                if (nodes[1] != null) {\n                                    if (nodes[1].dataType == null) {\n                 nodes[1].dataType = Type.SQL_VARCHAR_DEFAULT;\n                                    }\n\n                                    if (!nodes[1].dataType.isCharacterType()) {\n                                        throw Error.error(ErrorCode.X_42563);\n                                    }\n                                }\n                 */\n                if (!nodes[0].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2331,
    "lines": "if (!nodes[0].dataType.isCharacterType()) {\n                        throw Error.error(ErrorCode.X_42563);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 852,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 440,
    "lines": "while (hasNext()) {\n            Object[] currentData = getNext();\n            boolean  hasRow      = other.containsRow(currentData);\n\n            if (hasRow) {\n                removeCurrent();\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 427,
    "lines": "while (hasNext()) {\n            Object[] currentData = getNext();\n            boolean  hasRow      = other.containsRow(currentData);\n\n            if (hasRow) {\n                removeCurrent();\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
  "id": 853,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 82,
    "lines": "public void setTransactionControl(Session session, int mode) {\n        super.setTransactionControl(session, mode);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 95,
    "lines": "public void setTransactionControl(Session session, int mode) {\n        super.setTransactionControl(session, mode);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 72,
    "lines": "public void setTransactionControl(Session session, int mode) {\n        super.setTransactionControl(session, mode);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java & more ...",
  "id": 854,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionData.java",
    "startLineNumber": 252,
    "lines": "if (offset + count > source.getSize()) {\n            count = source.getSize() - offset;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionData.java",
    "startLineNumber": 233,
    "lines": "if (offset + count > source.getSize()) {\n            count = source.getSize() - offset;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SessionData.java, /hsqldb/src/org/hsqldb/SessionData.java",
  "id": 855,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestKarl.java",
    "startLineNumber": 269,
    "lines": "for (int i = 1; i <= col_count; i++) {\n            System.out.print(rs.getMetaData().getColumnLabel(i) + \"\\t\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestKarl.java",
    "startLineNumber": 234,
    "lines": "for (int i = 1; i <= col_count; i++) {\n            System.out.print(rs.getMetaData().getColumnLabel(i) + \"\\t\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestKarl.java, /hsqldb/src/org/hsqldb/test/TestKarl.java",
  "id": 856,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 446,
    "lines": "{\n                    actionSession.waitingSessions.add(session);\n                    session.waitedSessions.add(actionSession);\n                    session.latch.countUp();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 362,
    "lines": "{\n                        actionSession.waitingSessions.add(session);\n                        session.waitedSessions.add(actionSession);\n                        session.latch.countUp();\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 857,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 238,
    "lines": "if (baOut.length != baR1.length) {\n                assertTrue(\"Expected array len \" + baR1.length + \", got len \"\n                           + baOut.length, false);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 183,
    "lines": "if (baOut.length != baR1.length) {\n                assertTrue(\"Expected array len \" + baR1.length + \", got len \"\n                           + baOut.length, false);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLobs.java, /hsqldb/src/org/hsqldb/test/TestLobs.java",
  "id": 858,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1708,
    "lines": "if (token.tokenType == Tokens.ROW\n                    || token.tokenType == Tokens.ROWS) {\n                read();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1661,
    "lines": "if (token.tokenType == Tokens.ROW\n                    || token.tokenType == Tokens.ROWS) {\n                read();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 859,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultLob.java",
    "startLineNumber": 420,
    "lines": "for (int i = 0; i < result.charBlock.length; i++) {\n                    result.charBlock[i] = dataInput.readChar();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultLob.java",
    "startLineNumber": 397,
    "lines": "for (int i = 0; i < result.charBlock.length; i++) {\n                    result.charBlock[i] = dataInput.readChar();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/ResultLob.java, /hsqldb/src/org/hsqldb/result/ResultLob.java",
  "id": 860,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7962,
    "lines": "if (type.isBooleanType()) {}\n            else if (type.isDateTimeType()) {\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            } else if (type.isIntervalType()) {\n                row[data_type] = \"INTERVAL\";\n                row[interval_type] =\n                    ((IntervalType) type).getQualifier(type.typeCode);\n                row[interval_precision] = ValuePool.getLong(type.precision);\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            } else if (type.isBinaryType()) {\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            } else if (type.isBitType()) {\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            } else if (type.isArrayType()) {\n                row[maximum_cardinality] =\n                    ValuePool.getLong(type.arrayLimitCardinality());\n                row[data_type] = \"ARRAY\";\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3470,
    "lines": "if (type.isBooleanType()) {\n\n                //\n            } else if (type.isDateTimeType()) {\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            } else if (type.isIntervalType()) {\n                row[data_type] = \"INTERVAL\";\n                row[interval_type] =\n                    ((IntervalType) type).getQualifier(type.typeCode);\n                row[interval_precision] = ValuePool.getLong(type.precision);\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            } else if (type.isBinaryType()) {\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            } else if (type.isBitType()) {\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            } else if (type.isArrayType()) {\n                row[maximum_cardinality] =\n                    ValuePool.getLong(type.arrayLimitCardinality());\n                row[data_type] = \"ARRAY\";\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6000,
    "lines": "if (type.isBooleanType()) {\n\n                    //\n                } else if (type.isDateTimeType()) {\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                } else if (type.isIntervalType()) {\n                    row[data_type] = \"INTERVAL\";\n                    row[interval_type] =\n                        ((IntervalType) type).getQualifier(type.typeCode);\n                    row[interval_precision] =\n                        ValuePool.getLong(type.precision);\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                } else if (type.isBinaryType()) {\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                } else if (type.isBitType()) {\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                } else if (type.isArrayType()) {\n                    row[maximum_cardinality] =\n                        ValuePool.getLong(type.arrayLimitCardinality());\n                    row[data_type] = \"ARRAY\";\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4420,
    "lines": "if (type.isBooleanType()) {\n\n                        //\n                    } else if (type.isDateTimeType()) {\n                        row[datetime_precision] =\n                            ValuePool.getLong(type.scale);\n                    } else if (type.isIntervalType()) {\n                        row[data_type] = \"INTERVAL\";\n                        row[interval_type] =\n                            ((IntervalType) type).getQualifier(type.typeCode);\n                        row[interval_precision] =\n                            ValuePool.getLong(type.precision);\n                        row[datetime_precision] =\n                            ValuePool.getLong(type.scale);\n                    } else if (type.isBinaryType()) {\n                        row[character_maximum_length] =\n                            ValuePool.getLong(type.precision);\n                        row[character_octet_length] =\n                            ValuePool.getLong(type.precision);\n                    } else if (type.isBitType()) {\n                        row[character_maximum_length] =\n                            ValuePool.getLong(type.precision);\n                        row[character_octet_length] =\n                            ValuePool.getLong(type.precision);\n                    } else if (type.isArrayType()) {\n                        row[maximum_cardinality] =\n                            ValuePool.getLong(type.arrayLimitCardinality());\n                        row[data_type] = \"ARRAY\";\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2720,
    "lines": "if (type.isBooleanType()) {\n\n                    //\n                } else if (type.isDateTimeType()) {\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                } else if (type.isIntervalType()) {\n                    row[data_type] = \"INTERVAL\";\n                    row[interval_type] =\n                        ((IntervalType) type).getQualifier(type.typeCode);\n                    row[interval_precision] =\n                        ValuePool.getLong(type.precision);\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                } else if (type.isBinaryType()) {\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                } else if (type.isBitType()) {\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                } else if (type.isArrayType()) {\n                    row[maximum_cardinality] =\n                        ValuePool.getLong(type.arrayLimitCardinality());\n                    row[data_type] = \"ARRAY\";\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 861,
  "numClones": 5,
  "cloneSize": 25
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 163,
    "lines": "Object[] arrb = new Object[arra.length];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 194,
    "lines": "Object[] arrb = new Object[arra.length];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 230,
    "lines": "Object[] arrb = new Object[arra.length];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 194,
    "lines": "Object[] arrb = new Object[arra.length];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/RowType.java, /hsqldb/src/org/hsqldb/types/RowType.java & more ...",
  "id": 862,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 267,
    "lines": "Client = new ClientThread(n_txn_per_client, url, user, password,\n                                      Connection.TRANSACTION_READ_COMMITTED);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 288,
    "lines": "Client =\n                    new ClientThread(n_txn_per_client, url, user, password,\n                                     Connection.TRANSACTION_READ_COMMITTED);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/JDBCBench.java, /hsqldb/src/org/hsqldb/test/TestBench.java",
  "id": 863,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1937,
    "lines": "{\n                sb.append(exprColumns[i].getSQL());\n\n                if (i < limit - 1) {\n                    sb.append(',');\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1917,
    "lines": "{\n                sb.append(exprColumns[i].getSQL());\n\n                if (i < limit - 1) {\n                    sb.append(',');\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QuerySpecification.java, /hsqldb/src/org/hsqldb/QuerySpecification.java",
  "id": 864,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1279,
    "lines": "Expression e = (Expression) sortAndSlice.exprList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1262,
    "lines": "Expression e = (Expression) sortAndSlice.exprList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1026,
    "lines": "Expression e = (Expression) sortAndSlice.exprList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1328,
    "lines": "Expression e = (Expression) sortAndSlice.exprList.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1119,
    "lines": "Expression e =\n                                (Expression) sortAndSlice.exprList.get(i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QuerySpecification.java, /hsqldb/src/org/hsqldb/QuerySpecification.java & more ...",
  "id": 865,
  "numClones": 5,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 916,
    "lines": "return wasNull() ? null\n                                 : b ? Boolean.TRUE\n                                     : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 1670,
    "lines": "return wasNull() ? null\n                                 : b ? Boolean.TRUE\n                                     : Boolean.FALSE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 866,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6119,
    "lines": "if (!matcher.matches())\n                    throw new BadSpecial(SqltoolRB.macro_malformat.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6048,
    "lines": "if (!matcher.matches())\n                            throw new BadSpecial(\n                                    SqltoolRB.macro_malformat.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6000,
    "lines": "if (!matcher.matches())\n                    throw new BadSpecial(SqltoolRB.macro_malformat.getString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 867,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1781,
    "lines": "{\n\n                        /** @todo 1.9.0 - review message malformed character set identifier */\n                        token.tokenType   = Tokens.X_MALFORMED_STRING;\n                        token.isMalformed = true;\n\n                        return;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1769,
    "lines": "{\n\n                    /** @todo 1.9.0 - review message malformed character set identifier */\n                    token.tokenType   = Tokens.X_MALFORMED_STRING;\n                    token.isMalformed = true;\n\n                    return;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 868,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 509,
    "lines": "org.hsqldb.lib.Iterator hIt = hMap.keySet().iterator();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 388,
    "lines": "org.hsqldb.lib.Iterator hIt = hMap.keySet().iterator();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 475,
    "lines": "org.hsqldb.lib.Iterator hIt = hMap.keySet().iterator();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 526,
    "lines": "org.hsqldb.lib.Iterator hIt = hMap.keySet().iterator();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java, /hsqldb/src/org/hsqldb/test/TestHashStructures.java & more ...",
  "id": 869,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestGroupByHaving.java",
    "startLineNumber": 200,
    "lines": "Object[][] expected = new Object[][] {\n            {\n                new Double(42500), new Integer(13)\n            }, {\n                new Double(45000), new Integer(23)\n            },\n        };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestGroupByHaving.java",
    "startLineNumber": 227,
    "lines": "Object[][] expected = new Object[][] {\n            {\n                new Double(42500), new Integer(13)\n            }, {\n                new Double(45000), new Integer(23)\n            },\n        };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestGroupByHaving.java, /hsqldb/src/org/hsqldb/test/TestGroupByHaving.java",
  "id": 870,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 183,
    "lines": "if (row == null) {\n                row = (Row) action.store.get(action.getPos(), false);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 265,
    "lines": "if (row == null) {\n                    row = (Row) action.store.get(action.getPos(), false);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 160,
    "lines": "if (row == null) {\n                    row = (Row) action.store.get(action.getPos(), false);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 208,
    "lines": "if (row == null) {\n                row = (Row) action.store.get(action.getPos(), false);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerCommon.java & more ...",
  "id": 871,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 735,
    "lines": "if (!Tokenizer.nextToken().toUpperCase().equals(\"INTO\")) {\n                        throw new DataAccessPointException(\n                            \"Error in INSERT statement: no INTO found\");\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 473,
    "lines": "if (!Tokenizer.nextToken().toUpperCase().equals(\n                                \"INTO\")) {\n                            throw new DataAccessPointException(\n                                \"Error in INSERT statement: no INTO found\");\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java, /hsqldb/src/org/hsqldb/util/TransferSQLText.java",
  "id": 872,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1391,
    "lines": "return result < 0 ? Boolean.TRUE\n                                  : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1501,
    "lines": "return result < 0 ? Boolean.TRUE\n                                  : Boolean.FALSE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 873,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 639,
    "lines": "appendColumns(sb, updateColumnMap).append('\\n');\n                appendTable(sb).append('\\n');\n                appendCondition(session, sb);\n\n                for (int i = 0; i < targetRangeVariables.length; i++) {\n                    sb.append(targetRangeVariables[i].describe(session,\n                            blanks)).append('\\n');\n                }\n\n                appendParms(sb).append('\\n');\n                appendSubqueries(session, sb, 2).append(']');\n\n                return sb.toString();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 679,
    "lines": "appendColumns(sb, updateColumnMap).append('\\n');\n                appendTable(sb).append('\\n');\n                appendCondition(session, sb);\n\n                for (int i = 0; i < targetRangeVariables.length; i++) {\n                    sb.append(targetRangeVariables[i].describe(session,\n                            blanks)).append('\\n');\n                }\n\n                appendParms(sb).append('\\n');\n                appendSubqueries(session, sb, 2).append(']');\n\n                return sb.toString();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDMQL.java, /hsqldb/src/org/hsqldb/StatementDMQL.java",
  "id": 874,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1419,
    "lines": "if (cs == null) {\n\n                // invalid sql has been removed already\n                return Result.newErrorResult(Error.error(ErrorCode.X_07502));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1304,
    "lines": "if (cs == null) {\n                return Result.newErrorResult(Error.error(ErrorCode.X_07502));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 969,
    "lines": "if (cs == null) {\n\n                        // invalid sql has been removed already\n                        return Result.newErrorResult(\n                            Error.error(ErrorCode.X_07502));\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java & more ...",
  "id": 875,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 857,
    "lines": "nodes[0].dataType.compare(\n                                session, data[0], data[2])"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 877,
    "lines": "nodes[0].dataType.compare(\n                                session, data[0], data[2])"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 876,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 170,
    "lines": "public String getString(int i1, String s2, String s3) {\n        return vrb.getString(this, i1, s3, s3);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 335,
    "lines": "public String getString(int i1, String s2, String s3) {\n        return vrb.getString(this, i1, s3, s3);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/RB.java, /hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
  "id": 877,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 212,
    "lines": "public Result execute(Session session) {\n\n        Result result;\n\n        try {\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }\n\n        if (result.isError()) {\n            result.getException().setStatementType(group, type);\n\n            return result;\n        }\n\n        try {\n            if (isLogged) {\n                session.database.logger.writeOtherStatement(session, sql);\n            }\n        } catch (Throwable e) {\n            return Result.newErrorResult(e, sql);\n        }\n\n        return result;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 234,
    "lines": "public Result execute(Session session) {\n\n        Result result;\n\n        try {\n            result = getResult(session);\n        } catch (Throwable t) {\n            result = Result.newErrorResult(t, null);\n        }\n\n        if (result.isError()) {\n            result.getException().setStatementType(group, type);\n\n            return result;\n        }\n\n        try {\n            if (isLogged) {\n                session.database.logger.writeOtherStatement(session, sql);\n            }\n        } catch (Throwable e) {\n            return Result.newErrorResult(e, sql);\n        }\n\n        return result;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementSession.java",
  "id": 878,
  "numClones": 2,
  "cloneSize": 20
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSql.java",
    "startLineNumber": 696,
    "lines": "st.execute(\n            \"CREATE TABLE t1 (id int not null, v1 int, v2 int, primary key(id))\");\n        st.execute(\n            \"CREATE TABLE t2 (id int not null, v1 int, v3 int, primary key(id))\");\n        st.execute(\"INSERT INTO t1 values(1,1,1)\");\n        st.execute(\"INSERT INTO t1 values(2,2,2)\");\n        st.execute(\"INSERT INTO t2 values(1,3,3)\");\n\n        ResultSet rs = st.executeQuery(\n            \"select t as atable, a as idvalue, b as value1, c as value2, d as value3 from(\"\n            + \"(select 't1' as t, t1.id as a, t1.v1 as b, t1.v2 as c, null as d from t1) union\"\n            + \"(select 't2' as t, t2.id as a, t2.v1 as b, null as c, t2.v3 as d from t2)) order by atable, idvalue\");\n\n        assertTrue(rs.next());\n        assertEquals(\"t1\", rs.getObject(\"atable\"));\n        assertEquals(1, rs.getInt(\"idvalue\"));\n        assertEquals(1, rs.getInt(\"value1\"));\n        assertEquals(1, rs.getInt(\"value2\"));\n        assertEquals(null, rs.getObject(\"value3\"));\n        assertTrue(rs.next());\n        assertEquals(\"t1\", rs.getObject(\"atable\"));\n        assertEquals(2, rs.getInt(\"idvalue\"));\n        assertEquals(2, rs.getInt(\"value1\"));\n        assertEquals(2, rs.getInt(\"value2\"));\n        assertEquals(null, rs.getObject(\"value3\"));\n        assertTrue(rs.next());\n        assertEquals(\"t2\", rs.getObject(\"atable\"));\n        assertEquals(1, rs.getInt(\"idvalue\"));\n        assertEquals(3, rs.getInt(\"value1\"));\n        assertEquals(null, rs.getObject(\"value2\"));\n        assertEquals(3, rs.getInt(\"value3\"));    //this fails!\n        assertFalse(rs.next());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestNullInUnion.java",
    "startLineNumber": 51,
    "lines": "st.execute(\n            \"CREATE TABLE t1 (id int not null, v1 int, v2 int, primary key(id))\");\n        st.execute(\n            \"CREATE TABLE t2 (id int not null, v1 int, v3 int, primary key(id))\");\n        st.execute(\"INSERT INTO t1 values(1,1,1)\");\n        st.execute(\"INSERT INTO t1 values(2,2,2)\");\n        st.execute(\"INSERT INTO t2 values(1,3,3)\");\n\n        ResultSet rs = st.executeQuery(\n            \"select t as atable, a as idvalue, b as value1, c as value2, d as value3 from(\"\n            + \"(select 't1' as t, t1.id as a, t1.v1 as b, t1.v2 as c, null as d from t1) union\"\n            + \"(select 't2' as t, t2.id as a, t2.v1 as b, null as c, t2.v3 as d from t2)) order by atable, idvalue\");\n\n        assertTrue(rs.next());\n        assertEquals(\"t1\", rs.getObject(\"atable\"));\n        assertEquals(1, rs.getInt(\"idvalue\"));\n        assertEquals(1, rs.getInt(\"value1\"));\n        assertEquals(1, rs.getInt(\"value2\"));\n        assertEquals(null, rs.getObject(\"value3\"));\n        assertTrue(rs.next());\n        assertEquals(\"t1\", rs.getObject(\"atable\"));\n        assertEquals(2, rs.getInt(\"idvalue\"));\n        assertEquals(2, rs.getInt(\"value1\"));\n        assertEquals(2, rs.getInt(\"value2\"));\n        assertEquals(null, rs.getObject(\"value3\"));\n        assertTrue(rs.next());\n        assertEquals(\"t2\", rs.getObject(\"atable\"));\n        assertEquals(1, rs.getInt(\"idvalue\"));\n        assertEquals(3, rs.getInt(\"value1\"));\n        assertEquals(null, rs.getObject(\"value2\"));\n        assertEquals(3, rs.getInt(\"value3\"));    //this fails!\n        assertFalse(rs.next());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSql.java, /hsqldb/src/org/hsqldb/test/TestNullInUnion.java",
  "id": 879,
  "numClones": 2,
  "cloneSize": 30
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1921,
    "lines": "if (token.tokenType != Tokens.CLOSEBRACKET) {\n                throw Error.error(errorCode);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1952,
    "lines": "if (token.tokenType != Tokens.CLOSEBRACKET) {\n                throw Error.error(errorCode);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 880,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2383,
    "lines": "if (mathMatcher.matches())\n                                shared.userVars.put(\n                                        mathMatcher.group(1), Long.toString(\n                                        new Calculator(\n                                        ((mathMatcher.groupCount() > 1\n                                        && mathMatcher.group(2) != null)\n                                        ? mathMatcher.group(2)\n                                        : \"\"),\n                                        shared.userVars).reduce(0, false)));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2339,
    "lines": "if (mathMatcher.matches())\n                        shared.userVars.put(mathMatcher.group(1), Long.toString(\n                                new Calculator(((mathMatcher.groupCount() > 1\n                                && mathMatcher.group(2) != null)\n                                ? mathMatcher.group(2)\n                                : \"\"), shared.userVars).reduce(0, false)));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 881,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 651,
    "lines": "public Object convertJavaToSQL(SessionInterface session, Object a) {\n        return convertToDefaultType(session, a);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 1031,
    "lines": "public Object convertJavaToSQL(SessionInterface session, Object a) {\n        return convertToDefaultType(session, a);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 386,
    "lines": "public Object convertJavaToSQL(SessionInterface session, Object a) {\n        return convertToDefaultType(session, a);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 645,
    "lines": "public Object convertJavaToSQL(SessionInterface session, Object a) {\n        return convertToDefaultType(session, a);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BooleanType.java",
    "startLineNumber": 257,
    "lines": "public Object convertJavaToSQL(SessionInterface session, Object a) {\n        return convertToDefaultType(session, a);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/NumberType.java & more ...",
  "id": 882,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1573,
    "lines": "return part == startIntervalType ? (int) units\n                                                 : (int) (units % 60);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1579,
    "lines": "return part == startIntervalType ? (int) units\n                                                 : (int) (units % 60);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java",
  "id": 883,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 594,
    "lines": "check &= param.getParameterMode()\n                     == SchemaObject.ParameterModes.PARAM_INOUT;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 591,
    "lines": "check &= param.getParameterMode()\n                     == SchemaObject.ParameterModes.PARAM_INOUT;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 884,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 1093,
    "lines": "if (length < 0) {\n                throw new IllegalArgumentException(\"length: \" + length);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 873,
    "lines": "if (length < 0) {\n                throw new IllegalArgumentException(\"length: \" + length);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
  "id": 885,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 211,
    "lines": "catch (java.security.InvalidKeyException e) {\n                throw Error.error(ErrorCode.X_S0531, e);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 150,
    "lines": "catch (java.security.InvalidKeyException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 118,
    "lines": "catch (java.security.InvalidKeyException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 173,
    "lines": "catch (java.security.InvalidKeyException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 133,
    "lines": "catch (java.security.InvalidKeyException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Crypto.java, /hsqldb/src/org/hsqldb/persist/Crypto.java & more ...",
  "id": 886,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 233,
    "lines": "String[] expected = new String[] {\n            \"golden delicious\", \"macintosh\"\n        };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 247,
    "lines": "String[] expected = new String[] {\n            \"golden delicious\", \"macintosh\"\n        };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSubselect.java, /hsqldb/src/org/hsqldb/test/TestSubselect.java",
  "id": 887,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlTimer.java",
    "startLineNumber": 229,
    "lines": "if (period <= 0) {\n            throw new IllegalArgumentException(\"period <= 0\");\n        } else if (runnable == null) {\n            throw new IllegalArgumentException(\"runnable == null\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlTimer.java",
    "startLineNumber": 253,
    "lines": "if (period <= 0) {\n            throw new IllegalArgumentException(\"period <= 0\");\n        } else if (runnable == null) {\n            throw new IllegalArgumentException(\"runnable == null\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlTimer.java, /hsqldb/src/org/hsqldb/lib/HsqlTimer.java",
  "id": 888,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1419,
    "lines": "if (session.database.txManager.canRead(\n                    session, store, row, TransactionManager.ACTION_READ,\n                    null)) {\n                return x;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1387,
    "lines": "if (session.database.txManager.canRead(\n                    session, store, row, TransactionManager.ACTION_READ,\n                    null)) {\n                return x;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java",
  "id": 889,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 643,
    "lines": "/**\n     * This method frees the <code>Clob</code> object and releases the resources the resources\n     * that it holds.  The object is invalid once the <code>free</code> method\n     * is called.\n     * <p>\n     * After <code>free</code> has been called, any attempt to invoke a\n     * method other than <code>free</code> will result in a <code>SQLException</code>\n     * being thrown.  If <code>free</code> is called multiple times, the subsequent\n     * calls to <code>free</code> are treated as a no-op.\n     * <p>\n     * @throws SQLException if an error occurs releasing\n     * the Clob's resources\n     *\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.4\n     */\n    public synchronized void free() throws SQLException {\n\n        if (m_closed) {\n            return;\n        }\n\n        m_closed = true;\n\n        final List streams = new ArrayList();\n\n        streams.addAll(m_streams);\n\n        m_streams = null;\n\n        for (Iterator itr = streams.iterator(); itr.hasNext(); ) {\n            final Object stream = itr.next();\n\n            if (stream instanceof InputStream) {\n                try {\n                    ((InputStream) stream).close();\n                } catch (Exception ex) {\n\n                    //\n                }\n            } else if (stream instanceof OutputStream) {\n                try {\n                    ((OutputStream) stream).close();\n                } catch (Exception ex) {\n\n                    //\n                }\n            }\n        }\n\n        if (m_deleteOnFree) {\n            try {\n                m_file.delete();\n            } catch (Exception e) {}\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 516,
    "lines": "/**\n     * This method frees the <code>Blob</code> object and releases the resources that\n     * it holds. The object is invalid once the <code>free</code>\n     * method is called.\n     * <p>\n     * After <code>free</code> has been called, any attempt to invoke a\n     * method other than <code>free</code> will result in a <code>SQLException</code>\n     * being thrown.  If <code>free</code> is called multiple times, the subsequent\n     * calls to <code>free</code> are treated as a no-op.\n     * <p>\n     *\n     * <!-- start release-specific documentation -->\n     * <div class=\"ReleaseSpecificDocumentation\">\n     * <h3>HSQLDB-Specific Information:</h3> <p>\n     *\n     * This operation closes any input and/or output streams obtained\n     * via {@link #getBinaryStream()}, {@link #getBinaryStream(long, long)} or\n     * {@link #setBinaryStream(long)}. <p>\n     *\n     * Additionally, if the property {@link #isDeleteOnFree()} is true, then\n     * an attempt is made to delete the backing file.\n     *\n     * </div>\n     * <!-- end release-specific documentation -->\n     *\n     * @throws SQLException if an error occurs releasing\n     * the Blob's resources\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @see #setDeleteOnFree(boolean)\n     * @see #isDeleteOnFree()\n     * @since JDK 1.6\n     */\n    public synchronized void free() throws SQLException {\n\n        if (m_closed) {\n            return;\n        }\n\n        m_closed = true;\n\n        final List streams = new ArrayList();\n\n        streams.addAll(m_streams);\n\n        m_streams = null;\n\n        for (Iterator itr = streams.iterator(); itr.hasNext(); ) {\n            final Object stream = itr.next();\n\n            if (stream instanceof InputStream) {\n                try {\n                    ((InputStream) stream).close();\n                } catch (Exception ex) {\n\n                    //\n                }\n            } else if (stream instanceof OutputStream) {\n                try {\n                    ((OutputStream) stream).close();\n                } catch (Exception ex) {\n\n                    //\n                }\n            }\n        }\n\n        if (m_deleteOnFree) {\n            try {\n                m_file.delete();\n            } catch (Exception e) {}\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
  "id": 890,
  "numClones": 2,
  "cloneSize": 28
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 886,
    "lines": "try {\n\n                //execute the SQL\n                aStatement.execute(getSql());\n            } catch (SQLException s) {\n                throw new Exception(\"Expected a ResultSet, but got the error: \"\n                                    + s.getMessage());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 724,
    "lines": "try {\n\n                //execute the SQL\n                aStatement.execute(getSql());\n            } catch (SQLException s) {\n                throw new Exception(\"Expected a ResultSet, but got the error: \"\n                                    + s.getMessage());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUtil.java, /hsqldb/src/org/hsqldb/test/TestUtil.java",
  "id": 891,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 3116,
    "lines": "/**\n         * Checks whether this object is closed.\n         *\n         * @throws SAXException if this DOMBuilder is closed.\n         */\n        protected void checkClosed() throws SAXException {\n\n            if (isClosed()) {\n                throw new SAXException(\"content handler is closed.\");    // NOI18N\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
    "startLineNumber": 2528,
    "lines": "/**\n         * Checks whether this DOMBuilder is closed.\n         *\n         * @throws SAXException if this DOMBuilder is closed.\n         */\n        protected void checkClosed() throws SAXException {\n\n            if (isClosed()) {\n                throw new SAXException(\"content handler is closed.\");    // NOI18N\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java, /hsqldb/src/org/hsqldb/jdbc/JDBCSQLXML.java",
  "id": 892,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1637,
    "lines": "if (offset + dataLength > length) {\n                length = offset + dataLength;\n                result = setLength(lobID, length);\n\n                if (result.isError()) {\n                    return result;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1567,
    "lines": "if (offset + dataLength > length) {\n                length = offset + dataLength;\n                result = setLength(lobID, length);\n\n                if (result.isError()) {\n                    return result;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 893,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2206,
    "lines": "HsqlName hsqlName = database.nameManager.newHsqlName(\n                            table.getSchemaName(), n, isDelimitedIdentifier(),\n                            SchemaObject.TRANSITION);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2133,
    "lines": "HsqlName hsqlName = database.nameManager.newHsqlName(\n                            table.getSchemaName(), n, isDelimitedIdentifier(),\n                            SchemaObject.TRANSITION);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 894,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3803,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_TABLE, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3706,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_TABLE, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3870,
    "lines": "return new StatementSchema(sql,\n                                               StatementTypes.ALTER_TABLE,\n                                               args, null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4014,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_TABLE, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3666,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_TABLE, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3858,
    "lines": "return new StatementSchema(sql,\n                                               StatementTypes.ALTER_TABLE,\n                                               args, null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4041,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_TABLE, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4117,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_TABLE, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3900,
    "lines": "return new StatementSchema(sql,\n                                                   StatementTypes.ALTER_TABLE,\n                                                   args, null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3732,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_TABLE, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4284,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_TABLE, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4056,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_TABLE, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3776,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_TABLE, args,\n                                   null, writeLockNames);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 895,
  "numClones": 13,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 824,
    "lines": "if (bLimit > lobBlockSize / 2) {\n                    bLimit = lobBlockSize / 2;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 995,
    "lines": "if (bLimit > lobBlockSize / 2) {\n                bLimit = lobBlockSize / 2;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 896,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 845,
    "lines": "TimestampData t = (TimestampData) getColumnInType(parameterIndex,\n            Type.SQL_TIMESTAMP);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 1398,
    "lines": "TimestampData t = (TimestampData) getColumnInType(parameterIndex,\n            Type.SQL_TIMESTAMP);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
  "id": 897,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLike.java",
    "startLineNumber": 134,
    "lines": "nodes[LEFT].dataType == null && nodes[RIGHT].dataType == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 321,
    "lines": "nodes[LEFT].dataType == null && nodes[RIGHT].dataType == null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLike.java, /hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
  "id": 898,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDataSource.java",
    "startLineNumber": 251,
    "lines": "/**\n     * Retrieves the Reference of this object.\n     *\n     * @return The non-null Reference of this object.\n     * @exception NamingException If a naming exception was encountered\n     *          while retrieving the reference.\n     */\n    public Reference getReference() throws NamingException {\n\n        String    cname = \"org.hsqldb.jdbc.JDBCDataSourceFactory\";\n        Reference ref   = new Reference(getClass().getName(), cname, null);\n\n        ref.add(new StringRefAddr(\"database\", getDatabase()));\n        ref.add(new StringRefAddr(\"user\", getUser()));\n        ref.add(new StringRefAddr(\"password\", password));\n        ref.add(new StringRefAddr(\"loginTimeout\",\n                                  Integer.toString(loginTimeout)));\n\n        return ref;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCXADataSource.java",
    "startLineNumber": 132,
    "lines": "/**\n     * Retrieves the Reference of this object.\n     *\n     * @return The non-null javax.naming.Reference of this object.\n     * @exception NamingException If a naming exception was encountered\n     *          while retrieving the reference.\n     */\n    public Reference getReference() throws NamingException {\n\n        String    cname = \"org.hsqldb.jdbc.JDBCDataSourceFactory\";\n        Reference ref   = new Reference(getClass().getName(), cname, null);\n\n        ref.add(new StringRefAddr(\"database\", getDatabase()));\n        ref.add(new StringRefAddr(\"user\", getUser()));\n        ref.add(new StringRefAddr(\"password\", password));\n        ref.add(new StringRefAddr(\"loginTimeout\",\n                                  Integer.toString(loginTimeout)));\n\n        return ref;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCPooledDataSource.java",
    "startLineNumber": 93,
    "lines": "/**\n     * Retrieves the Reference of this object.\n     *\n     * @return The non-null javax.naming.Reference of this object.\n     * @exception NamingException If a naming exception was encountered\n     *          while retrieving the reference.\n     */\n    public Reference getReference() throws NamingException {\n\n        String    cname = \"org.hsqldb.jdbc.JDBCDataSourceFactory\";\n        Reference ref   = new Reference(getClass().getName(), cname, null);\n\n        ref.add(new StringRefAddr(\"database\", getDatabase()));\n        ref.add(new StringRefAddr(\"user\", getUser()));\n        ref.add(new StringRefAddr(\"password\", password));\n        ref.add(new StringRefAddr(\"loginTimeout\",\n                                  Integer.toString(loginTimeout)));\n\n        return ref;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCDataSource.java, /hsqldb/src/org/hsqldb/jdbc/pool/JDBCXADataSource.java & more ...",
  "id": 899,
  "numClones": 3,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1285,
    "lines": "Type.SQL_DATE.convertToType(session,\n                        data[0], nodes[0].dataType)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1275,
    "lines": "Type.SQL_DATE.convertToType(session, data[0],\n                                                           nodes[0].dataType)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 900,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java",
    "startLineNumber": 101,
    "lines": "{\n\n        int i = 0;\n\n        for (; i < array.length; i++) {\n            if (!super.containsKey(array[i])) {\n                break;\n            }\n        }\n\n        return i;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java",
    "startLineNumber": 101,
    "lines": "{\n\n        int i = 0;\n\n        for (; i < array.length; i++) {\n            if (!super.containsKey(array[i])) {\n                break;\n            }\n        }\n\n        return i;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java, /hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java",
  "id": 901,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1497,
    "lines": "conditions[condIndex].indexEndCondition != null\n                        && !conditions[condIndex].indexEndCondition\n                            .testCondition(session)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1386,
    "lines": "conditions[condIndex].indexEndCondition != null\n                        && !conditions[condIndex].indexEndCondition\n                            .testCondition(session)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariable.java",
  "id": 902,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 146,
    "lines": "int index = hashIndex.getHashIndex((int) (longKey ^ (longKey >>> 32)));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 335,
    "lines": "int index = hashIndex.getHashIndex((int) (longKey ^ (longKey >>> 32)));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java, /hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
  "id": 903,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/User.java",
    "startLineNumber": 81,
    "lines": "sb.append(Tokens.T_PASSWORD).append(' ').append(Tokens.T_DIGEST);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/User.java",
    "startLineNumber": 198,
    "lines": "sb.append(Tokens.T_PASSWORD).append(' ').append(Tokens.T_DIGEST);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/User.java",
    "startLineNumber": 218,
    "lines": "sb.append(Tokens.T_PASSWORD).append(' ').append(Tokens.T_DIGEST);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/User.java, /hsqldb/src/org/hsqldb/rights/User.java & more ...",
  "id": 904,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 610,
    "lines": "((Number) nodes[2].valueData).intValue()\n                           == Tokens.OCTETS"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 592,
    "lines": "((Number) nodes[2].valueData).intValue()\n                           == Tokens.OCTETS"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 936,
    "lines": "((Number) nodes[2].valueData).intValue()\n                           == Tokens.OCTETS"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 905,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/HsqlNameManager.java",
    "startLineNumber": 165,
    "lines": "HsqlName hsqlName = new HsqlName(this, name, isquoted, type);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/HsqlNameManager.java",
    "startLineNumber": 175,
    "lines": "HsqlName hsqlName = new HsqlName(this, name, isquoted, type);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/HsqlNameManager.java, /hsqldb/src/org/hsqldb/HsqlNameManager.java",
  "id": 906,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DataOutputStream.java",
    "startLineNumber": 73,
    "lines": "{\n        writeInt((int) (v >>> 32));\n        writeInt((int) v);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 131,
    "lines": "{\n        writeInt((int) (v >>> 32));\n        writeInt((int) v);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/DataOutputStream.java, /hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
  "id": 907,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 1571,
    "lines": "if (!server.isSilent()) {\n                server.printWithThread(mThread + \":Trying to connect user '\"\n                                       + user + \"' to DB (\" + databaseName\n                                       + ')');\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 1821,
    "lines": "if (!server.isSilent()) {\n                server.printWithThread(mThread + \":Trying to connect user '\"\n                                       + user + \"' to DB (\" + databaseName\n                                       + ')');\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/ServerConnection.java, /hsqldb/src/org/hsqldb/server/ServerConnection.java",
  "id": 908,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 499,
    "lines": "for (int i = 0; i < statements.length; i++) {\n                result = executeProtected(session, statements[i]);\n                result = handleCondition(session, result);\n\n                if (result.isError()) {\n                    break;\n                }\n\n                if (result.getType() == ResultConstants.VALUE) {\n                    break;\n                }\n\n                if (result.getType() == ResultConstants.DATA) {\n                    break;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 375,
    "lines": "for (int i = 0; i < statements.length; i++) {\n            result = executeProtected(session, statements[i]);\n            result = handleCondition(session, result);\n\n            if (result.isError()) {\n                break;\n            }\n\n            if (result.getType() == ResultConstants.VALUE) {\n                break;\n            }\n\n            if (result.getType() == ResultConstants.DATA) {\n                break;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCompound.java, /hsqldb/src/org/hsqldb/StatementCompound.java",
  "id": 909,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatementBase.java",
    "startLineNumber": 261,
    "lines": "currentResultSet = new JDBCResultSet(connection, this, resultIn,\n                                                 resultIn.metaData);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4661,
    "lines": "currentResultSet = new JDBCResultSet(connection, this, resultIn,\n                    resultIn.metaData);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1821,
    "lines": "currentResultSet = new JDBCResultSet(connection, this, resultIn,\n                    resultIn.metaData);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatementBase.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java & more ...",
  "id": 910,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/InputStreamWrapper.java",
    "startLineNumber": 60,
    "lines": "{\n            if (limitSize == -1) {\n                return -1;\n            } else {\n                throw new IOException(\"stream not reached the end\"\n                                      + fetchedSize + \" \" + limitSize);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/InputStreamWrapper.java",
    "startLineNumber": 90,
    "lines": "{\n            if (limitSize == -1) {\n                return -1;\n            } else {\n                throw new IOException(\"stream not reached the end\"\n                                      + fetchedSize + \" \" + limitSize);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/InputStreamWrapper.java, /hsqldb/src/org/hsqldb/lib/InputStreamWrapper.java",
  "id": 911,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1196,
    "lines": "if (!refTable.isEmpty(session)) {\n                    throw Error.error(ErrorCode.X_23504,\n                                      refTable.getName().name);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 1290,
    "lines": "if (!refTable.isEmpty(session)) {\n                                    throw Error.error(ErrorCode.X_23504,\n                                                      refTable.getName().name);\n                                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 1254,
    "lines": "if (!refTable.isEmpty(session)) {\n                                throw Error.error(ErrorCode.X_23504,\n                                                  refTable.getName().name);\n                            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementCommand.java & more ...",
  "id": 912,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1007,
    "lines": "Object[] args    = new Object[]{ routine };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 661,
    "lines": "Object[] args = new Object[]{ routine };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 578,
    "lines": "Object[] args = new Object[]{ routine };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1085,
    "lines": "Object[] args    = new Object[]{ routine };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserRoutine.java & more ...",
  "id": 913,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 703,
    "lines": "if (b instanceof BigDecimal) {\n                    BigDecimal ad = convertToDecimal(a);\n                    return ad.compareTo((BigDecimal) b);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 723,
    "lines": "if (b instanceof BigDecimal) {\n                    BigDecimal ad = convertToDecimal(a);\n                    return ad.compareTo((BigDecimal) b);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/NumberType.java, /hsqldb/src/org/hsqldb/types/NumberType.java",
  "id": 914,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1519,
    "lines": "Schema schema = (Schema) schemaMap.get(name.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2423,
    "lines": "Schema          schema = (Schema) schemaMap.get(name.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 729,
    "lines": "Schema          schema = (Schema) schemaMap.get(name.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2073,
    "lines": "Schema          schema = (Schema) schemaMap.get(name.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1892,
    "lines": "Schema schema = (Schema) schemaMap.get(name.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2260,
    "lines": "Schema          schema = (Schema) schemaMap.get(name.schema.name);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java & more ...",
  "id": 915,
  "numClones": 6,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/DbBackup.java",
    "startLineNumber": 149,
    "lines": "if (sa.length > firstPatInd) {\n                    patternStrings = new String[sa.length - firstPatInd];\n\n                    for (int i = firstPatInd; i < sa.length; i++) {\n                        patternStrings[i - firstPatInd] = sa[i];\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/TarReader.java",
    "startLineNumber": 104,
    "lines": "if (sa.length > firstPatInd) {\n            patternStrings = new String[sa.length - firstPatInd];\n\n            for (int i = firstPatInd; i < sa.length; i++) {\n                patternStrings[i - firstPatInd] = sa[i];\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/DbBackup.java, /hsqldb/src/org/hsqldb/lib/tar/TarReader.java",
  "id": 916,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1123,
    "lines": "!DTIType.isValidDatetimeRange(nodes[LEFT].nodes[0].dataType,\n                                          nodes[LEFT].nodes[1].dataType)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1115,
    "lines": "!DTIType\n                .isValidDatetimeRange(nodes[LEFT].nodes[0]\n                    .dataType, nodes[LEFT].nodes[1].dataType)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 917,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/SimpleLog.java",
    "startLineNumber": 148,
    "lines": "if (!isSQL) {\n            sb.append(logTypeNames[atLevel]).append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/SimpleLog.java",
    "startLineNumber": 195,
    "lines": "if (!isSQL) {\n            sb.append(logTypeNames[atLevel]).append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/SimpleLog.java",
    "startLineNumber": 171,
    "lines": "if (!isSQL) {\n            sb.append(logTypeNames[atLevel]).append(' ');\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/SimpleLog.java, /hsqldb/src/org/hsqldb/lib/SimpleLog.java & more ...",
  "id": 918,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5315,
    "lines": "colonAt < 1 || colonAt == trimmedLine.length() - 1"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5588,
    "lines": "colonAt < 1 || colonAt == trimmedLine.length() - 1"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 919,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3340,
    "lines": "{\n\n        Expression e = XreadDateTimeIntervalTerm();\n\n        while (true) {\n            int type;\n\n            if (token.tokenType == Tokens.PLUS) {\n                type = OpTypes.ADD;\n            } else if (token.tokenType == Tokens.MINUS) {\n                type = OpTypes.SUBTRACT;\n            } else {\n                break;\n            }\n\n            read();\n\n            Expression a = e;\n\n            e = XreadDateTimeIntervalTerm();\n            e = new ExpressionArithmetic(type, a, e);\n        }\n\n        return e;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3366,
    "lines": "{\n\n        Expression e = XreadDateTimeIntervalTerm();\n\n        while (true) {\n            int type;\n\n            if (token.tokenType == Tokens.PLUS) {\n                type = OpTypes.ADD;\n            } else if (token.tokenType == Tokens.MINUS) {\n                type = OpTypes.SUBTRACT;\n            } else {\n                break;\n            }\n\n            read();\n\n            Expression a = e;\n\n            e = XreadDateTimeIntervalTerm();\n            e = new ExpressionArithmetic(type, a, e);\n        }\n\n        return e;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 920,
  "numClones": 2,
  "cloneSize": 18
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1061,
    "lines": "c\n                    .getConstraintType() == SchemaObject.ConstraintTypes\n                    .UNIQUE || c.getConstraintType() == SchemaObject\n                    .ConstraintTypes.PRIMARY_KEY"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 472,
    "lines": "c.getConstraintType() == SchemaObject.ConstraintTypes\n                    .UNIQUE || c.getConstraintType() == SchemaObject\n                    .ConstraintTypes.PRIMARY_KEY"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 921,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/TimeData.java",
    "startLineNumber": 53,
    "lines": "if (seconds > 24 * 60 * 60) {\n            seconds %= 24 * 60 * 60;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 932,
    "lines": "if (seconds > 24 * 60 * 60) {\n            seconds %= 24 * 60 * 60;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/TimeData.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 922,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVL.java",
    "startLineNumber": 249,
    "lines": "protected Object[] getData(PersistentStore store) {\n        return row.getData();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 179,
    "lines": "public Object[] getData(PersistentStore store) {\n        return row.getData();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 135,
    "lines": "public Object[] getData(PersistentStore store) {\n        return row.getData();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVL.java, /hsqldb/src/org/hsqldb/index/NodeAVLDisk.java & more ...",
  "id": 923,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 421,
    "lines": "{\n                final int tableValue = table[patternIndex];\n\n                matchStart += (patternIndex - tableValue);\n\n                if (patternIndex > 0) {\n                    patternIndex = tableValue;\n                }\n\n                patternIndex++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 357,
    "lines": "{\n                final int tableValue = table[patternIndex];\n\n                matchStart += (patternIndex - tableValue);\n\n                if (patternIndex > 0) {\n                    patternIndex = tableValue;\n                }\n\n                patternIndex++;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java, /hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
  "id": 924,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java",
    "startLineNumber": 93,
    "lines": "while (rs.next()) {\n            System.out.println(rs.getInt(1));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java",
    "startLineNumber": 124,
    "lines": "while (rs.next()) {\n            System.out.println(rs.getInt(1));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java",
    "startLineNumber": 115,
    "lines": "while (rs.next()) {\n            System.out.println(rs.getInt(1));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java",
    "startLineNumber": 102,
    "lines": "while (rs.next()) {\n            System.out.println(rs.getInt(1));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java, /hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java & more ...",
  "id": 925,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 268,
    "lines": "Object[] array = new Object[data.length];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 172,
    "lines": "Object[] array = new Object[data.length];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ArrayType.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
  "id": 926,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1520,
    "lines": "if (!nodes[2].dataType.isNumberType()) {\n                        throw Error.error(ErrorCode.X_42563);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1692,
    "lines": "if (!nodes[2].dataType.isNumberType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 927,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2005,
    "lines": "{\n\n        if (alreadyHandled == e) {\n            return;\n        }\n\n        handlePopup(e);\n\n        alreadyHandled = e;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1992,
    "lines": "{\n\n        if (alreadyHandled == e) {\n            return;\n        }\n\n        handlePopup(e);\n\n        alreadyHandled = e;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 928,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBatchExecution.java",
    "startLineNumber": 200,
    "lines": "preparedTestOne(runs);\n\n        // drop the test table\n        println(drop_table_sql);\n        stmnt.execute(drop_table_sql);\n        println(\"---------------------------------------\");\n        println(\"shutting down database\");\n        stmnt.execute(shutdown_sql);\n        println(\"---------------------------------------\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBatchExecution.java",
    "startLineNumber": 152,
    "lines": "preparedTestOne(runs);\n\n        // drop the test table and shut down database\n        println(drop_table_sql);\n        stmnt.execute(drop_table_sql);\n        println(\"---------------------------------------\");\n        println(\"shutting down database\");\n        stmnt.execute(shutdown_sql);\n        println(\"---------------------------------------\");\n\n        // get the connection and statement\n        conn  = DriverManager.getConnection(url, \"SA\", \"\");\n        stmnt = conn.createStatement();\n\n        println(\"\");\n        println(\"***************************************\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBatchExecution.java",
    "startLineNumber": 152,
    "lines": "preparedTestOne(runs);\n\n        // drop the test table and shut down database\n        println(drop_table_sql);\n        stmnt.execute(drop_table_sql);\n        println(\"---------------------------------------\");\n        println(\"shutting down database\");\n        stmnt.execute(shutdown_sql);\n        println(\"---------------------------------------\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBatchExecution.java",
    "startLineNumber": 176,
    "lines": "preparedTestOne(runs);\n\n        // drop the test table and shut down database\n        println(drop_table_sql);\n        stmnt.execute(drop_table_sql);\n        println(\"---------------------------------------\");\n        println(\"shutting down database\");\n        stmnt.execute(shutdown_sql);\n        println(\"---------------------------------------\");\n\n        // get the connection and statement\n        conn  = DriverManager.getConnection(url, \"SA\", \"\");\n        stmnt = conn.createStatement();\n\n        println(\"\");\n        println(\"***************************************\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBatchExecution.java",
    "startLineNumber": 176,
    "lines": "preparedTestOne(runs);\n\n        // drop the test table and shut down database\n        println(drop_table_sql);\n        stmnt.execute(drop_table_sql);\n        println(\"---------------------------------------\");\n        println(\"shutting down database\");\n        stmnt.execute(shutdown_sql);\n        println(\"---------------------------------------\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBatchExecution.java, /hsqldb/src/org/hsqldb/test/TestBatchExecution.java & more ...",
  "id": 929,
  "numClones": 5,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1740,
    "lines": "sortAndSlice.addLimitCondition(new ExpressionOp(OpTypes.LIMIT, e1,\n                    e2));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1637,
    "lines": "sortAndSlice.addLimitCondition(new ExpressionOp(OpTypes.LIMIT, e1,\n                    e2));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 930,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 850,
    "lines": "if (mode == TransactionManager.ACTION_READ) {\n                        actionType = action.ACTION_DELETE;\n                    } else if (mode == TransactionManager.ACTION_DUP) {\n                        actionType = ACTION_INSERT;\n\n                        session.tempSet.clear();\n                        session.tempSet.add(action);\n                    } else if (mode == TransactionManager.ACTION_REF) {\n                        actionType = ACTION_DELETE;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 818,
    "lines": "if (mode == TransactionManager.ACTION_READ) {\n                        actionType = action.ACTION_DELETE;\n                    } else if (mode == TransactionManager.ACTION_DUP) {\n                        actionType = ACTION_INSERT;\n\n                        session.tempSet.clear();\n                        session.tempSet.add(action);\n                    } else if (mode == TransactionManager.ACTION_REF) {\n                        actionType = ACTION_DELETE;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAction.java, /hsqldb/src/org/hsqldb/RowAction.java",
  "id": 931,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2257,
    "lines": "varName = s.substring(b + (permitUnset ? 3 : 2), e);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2221,
    "lines": "varName = s.substring(b + (permitUnset ? 3 : 2), e);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 932,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 332,
    "lines": "assertEquals(Double.class, rs.getObject(\"r\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1073,
    "lines": "assertEquals(Double.class, rs.getObject(\"r\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 933,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 431,
    "lines": "try {\n                        tracer.trace(\"Executing \" + Statement);\n                        destDb.execute(Statement);\n                    } catch (Exception e) {\n                        tracer.trace(\"Ignoring error \" + e.getMessage());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 248,
    "lines": "try {\n                        tracer.trace(\"Executing \" + Statement);\n                        destDb.execute(Statement);\n                    } catch (Exception e) {\n                        tracer.trace(\"Ignoring error \" + e.getMessage());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 216,
    "lines": "try {\n                        tracer.trace(\"Executing \" + Statement);\n                        destDb.execute(Statement);\n                    } catch (Exception e) {\n                        tracer.trace(\"Ignoring error \" + e.getMessage());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 184,
    "lines": "try {\n                        tracer.trace(\"Executing \" + Statement);\n                        destDb.execute(Statement);\n                    } catch (Exception e) {\n                        tracer.trace(\"Ignoring error \" + e.getMessage());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferTable.java, /hsqldb/src/org/hsqldb/util/TransferTable.java & more ...",
  "id": 934,
  "numClones": 4,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4248,
    "lines": "{\n                        o = outType.convertToType(session, o,\n                                Type.SQL_VARCHAR);\n\n                        break;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4225,
    "lines": "{\n                        o = outType.convertToType(session, o,\n                                Type.SQL_VARCHAR);\n\n                        break;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 935,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 188,
    "lines": "for (int i = 0; i < baOut.length; i++) {\n                if (baOut[i] != baR1[i]) {\n                    assertTrue(\"Expected array len \" + baR1.length\n                               + \", got len \" + baOut.length, false);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 243,
    "lines": "for (int i = 0; i < baOut.length; i++) {\n                if (baOut[i] != baR1[i]) {\n                    assertTrue(\"Expected array len \" + baR1.length\n                               + \", got len \" + baOut.length, false);\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLobs.java, /hsqldb/src/org/hsqldb/test/TestLobs.java",
  "id": 936,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 729,
    "lines": "((Integer) meta[HsqlProperties.indexType]).intValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 1931,
    "lines": "((Integer) meta[HsqlProperties.indexType]).intValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 703,
    "lines": "((Integer) meta[HsqlProperties.indexType]).intValue()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java & more ...",
  "id": 937,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 299,
    "lines": "if (key > Integer.MAX_VALUE || key < Integer.MIN_VALUE) {\n            throw new java.lang.IllegalArgumentException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 164,
    "lines": "if (key > Integer.MAX_VALUE || key < Integer.MIN_VALUE) {\n            throw new java.lang.IllegalArgumentException();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java, /hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
  "id": 938,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3430,
    "lines": "filter = (matcher.group(2).length() > 0)\n                                        ? matcher.group(2) : null;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3537,
    "lines": "filter = (matcher.group(2).length() > 0)\n                                ? matcher.group(2) : null;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3328,
    "lines": "filter = (matcher.group(2).length() > 0)\n                                        ? matcher.group(2) : null;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 939,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
    "startLineNumber": 306,
    "lines": "arrayValue   = new Double[] {\n                new Double(1), new Double(Double.NaN),\n                new Double(Double.NEGATIVE_INFINITY),\n                new Double(Double.POSITIVE_INFINITY)\n            };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
    "startLineNumber": 129,
    "lines": "arrayValue   = new Double[] {\n                new Double(1), new Double(Double.NaN),\n                new Double(Double.NEGATIVE_INFINITY),\n                new Double(Double.POSITIVE_INFINITY)\n            };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java, /hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
  "id": 940,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1787,
    "lines": "catch (Exception e) {\n                    throw new BadSpecial(SqltoolRB.file_writefail.getString(\n                            filePath), e);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6290,
    "lines": "catch (Exception e) {\n            throw new BadSpecial(\n                    SqltoolRB.file_writefail.getString(filePath), e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 941,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5747,
    "lines": "addColumn(t, \"CHARACTER_MAXIMUM_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_OCTET_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_SET_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);          //\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);        //\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3536,
    "lines": "addColumn(t, \"CHARACTER_MAXIMUM_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_OCTET_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_SET_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7841,
    "lines": "addColumn(t, \"CHARACTER_MAXIMUM_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_OCTET_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_SET_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3361,
    "lines": "addColumn(t, \"CHARACTER_MAXIMUM_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_OCTET_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_SET_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 942,
  "numClones": 4,
  "cloneSize": 14
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 919,
    "lines": "if (metaData == null) {\n            throw Error.error(ErrorCode.X_42555, key);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 950,
    "lines": "if (metaData == null) {\n            throw Error.error(ErrorCode.X_42555, key);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 886,
    "lines": "if (metaData == null) {\n            throw Error.error(ErrorCode.X_42555, key);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 970,
    "lines": "if (metaData == null) {\n            throw Error.error(ErrorCode.X_42555, key);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 874,
    "lines": "if (metaData == null) {\n            throw Error.error(ErrorCode.X_42555, key);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java & more ...",
  "id": 943,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 880,
    "lines": "ps = connection.prepareStatement(dql0);\n\n            ResultSet rs = ps.executeQuery();\n\n            rs.next();\n\n            Blob blob1 = rs.getBlob(2);\n\n            rs.next();\n\n            Blob   blob2 = rs.getBlob(2);\n            byte[] data1 = blob1.getBytes(1, 10);\n            byte[] data2 = blob2.getBytes(1, 10);\n\n            assertTrue(data1[4] == 5 && data2[4] == 50);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 117,
    "lines": "ps = connection.prepareStatement(dql0);\n\n            ResultSet rs = ps.executeQuery();\n\n            rs.next();\n\n            Blob blob1 = rs.getBlob(2);\n\n            rs.next();\n\n            Blob   blob2 = rs.getBlob(2);\n            byte[] data1 = blob1.getBytes(1, 10);\n            byte[] data2 = blob2.getBytes(1, 10);\n\n            assertTrue(data1[4] == 5 && data2[4] == 50);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLobs.java, /hsqldb/src/org/hsqldb/test/TestLobs.java",
  "id": 944,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2314,
    "lines": "e = new ExpressionValue(token.tokenValue, token.dataType);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2243,
    "lines": "e = new ExpressionValue(token.tokenValue, token.dataType);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 945,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 200,
    "lines": "maxDataFileSize = (long) Integer.MAX_VALUE * dataFileScale\n                          * database.logger.getDataFileFactor();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 302,
    "lines": "maxDataFileSize =\n                            (long) Integer.MAX_VALUE * dataFileScale\n                            * database.logger.getDataFileFactor();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java, /hsqldb/src/org/hsqldb/persist/DataFileCache.java",
  "id": 946,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 1026,
    "lines": "try {\n            object = cache.get(pos);\n\n            if (object != null) {\n                if (keep) {\n                    object.keepInMemory(true);\n                }\n\n                return object;\n            }\n        } finally {\n            readLock.unlock();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 999,
    "lines": "try {\n            object = cache.get(pos);\n\n            if (object != null) {\n                if (keep) {\n                    object.keepInMemory(true);\n                }\n\n                return object;\n            }\n        } finally {\n            readLock.unlock();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java, /hsqldb/src/org/hsqldb/persist/DataFileCache.java",
  "id": 947,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 318,
    "lines": "if (node.nParent == null || !node.nParent.isInMemory()) {\n            node.nParent = findNode(store, iParent);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 271,
    "lines": "if (node.nParent == null || !node.nParent.isInMemory()) {\n            node.nParent = findNode(store, iParent);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 227,
    "lines": "if (node.nParent == null || !node.nParent.isInMemory()) {\n            node.nParent = findNode(store, iParent);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 274,
    "lines": "if (node.nParent == null || !node.nParent.isInMemory()) {\n            node.nParent = findNode(store, iParent);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDisk.java & more ...",
  "id": 948,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 420,
    "lines": "/**\n     * Retrieves a result set holding the elements of the subarray that\n     * starts at index <code>index</code> and contains up to\n     * <code>count</code> successive elements.\n     * This method uses\n     * the specified <code>map</code> for type map customizations\n     * unless the base type of the array does not match a user-defined\n     * type in <code>map</code>, in which case it\n     * uses the standard mapping. This version of the method\n     * <code>getResultSet</code> uses either the given type map or the standard mapping;\n     * it never uses the type map associated with the connection.\n     * <P>\n     * The result set has one row for each element of the SQL array\n     * designated by this object, with the first row containing the\n     * element at index <code>index</code>.  The result set has\n     * up to <code>count</code> rows in ascending order based on the\n     * indices.  Each row has two columns:  The second column stores\n     * the element value; the first column stores the index into the\n     * array for that element.\n     *\n     * @param index the array index of the first element to retrieve;\n     *              the first element is at index 1\n     * @param count the number of successive SQL array elements to retrieve\n     * @param map the <code>Map</code> object that contains the mapping\n     * of SQL type names to classes in the Java(tm) programming language\n     * @return a <code>ResultSet</code> object containing up to\n     * <code>count</code> consecutive elements of the SQL array\n     * designated by this <code>Array</code> object, starting at\n     * index <code>index</code>.\n     * @exception SQLException if an error occurs while attempting to\n     * access the array\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.2\n     */\n    public ResultSet getResultSet(long index, int count,\n                                  java.util.Map<String,\n                                      Class<?>> map) throws SQLException {\n        return getResultSet(index, count);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 432,
    "lines": "/**\n     * Retrieves a result set holding the elements of the subarray that\n     * starts at index <code>index</code> and contains up to\n     * <code>count</code> successive elements.\n     * This method uses\n     * the specified <code>map</code> for type map customizations\n     * unless the base type of the array does not match a user-defined\n     * type in <code>map</code>, in which case it\n     * uses the standard mapping. This version of the method\n     * <code>getResultSet</code> uses either the given type map or the standard mapping;\n     * it never uses the type map associated with the connection.\n     * <P>\n     * The result set has one row for each element of the SQL array\n     * designated by this object, with the first row containing the\n     * element at index <code>index</code>.  The result set has\n     * up to <code>count</code> rows in ascending order based on the\n     * indices.  Each row has two columns:  The second column stores\n     * the element value; the first column stroes the index into the\n     * array for that element.\n     *\n     * @param index the array index of the first element to retrieve;\n     *              the first element is at index 1\n     * @param count the number of successive SQL array elements to retrieve\n     * @param map the <code>Map</code> object that contains the mapping\n     * of SQL type names to classes in the Java(tm) programming language\n     * @return a <code>ResultSet</code> object containing up to\n     * <code>count</code> consecutive elements of the SQL array\n     * designated by this <code>Array</code> object, starting at\n     * index <code>index</code>.\n     * @exception SQLException if an error occurs while attempting to\n     * access the array\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.2\n     */\n    public ResultSet getResultSet(long index, int count,\n                                  java.util.Map<String,\n                                      Class<?>> map) throws SQLException {\n        return getResultSet(index, count);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
  "id": 949,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultLob.java",
    "startLineNumber": 634,
    "lines": "//\n        int  bufferLength  = session.getStreamBlockSize();\n        long currentOffset = blockOffset;\n\n        dataOut.writeByte(mode);\n        dataOut.writeInt(databaseID);\n        dataOut.writeLong(sessionID);\n        dataOut.writeLong(lobID);\n        dataOut.writeInt(subType);\n\n        HsqlByteArrayOutputStream byteArrayOS =\n            new HsqlByteArrayOutputStream(bufferLength);\n\n        byteArrayOS.reset();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/ResultLob.java",
    "startLineNumber": 578,
    "lines": "//\n        int  bufferLength  = session.getStreamBlockSize();\n        long currentOffset = blockOffset;\n\n        dataOut.writeByte(mode);\n        dataOut.writeInt(databaseID);\n        dataOut.writeLong(sessionID);\n        dataOut.writeLong(lobID);\n        dataOut.writeInt(subType);\n\n        HsqlByteArrayOutputStream byteArrayOS =\n            new HsqlByteArrayOutputStream(bufferLength);\n\n        byteArrayOS.reset();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/ResultLob.java, /hsqldb/src/org/hsqldb/result/ResultLob.java",
  "id": 950,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 249,
    "lines": "System.arraycopy(list, target + 1, list, target,\n                             endindex - target - 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 288,
    "lines": "System.arraycopy(list, target + 1, list, target,\n                             endindex - target - 1);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongDeque.java, /hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
  "id": 951,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 6946,
    "lines": "{\n\n        int columnIndex = findColumn(columnLabel);\n\n        startUpdate(columnIndex);\n        preparedStatement.setClob(columnIndex, reader);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 6874,
    "lines": "{\n\n        int columnIndex = findColumn(columnLabel);\n\n        startUpdate(columnIndex);\n        preparedStatement.setClob(columnIndex, reader);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 952,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQLInvoked.java",
    "startLineNumber": 293,
    "lines": "if (array == null) {\n            array = new Object[3];\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQLInvoked.java",
    "startLineNumber": 308,
    "lines": "if (array == null) {\n            array = new Object[3];\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQLInvoked.java, /hsqldb/src/org/hsqldb/FunctionSQLInvoked.java",
  "id": 953,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferResultSet.java",
    "startLineNumber": 157,
    "lines": "if ((iMaxRowIdx <= 0) || (iMaxRowIdx < iRowIdx)) {\n            return 0;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferResultSet.java",
    "startLineNumber": 148,
    "lines": "if ((iMaxRowIdx <= 0) || (iMaxRowIdx < iRowIdx)) {\n            return 0;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferResultSet.java, /hsqldb/src/org/hsqldb/util/TransferResultSet.java",
  "id": 954,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1161,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 696,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1554,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 891,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1699,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 959,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 955,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 791,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 679,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1623,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 887,
    "lines": "((Long) data[LOB_IDS.LOB_LENGTH]).longValue()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 955,
  "numClones": 11,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 342,
    "lines": "if (count != i) {\n            moveRows(i, i + 1, count - i);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 285,
    "lines": "if (count != i) {\n            moveRows(i, i + 1, count - i);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java, /hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
  "id": 956,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 622,
    "lines": "(core.mainCols.length != 1\n                           || core.mainTable != core.refTable)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 617,
    "lines": "(core.mainCols.length != 1\n                           || core.mainTable != core.refTable)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Constraint.java, /hsqldb/src/org/hsqldb/Constraint.java",
  "id": 957,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java",
    "startLineNumber": 538,
    "lines": "{\n        privlog(Level.WARNING, message, t, 2, FrameworkLogger.class);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java",
    "startLineNumber": 578,
    "lines": "{\n        privlog(Level.WARNING, message, t, 2, FrameworkLogger.class);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java, /hsqldb/src/org/hsqldb/lib/FrameworkLogger.java",
  "id": 958,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 189,
    "lines": "java.util.Date start = new java.util.Date();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 205,
    "lines": "java.util.Date start = new java.util.Date();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/JDBCBench.java, /hsqldb/src/org/hsqldb/test/TestBench.java",
  "id": 959,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4695,
    "lines": "new Expression(OpTypes.ROW, new Expression[]{ e })"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4027,
    "lines": "new Expression(OpTypes.ROW, new Expression[]{ e })"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4587,
    "lines": "new Expression(OpTypes.ROW, new Expression[]{ e })"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java & more ...",
  "id": 960,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3965,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4292,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3\n            }, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 961,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 506,
    "lines": "if (token.tokenType == Tokens.MINUS) {\n            minus = true;\n\n            read();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 471,
    "lines": "if (token.tokenType == Tokens.MINUS) {\n            minus = true;\n\n            read();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserBase.java, /hsqldb/src/org/hsqldb/ParserBase.java",
  "id": 962,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1101,
    "lines": "String cmd      = lines[0].substring(0, closeCmd);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1009,
    "lines": "String cmd      = lines[0].substring(0, closeCmd);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUtil.java, /hsqldb/src/org/hsqldb/test/TestUtil.java",
  "id": 963,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 242,
    "lines": "try {\n            Object[] list = session.rowActionList.getArray();\n\n            mergeRolledBackTransaction(session, timestamp, list, start, limit);\n        } finally {\n            writeLock.unlock();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 298,
    "lines": "try {\n            Object[] list = session.rowActionList.getArray();\n\n            mergeRolledBackTransaction(session, timestamp, list, start, limit);\n        } finally {\n            writeLock.unlock();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 964,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 419,
    "lines": "otherData = otherRow == null ? null\n                                         : otherRow.getData();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 478,
    "lines": "otherData = otherRow == null ? null\n                                         : otherRow.getData();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
  "id": 965,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1145,
    "lines": "if (eoThirdLine > 0) {\n                            eoThirdLine = sqlScriptBuffer.indexOf('\\n',\n                                                                  eoThirdLine\n                                                                  + 1);\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 952,
    "lines": "if (eoThirdLine > 0) {\n                    eoThirdLine = sqlScriptBuffer.indexOf('\\n',\n                                                          eoThirdLine + 1);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 947,
    "lines": "if (eoThirdLine > 0) {\n                    eoThirdLine = sqlScriptBuffer.indexOf('\\n',\n                                                          eoThirdLine + 1);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1151,
    "lines": "if (eoThirdLine > 0) {\n                            eoThirdLine = sqlScriptBuffer.indexOf('\\n',\n                                                                  eoThirdLine\n                                                                  + 1);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java & more ...",
  "id": 966,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java",
    "startLineNumber": 452,
    "lines": "catch (Exception e) {\n                throw new RuntimeException(\n                    \"Logging failed when attempting to log: \" + message, e);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java",
    "startLineNumber": 422,
    "lines": "catch (Exception e) {\n                throw new RuntimeException(\n                    \"Logging failed when attempting to log: \" + message, e);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java, /hsqldb/src/org/hsqldb/lib/FrameworkLogger.java",
  "id": 967,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1789,
    "lines": "((Integer) data[LOBS.BLOCK_ADDR]).intValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 643,
    "lines": "((Integer) data[LOBS.BLOCK_ADDR]).intValue()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 968,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1754,
    "lines": "boolean value =\n                        ((Boolean) row[SessionInterface.INFO_BOOLEAN])\n                            .booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1745,
    "lines": "boolean value =\n                        ((Boolean) row[SessionInterface.INFO_BOOLEAN])\n                            .booleanValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 969,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionData.java",
    "startLineNumber": 369,
    "lines": "database.lobManager.adjustUsageCount(session,\n                                                     ((LobData) value).getId(),\n                                                     adjust);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionData.java",
    "startLineNumber": 339,
    "lines": "database.lobManager.adjustUsageCount(session,\n                                             ((LobData) value).getId(),\n                                             adjust);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SessionData.java, /hsqldb/src/org/hsqldb/SessionData.java",
  "id": 970,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 644,
    "lines": "long rate = ((long) bigrows * 1000) / (time + 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 682,
    "lines": "long rate = ((long) bigrows * 1000) / (time + 1);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java",
  "id": 971,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6331,
    "lines": "{\n            try {\n                if (isr != null) isr.close();\n            } catch (IOException ioe) {\n                // TODO: Throw appropriate exception\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6293,
    "lines": "{\n            try {\n                if (isr != null) isr.close();\n            } catch (IOException ioe) {\n                // TODO: Throw appropriate exception\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 972,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 157,
    "lines": "if (Stmts.bTransfer == false) {\n            tracer.trace(\"Table \" + Stmts.sSourceTable + \" not transfered\");\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 372,
    "lines": "if (Stmts.bTransfer == false) {\n            tracer.trace(\"Table \" + Stmts.sSourceTable + \" not transfered\");\n\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferTable.java, /hsqldb/src/org/hsqldb/util/TransferTable.java",
  "id": 973,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java",
    "startLineNumber": 265,
    "lines": "{\n\n        write('\\'');\n        writeBytes(type.convertToString(o));\n        write('\\'');\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java",
    "startLineNumber": 251,
    "lines": "{\n\n        write('\\'');\n        writeBytes(type.convertToString(o));\n        write('\\'');\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java",
    "startLineNumber": 258,
    "lines": "{\n\n        write('\\'');\n        writeBytes(type.convertToString(o));\n        write('\\'');\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java",
    "startLineNumber": 244,
    "lines": "{\n\n        write('\\'');\n        writeBytes(type.convertToString(o));\n        write('\\'');\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java",
    "startLineNumber": 272,
    "lines": "{\n\n        write('\\'');\n        writeBytes(type.convertToString(o));\n        write('\\'');\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java, /hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java & more ...",
  "id": 974,
  "numClones": 5,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1998,
    "lines": "if (other != null)\n                        throw new BadSpecial(\n                                SqltoolRB.special_b_malformat.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1989,
    "lines": "if (other != null)\n                        throw new BadSpecial(\n                                SqltoolRB.special_b_malformat.getString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 975,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3709,
    "lines": "row                             = t.getEmptyRowData();\n                row[object_catalog] = database.getCatalogName().name;\n                row[object_schema]              = routine.getSchemaName().name;\n                row[object_name]                = routine.getName().name;\n                row[object_type]                = \"ROUTINE\";\n                row[collection_type_identifier] = type.getDefinition();\n\n                addTypeInfo(row, ((ArrayType) type).collectionBaseType());\n\n                try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3740,
    "lines": "row                             = t.getEmptyRowData();\n                row[object_catalog] = database.getCatalogName().name;\n                row[object_schema]              = routine.getSchemaName().name;\n                row[object_name]                = routine.getName().name;\n                row[object_type]                = \"ROUTINE\";\n                row[collection_type_identifier] = type.getDefinition();\n\n                addTypeInfo(row, ((ArrayType) type).collectionBaseType());\n\n                try {\n                    t.insertSys(session, store, row);\n                } catch (HsqlException e) {}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 976,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Cache.java",
    "startLineNumber": 341,
    "lines": "if (savecount == rowTable.length) {\n                saveRows(savecount);\n\n                savecount = 0;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Cache.java",
    "startLineNumber": 277,
    "lines": "if (savecount == rowTable.length) {\n                saveRows(savecount);\n\n                savecount = 0;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Cache.java, /hsqldb/src/org/hsqldb/persist/Cache.java",
  "id": 977,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4450,
    "lines": "HsqlName[] writeLockNames =\n                        database.schemaManager.getCatalogAndBaseTableNames(\n                            domain.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4516,
    "lines": "HsqlName[] writeLockNames =\n                        database.schemaManager.getCatalogAndBaseTableNames(\n                            domain.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4471,
    "lines": "HsqlName[] writeLockNames =\n                        database.schemaManager.getCatalogAndBaseTableNames(\n                            domain.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4491,
    "lines": "HsqlName[] writeLockNames =\n                    database.schemaManager.getCatalogAndBaseTableNames(\n                        domain.getName());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 978,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 929,
    "lines": "{\n                    value = type.convertToType(session, value, e.dataType);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 951,
    "lines": "{\n                    value = type.convertToType(session, value, e.dataType);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 979,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 530,
    "lines": "if (!session.isTransaction) {\n                session.transactionTimestamp = session.actionTimestamp;\n                session.isTransaction        = true;\n\n                liveTransactionTimestamps.addLast(\n                    session.transactionTimestamp);\n\n                transactionCount++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 758,
    "lines": "if (!session.isTransaction) {\n                session.transactionTimestamp = session.actionTimestamp;\n                session.isTransaction        = true;\n\n                liveTransactionTimestamps.addLast(\n                    session.transactionTimestamp);\n\n                transactionCount++;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 980,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/TimeData.java",
    "startLineNumber": 49,
    "lines": "while (seconds < 0) {\n            seconds += 24 * 60 * 60;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 928,
    "lines": "while (seconds < 0) {\n            seconds += 24 * 60 * 60;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/TimeData.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 981,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7281,
    "lines": "Object[] rowData = getCurrent();\n        Type     sourceType;\n        Object   value;\n\n        checkColumn(columnIndex);\n\n        sourceType = resultMetaData.columnTypes[--columnIndex];\n        value      = rowData[columnIndex];\n\n        if (trackNull(value)) {\n            return null;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7572,
    "lines": "Object[] rowData = getCurrent();\n            Type     sourceType;\n            Object   value;\n\n            checkColumn(columnIndex);\n\n            sourceType = resultMetaData.columnTypes[--columnIndex];\n            value      = rowData[columnIndex];\n\n            if (trackNull(value)) {\n                return null;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 982,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 221,
    "lines": "{\n            table[i] = in.readData(meta.columnTypes);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 191,
    "lines": "{\n            table[i] = in.readData(meta.columnTypes);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
  "id": 983,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3248,
    "lines": "//\n        final int sequence_catalog           = 0;\n        final int sequence_schema            = 1;\n        final int sequence_name              = 2;\n        final int data_type                  = 3;\n        final int numeric_precision          = 4;\n        final int numeric_precision_radix    = 5;\n        final int numeric_scale              = 6;\n        final int maximum_value              = 7;\n        final int minimum_value              = 8;\n        final int increment                  = 9;\n        final int cycle_option               = 10;\n        final int declared_data_type         = 11;\n        final int declared_numeric_precision = 12;\n        final int declared_numeric_scale     = 13;\n        final int start_with                 = 14;\n        final int next_value                 = 15;\n\n        //\n        Iterator       it;\n        Object[]       row;\n        NumberSequence sequence;\n\n        it = database.schemaManager.databaseObjectIterator(\n            SchemaObject.SEQUENCE);\n\n        while (it.hasNext()) {\n            sequence = (NumberSequence) it.next();\n\n            if (!session.getGrantee().isAccessible(sequence)) {\n                continue;\n            }\n\n            row = t.getEmptyRowData();\n\n            NumberType type = (NumberType) sequence.getDataType();\n            int radix =\n                (type.typeCode == Types.SQL_NUMERIC || type.typeCode == Types\n                    .SQL_DECIMAL) ? 10\n                                  : 2;\n\n            row[sequence_catalog] = database.getCatalogName().name;\n            row[sequence_schema]  = sequence.getSchemaName().name;\n            row[sequence_name]    = sequence.getName().name;\n            row[data_type]        = sequence.getDataType().getFullNameString();\n            row[numeric_precision] =\n                ValuePool.getInt((int) type.getPrecision());\n            row[numeric_precision_radix]    = ValuePool.getInt(radix);\n            row[numeric_scale]              = ValuePool.INTEGER_0;\n            row[maximum_value] = String.valueOf(sequence.getMaxValue());\n            row[minimum_value] = String.valueOf(sequence.getMinValue());\n            row[increment] = String.valueOf(sequence.getIncrement());\n            row[cycle_option]               = sequence.isCycle() ? \"YES\"\n                                                                 : \"NO\";\n            row[declared_data_type]         = row[data_type];\n            row[declared_numeric_precision] = row[numeric_precision];\n            row[declared_numeric_scale]     = row[declared_numeric_scale];\n            row[start_with] = String.valueOf(sequence.getStartValue());\n            row[next_value]                 = String.valueOf(sequence.peek());\n\n            t.insertSys(session, store, row);\n        }\n\n        return t;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3143,
    "lines": "//\n        final int sequence_catalog           = 0;\n        final int sequence_schema            = 1;\n        final int sequence_name              = 2;\n        final int data_type                  = 3;\n        final int numeric_precision          = 4;\n        final int numeric_precision_radix    = 5;\n        final int numeric_scale              = 6;\n        final int maximum_value              = 7;\n        final int minimum_value              = 8;\n        final int increment                  = 9;\n        final int cycle_option               = 10;\n        final int declared_data_type         = 11;\n        final int declared_numeric_precision = 12;\n        final int declared_numeric_scale     = 13;\n        final int start_with                 = 14;\n        final int next_value                 = 15;\n\n        //\n        Iterator       it;\n        Object[]       row;\n        NumberSequence sequence;\n\n        it = database.schemaManager.databaseObjectIterator(\n            SchemaObject.SEQUENCE);\n\n        while (it.hasNext()) {\n            sequence = (NumberSequence) it.next();\n\n            if (!session.getGrantee().isAccessible(sequence)) {\n                continue;\n            }\n\n            row = t.getEmptyRowData();\n\n            NumberType type = (NumberType) sequence.getDataType();\n            int radix =\n                (type.typeCode == Types.SQL_NUMERIC || type.typeCode == Types\n                    .SQL_DECIMAL) ? 10\n                                  : 2;\n\n            row[sequence_catalog] = database.getCatalogName().name;\n            row[sequence_schema]  = sequence.getSchemaName().name;\n            row[sequence_name]    = sequence.getName().name;\n            row[data_type]        = sequence.getDataType().getFullNameString();\n            row[numeric_precision] =\n                ValuePool.getInt((int) type.getPrecision());\n            row[numeric_precision_radix]    = ValuePool.getInt(radix);\n            row[numeric_scale]              = ValuePool.INTEGER_0;\n            row[maximum_value] = String.valueOf(sequence.getMaxValue());\n            row[minimum_value] = String.valueOf(sequence.getMinValue());\n            row[increment] = String.valueOf(sequence.getIncrement());\n            row[cycle_option]               = sequence.isCycle() ? \"YES\"\n                                                                 : \"NO\";\n            row[declared_data_type]         = row[data_type];\n            row[declared_numeric_precision] = row[numeric_precision];\n            row[declared_numeric_scale]     = row[declared_numeric_scale];\n            row[start_with] = String.valueOf(sequence.getStartValue());\n            row[next_value]                 = String.valueOf(sequence.peek());\n\n            t.insertSys(session, store, row);\n        }\n\n        return t;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 984,
  "numClones": 2,
  "cloneSize": 53
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 348,
    "lines": "/**\n     * Retrieves a result set that contains the elements of the SQL\n     * <code>ARRAY</code> value designated by this <code>Array</code> object.\n     * This method uses\n     * the specified <code>map</code> for type map customizations\n     * unless the base type of the array does not match a user-defined\n     * type in <code>map</code>, in which case it\n     * uses the standard mapping. This version of the method\n     * <code>getResultSet</code> uses either the given type map or the standard mapping;\n     * it never uses the type map associated with the connection.\n     * <p>\n     * The result set contains one row for each array element, with\n     * two columns in each row.  The second column stores the element\n     * value; the first column stores the index into the array for\n     * that element (with the first array element being at index 1).\n     * The rows are in ascending order corresponding to\n     * the order of the indices.\n     *\n     * @param map contains the mapping of SQL user-defined types to\n     * classes in the Java programming language\n     * @return a <code>ResultSet</code> object containing one row for each\n     * of the elements in the array designated by this <code>Array</code>\n     * object, with the rows in ascending order based on the indices.\n     * @exception SQLException if an error occurs while attempting to\n     * access the array\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.2\n     */\n    public ResultSet getResultSet(java.util.Map<String,\n            Class<?>> map) throws SQLException {\n        return getResultSet();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 360,
    "lines": "/**\n     * Retrieves a result set that contains the elements of the SQL\n     * <code>ARRAY</code> value designated by this <code>Array</code> object.\n     * This method uses\n     * the specified <code>map</code> for type map customizations\n     * unless the base type of the array does not match a user-defined\n     * type in <code>map</code>, in which case it\n     * uses the standard mapping. This version of the method\n     * <code>getResultSet</code> uses either the given type map or the standard mapping;\n     * it never uses the type map associated with the connection.\n     * <p>\n     * The result set contains one row for each array element, with\n     * two columns in each row.  The second column stores the element\n     * value; the first column stores the index into the array for\n     * that element (with the first array element being at index 1).\n     * The rows are in ascending order corresponding to\n     * the order of the indices.\n     *\n     * @param map contains the mapping of SQL user-defined types to\n     * classes in the Java programming language\n     * @return a <code>ResultSet</code> object containing one row for each\n     * of the elements in the array designated by this <code>Array</code>\n     * object, with the rows in ascending order based on the indices.\n     * @exception SQLException if an error occurs while attempting to\n     * access the array\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.2\n     */\n    public ResultSet getResultSet(java.util.Map<String,\n            Class<?>> map) throws SQLException {\n        return getResultSet();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
  "id": 985,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 573,
    "lines": "return o == null ? 0\n                         : ((Number) o).shortValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 506,
    "lines": "return o == null ? 0\n                         : ((Number) o).shortValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
  "id": 986,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDateTime.java",
    "startLineNumber": 177,
    "lines": "iUpdateCount = insertStatement.executeUpdate();\n\n        insertStatement.close();\n        Assert.assertEquals(\n            \"Exactly one record with time data shoud have been inserted.\",\n            iUpdateCount, 1);\n\n        // Now select it back to be sure it is there\n        PreparedStatement selectStatement = null;\n        PreparedStatement deleteStatement = null;\n        ResultSet         results         = null;\n        java.sql.Time     retrievedTime;\n        int               iDeletedCount = 0;\n        java.sql.Time     selectTime;\n\n        selectStatement = connection.prepareStatement(SELECT_TIME);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDateTime.java",
    "startLineNumber": 272,
    "lines": "iUpdateCount = insertStatement.executeUpdate();\n\n        insertStatement.close();\n        Assert.assertEquals(\n            \"Exactly one record with time data shoud have been inserted.\",\n            iUpdateCount, 1);\n\n        // Now select it back to be sure it is there\n        PreparedStatement selectStatement = null;\n        PreparedStatement deleteStatement = null;\n        ResultSet         results         = null;\n        java.sql.Time     retrievedTime;\n        int               iDeletedCount = 0;\n        java.sql.Time     selectTime;\n\n        selectStatement = connection.prepareStatement(SELECT_TIME);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDateTime.java, /hsqldb/src/org/hsqldb/test/TestDateTime.java",
  "id": 987,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 728,
    "lines": "meta != null\n                    && ((Integer) meta[HsqlProperties.indexType]).intValue()\n                       == SQL_PROPERTY"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 702,
    "lines": "meta != null\n                    && ((Integer) meta[HsqlProperties.indexType]).intValue()\n                       == SQL_PROPERTY"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
  "id": 988,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 614,
    "lines": "{\n            read();\n            readThis(Tokens.EXISTS);\n\n            ifExists = true;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 588,
    "lines": "{\n                        read();\n                        readThis(Tokens.EXISTS);\n\n                        ifExists = true;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 989,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1072,
    "lines": "if (generatedNavigator != null) {\n                Object[] generatedValues = getGeneratedColumns(data);\n\n                generatedNavigator.add(generatedValues);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 839,
    "lines": "if (generatedNavigator != null) {\n                Object[] generatedValues = getGeneratedColumns(data);\n\n                generatedNavigator.add(generatedValues);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 990,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3285,
    "lines": "type.typeCode == Types.SQL_NUMERIC || type.typeCode == Types\n                    .SQL_DECIMAL"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3180,
    "lines": "type.typeCode == Types.SQL_NUMERIC || type.typeCode == Types\n                    .SQL_DECIMAL"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2623,
    "lines": "type.typeCode == Types.SQL_NUMERIC\n                || type.typeCode == Types.SQL_DECIMAL"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java & more ...",
  "id": 991,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 288,
    "lines": "rs = ps.executeQuery();\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(5, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"five\", rs.getString(3));\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(10, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"ten\", rs.getString(3));\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(15, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"fifteen\", rs.getString(3));\n\n            assertTrue(\"Not enough rows fetched\", rs.next());\n            assertEquals(3, rs.getInt(2));\n            assertEquals(25, rs.getInt(1));\n            assertNull(rs.getString(3));\n            assertEquals(\"str\", rs.getString(4));\n\n            assertTrue(\"Not enough rows fetched\", rs.next());\n            assertEquals(3, rs.getInt(2));\n            assertEquals(40, rs.getInt(1));\n            assertEquals(\"forty\", rs.getString(3));\n            assertEquals(\"str\", rs.getString(4));\n\n            assertFalse(\"Too many rows fetched\", rs.next());\n            rs.close();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 288,
    "lines": "rs = ps.executeQuery();\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(5, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"five\", rs.getString(3));\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(10, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"ten\", rs.getString(3));\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(15, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"fifteen\", rs.getString(3));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 113,
    "lines": "rs = ps.executeQuery();\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(5, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"five\", rs.getString(3));\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(10, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"ten\", rs.getString(3));\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(15, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"fifteen\", rs.getString(3));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 253,
    "lines": "rs = ps.executeQuery();\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(5, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"five\", rs.getString(3));\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(10, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"ten\", rs.getString(3));\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(15, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"fifteen\", rs.getString(3));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java",
    "startLineNumber": 253,
    "lines": "rs = ps.executeQuery();\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(5, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"five\", rs.getString(3));\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(10, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"ten\", rs.getString(3));\n\n            assertTrue(\"No rows fetched\", rs.next());\n            assertEquals(\"str\", rs.getString(4));\n            assertEquals(15, rs.getInt(1));\n            assertEquals(3, rs.getInt(2));\n            assertEquals(\"fifteen\", rs.getString(3));\n\n            assertTrue(\"Not enough rows fetched\", rs.next());\n            assertEquals(3, rs.getInt(2));\n            assertEquals(25, rs.getInt(1));\n            assertNull(rs.getString(3));\n            assertEquals(\"str\", rs.getString(4));\n\n            assertTrue(\"Not enough rows fetched\", rs.next());\n            assertEquals(3, rs.getInt(2));\n            assertEquals(40, rs.getInt(1));\n            assertEquals(\"forty\", rs.getString(3));\n            assertEquals(\"str\", rs.getString(4));\n\n            assertFalse(\"Too many rows fetched\", rs.next());\n            rs.close();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcService.java, /hsqldb/src/org/hsqldb/test/TestOdbcService.java & more ...",
  "id": 992,
  "numClones": 5,
  "cloneSize": 28
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RoutineSchema.java",
    "startLineNumber": 318,
    "lines": "types[j].precedenceDegree(routines[i].parameterTypes[j])"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RoutineSchema.java",
    "startLineNumber": 287,
    "lines": "types[j].precedenceDegree(routines[i].parameterTypes[j])"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RoutineSchema.java, /hsqldb/src/org/hsqldb/RoutineSchema.java",
  "id": 993,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1583,
    "lines": "if (value.length == 1) {\n                    return ((Object[]) value)[0];\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionTable.java",
    "startLineNumber": 191,
    "lines": "if (value.length == 1) {\n                    return ((Object[]) value)[0];\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/ExpressionTable.java",
  "id": 994,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java",
    "startLineNumber": 55,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return longValueTable[lookup];\n        }\n\n        throw new NoSuchElementException();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
    "startLineNumber": 65,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return longValueTable[lookup];\n        }\n\n        throw new NoSuchElementException();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java, /hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
  "id": 995,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1355,
    "lines": "if (c.isNotNull()) {\n                        ColumnSchema column =\n                            table.getColumn(c.notNullColumnIndex);\n\n                        column.setNullable(false);\n                        table.setColumnTypeVars(c.notNullColumnIndex);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 707,
    "lines": "if (c.isNotNull()) {\n            ColumnSchema column = table.getColumn(c.notNullColumnIndex);\n\n            column.setNullable(false);\n            table.setColumnTypeVars(c.notNullColumnIndex);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 996,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java",
    "startLineNumber": 90,
    "lines": "public boolean put(int key, int value) {\n\n        int oldSize = size();\n\n        super.addOrRemove(key, value, null, null, false);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 93,
    "lines": "public boolean put(int key, int value) {\n\n        int oldSize = size();\n\n        super.addOrRemove(key, value, null, null, false);\n\n        return oldSize != size();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java, /hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
  "id": 997,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 630,
    "lines": "if (WTextRead != null) {\n            try {\n                WTextRead.close();\n\n                WTextRead = null;\n            } catch (IOException e) {}\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 687,
    "lines": "if (WTextRead != null) {\n            try {\n                WTextRead.close();\n\n                WTextRead = null;\n            } catch (IOException e) {}\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 656,
    "lines": "if (WTextRead != null) {\n                try {\n                    WTextRead.close();\n\n                    WTextRead = null;\n                } catch (IOException e) {}\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java, /hsqldb/src/org/hsqldb/util/TransferSQLText.java & more ...",
  "id": 998,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 240,
    "lines": "{\n                synchronized (this) {\n                    baseElementCount = count;\n                    searchCost       = null;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 201,
    "lines": "{\n            synchronized (this) {\n                baseElementCount = count;\n                searchCost       = null;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
  "id": 999,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 974,
    "lines": "if (data[1] == null || data[2] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 949,
    "lines": "if (data[1] == null || data[2] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1036,
    "lines": "if (data[1] == null || data[2] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1069,
    "lines": "if (data[1] == null || data[2] == null) {\n                    return null;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 1000,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 124,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    n_txn_per_client = Integer.parseInt(Args[i]);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 124,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    n_txn_per_client = Integer.parseInt(Args[i]);\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 1001,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java",
    "startLineNumber": 56,
    "lines": "public Object get(int key) {\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return objectValueTable[lookup];\n        }\n\n        return null;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java",
    "startLineNumber": 60,
    "lines": "public Object get(int key) {\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return objectValueTable[lookup];\n        }\n\n        return null;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java, /hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java",
  "id": 1002,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputBase.java",
    "startLineNumber": 290,
    "lines": "if (buffer.length < rowsize) {\n            buffer = new byte[rowsize];\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputBase.java",
    "startLineNumber": 314,
    "lines": "if (buffer.length < rowsize) {\n            buffer = new byte[rowsize];\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowInputBase.java, /hsqldb/src/org/hsqldb/rowio/RowInputBase.java",
  "id": 1003,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 788,
    "lines": "{\n            resultOut.setUpdateCount(count);\n\n            if (count == 0) {\n                session.addWarning(HsqlException.noDataCondition);\n            }\n\n            return resultOut;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 562,
    "lines": "{\n            resultOut.setUpdateCount(count);\n\n            if (count == 0) {\n                session.addWarning(HsqlException.noDataCondition);\n            }\n\n            return resultOut;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 1004,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1110,
    "lines": "Table table = new Table(database, name, TableBase.TEMP_TABLE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 892,
    "lines": "Table table = new Table(database, name, TableBase.TEMP_TABLE);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1005,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 244,
    "lines": "System.getProperties().put(\"sun.java2d.noddraw\", \"true\");\n\n        // (ulrivo): read all arguments from the command line\n        String  currentArg;\n        String  lowerArg;\n        String  urlid        = null;\n        String  rcFile       = null;\n        boolean autoConnect  = false;\n        boolean urlidConnect = false;\n\n        bMustExit = true;\n\n        for (int i = 0; i < arg.length; i++) {\n            currentArg = arg[i];\n            lowerArg   = arg[i].toLowerCase();\n\n            if (lowerArg.startsWith(\"--\")) {\n                lowerArg = lowerArg.substring(1);\n            }\n\n            if (lowerArg.equals(\"-noexit\") || lowerArg.equals(\"-help\")) {\n\n                //\n            } else if (i == arg.length - 1) {\n                throw new IllegalArgumentException(\"No value for argument \"\n                                                   + currentArg);\n            }\n\n            i++;\n\n            if (lowerArg.equals(\"-driver\")) {\n                defDriver   = arg[i];\n                autoConnect = true;\n            } else if (lowerArg.equals(\"-url\")) {\n                defURL      = arg[i];\n                autoConnect = true;\n            } else if (lowerArg.equals(\"-user\")) {\n                defUser     = arg[i];\n                autoConnect = true;\n            } else if (lowerArg.equals(\"-password\")) {\n                defPassword = arg[i];\n                autoConnect = true;\n            } else if (lowerArg.equals(\"-urlid\")) {\n                urlid        = arg[i];\n                urlidConnect = true;\n            } else if (lowerArg.equals(\"-rcfile\")) {\n                rcFile       = arg[i];\n                urlidConnect = true;\n            } else if (lowerArg.equals(\"-dir\")) {\n                defDirectory = arg[i];\n            } else if (lowerArg.equals(\"-script\")) {\n                defScript = arg[i];\n            } else if (lowerArg.equals(\"-noexit\")) {\n                bMustExit = false;\n\n                i--;\n            } else if (lowerArg.equals(\"-help\")) {\n                showUsage();\n\n                return;\n            } else {\n                /* Syntax ERRORS should either throw or exit with non-0 status.\n                 * In our case, it may be unsafe to exit, so we throw.\n                 * (I.e. should provide easy way for caller to programmatically\n                 * determine that there was an invocation problem).\n                 */\n                throw new IllegalArgumentException(\n                    \"invalid argrument \" + currentArg + \" try:  java... \"\n                    + DatabaseManagerSwing.class.getName() + \" --help\");\n\n                // No reason to localize, since the main syntax message is\n                // not localized.\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 466,
    "lines": "System.getProperties().put(\"sun.java2d.noddraw\", \"true\");\n\n        // (ulrivo): read all arguments from the command line\n        String  currentArg;\n        String  lowerArg;\n        String  urlid        = null;\n        String  rcFile       = null;\n        boolean autoConnect  = false;\n        boolean urlidConnect = false;\n\n        bMustExit = true;\n\n        for (int i = 0; i < arg.length; i++) {\n            currentArg = arg[i];\n            lowerArg = arg[i].toLowerCase();\n\n            if (lowerArg.startsWith(\"--\")) {\n                lowerArg = lowerArg.substring(1);\n            }\n\n            if (lowerArg.equals(\"-noexit\") || lowerArg.equals(\"-help\")) {\n\n                //\n            } else if (i == arg.length - 1) {\n                throw new IllegalArgumentException(\"No value for argument \"\n                                                   + currentArg);\n            }\n\n            i++;\n\n            if (lowerArg.equals(\"-driver\")) {\n                defDriver   = arg[i];\n                autoConnect = true;\n            } else if (lowerArg.equals(\"-url\")) {\n                defURL      = arg[i];\n                autoConnect = true;\n            } else if (lowerArg.equals(\"-user\")) {\n                defUser     = arg[i];\n                autoConnect = true;\n            } else if (lowerArg.equals(\"-password\")) {\n                defPassword = arg[i];\n                autoConnect = true;\n            } else if (lowerArg.equals(\"-urlid\")) {\n                urlid        = arg[i];\n                urlidConnect = true;\n            } else if (lowerArg.equals(\"-rcfile\")) {\n                rcFile       = arg[i];\n                urlidConnect = true;\n            } else if (lowerArg.equals(\"-dir\")) {\n                defDirectory = arg[i];\n            } else if (lowerArg.equals(\"-script\")) {\n                defScript = arg[i];\n            } else if (lowerArg.equals(\"-noexit\")) {\n                bMustExit = false;\n\n                i--;\n            } else if (lowerArg.equals(\"-help\")) {\n                showUsage();\n\n                return;\n            } else {\n                /* Syntax ERRORS should either throw or exit with non-0 status.\n                 * In our case, it may be unsafe to exit, so we throw.\n                 * (I.e. should provide easy way for caller to programmatically\n                 * determine that there was an invocation problem).\n                 */\n                throw new IllegalArgumentException(\n                    \"invalid argrument \" + currentArg + \" try:  java... \"\n                    + DatabaseManagerSwing.class.getName() + \" --help\");\n\n                // No reason to localize, since the main syntax message is\n                // not localized.\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1006,
  "numClones": 2,
  "cloneSize": 54
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1059,
    "lines": "if (token.tokenType == Tokens.ON) {\n            if (!table.isTemp()) {\n                throw unexpectedToken();\n            }\n\n            read();\n            readThis(Tokens.COMMIT);\n\n            if (token.tokenType == Tokens.DELETE) {}\n            else if (token.tokenType == Tokens.PRESERVE) {\n                table.persistenceScope = TableBase.SCOPE_SESSION;\n            }\n\n            read();\n            readThis(Tokens.ROWS);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1225,
    "lines": "if (token.tokenType == Tokens.ON) {\n            if (!table.isTemp()) {\n                throw unexpectedToken();\n            }\n\n            read();\n            readThis(Tokens.COMMIT);\n\n            if (token.tokenType == Tokens.DELETE) {}\n            else if (token.tokenType == Tokens.PRESERVE) {\n                table.persistenceScope = TableBase.SCOPE_SESSION;\n            }\n\n            read();\n            readThis(Tokens.ROWS);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1007,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 960,
    "lines": "cs == null\n                        || cs.compileTimestamp\n                           < database.schemaManager.schemaChangeTimestamp"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1413,
    "lines": "cs == null\n                || cs.compileTimestamp\n                   < database.schemaManager.schemaChangeTimestamp"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 1008,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCXAResource.java",
    "startLineNumber": 317,
    "lines": "if (resource == null) {\n            throw new XAException(\"The XADataSource has no such Xid:  \" + xid);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCXAResource.java",
    "startLineNumber": 171,
    "lines": "if (resource == null) {\n            throw new XAException(\"The XADataSource has no such Xid:  \" + xid);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCXAResource.java, /hsqldb/src/org/hsqldb/jdbc/pool/JDBCXAResource.java",
  "id": 1009,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobDataID.java",
    "startLineNumber": 131,
    "lines": "public long length(SessionInterface session) {\n\n        if (length > -1) {\n            return length;\n        }\n\n        ResultLob resultOut = ResultLob.newLobGetLengthRequest(id);\n        Result    resultIn  = session.execute(resultOut);\n\n        if (resultIn.isError()) {\n            throw resultIn.getException();\n        }\n\n        length = ((ResultLob) resultIn).getBlockLength();\n\n        return length;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobDataID.java",
    "startLineNumber": 72,
    "lines": "public long length(SessionInterface session) {\n\n        if (length > -1) {\n            return length;\n        }\n\n        ResultLob resultOut = ResultLob.newLobGetLengthRequest(id);\n        Result    resultIn  = session.execute(resultOut);\n\n        if (resultIn.isError()) {\n            throw resultIn.getException();\n        }\n\n        length = ((ResultLob) resultIn).getBlockLength();\n\n        return length;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobDataID.java, /hsqldb/src/org/hsqldb/types/ClobDataID.java",
  "id": 1010,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 588,
    "lines": "check &= param.getParameterMode()\n                     == SchemaObject.ParameterModes.PARAM_IN;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 585,
    "lines": "check &= param.getParameterMode()\n                     == SchemaObject.ParameterModes.PARAM_IN;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 1011,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1543,
    "lines": "Object[] row = new Object[nodes.length];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 278,
    "lines": "Object[] row = new Object[nodes.length];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
  "id": 1012,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1370,
    "lines": "return result == 0 ? Boolean.TRUE\n                                   : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1451,
    "lines": "return result == 0 ? Boolean.TRUE\n                                   : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1460,
    "lines": "return result == 0 ? Boolean.TRUE\n                                   : Boolean.FALSE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java & more ...",
  "id": 1013,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7751,
    "lines": "if (!grants.isEmpty()) {\n                    grants.addAll(rights);\n\n                    rights = grants;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5242,
    "lines": "if (!grants.isEmpty()) {\n                    grants.addAll(rights);\n\n                    rights = grants;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7557,
    "lines": "if (!grants.isEmpty()) {\n                    grants.addAll(rights);\n\n                    rights = grants;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3410,
    "lines": "if (!grants.isEmpty()) {\n                    grants.addAll(rights);\n\n                    rights = grants;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2986,
    "lines": "if (!grants.isEmpty()) {\n                    grants.addAll(rights);\n\n                    rights = grants;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1014,
  "numClones": 5,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 906,
    "lines": "{\n        return countSameElements(arra, start, arrb) == arrb.length;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 873,
    "lines": "{\n        return countSameElements(arra, start, arrb) == arrb.length;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
  "id": 1015,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 118,
    "lines": "{\n    int i = 0;       /* index in packed string  */\n    int j = offset;  /* index in unpacked array */\n    int l = packed.length();\n    while (i < l) {\n      int count = packed.charAt(i++);\n      int value = packed.charAt(i++);\n      do result[j++] = value; while (--count > 0);\n    }\n    return j;\n  }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 267,
    "lines": "{\n    int i = 0;       /* index in packed string  */\n    int j = offset;  /* index in unpacked array */\n    int l = packed.length();\n    while (i < l) {\n      int count = packed.charAt(i++);\n      int value = packed.charAt(i++);\n      do result[j++] = value; while (--count > 0);\n    }\n    return j;\n  }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java, /hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
  "id": 1016,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSql.java",
    "startLineNumber": 180,
    "lines": "for (; rs.next(); ) {\n                    for (int i = 0; i < rsmd.getColumnCount(); i++) {\n                        result0 += rs.getString(i + 1) + \":\";\n                    }\n\n                    result0 += \"\\n\";\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSql.java",
    "startLineNumber": 160,
    "lines": "for (; rs.next(); ) {\n                    for (int i = 0; i < rsmd.getColumnCount(); i++) {\n                        result0 += rs.getString(i + 1) + \":\";\n                    }\n\n                    result0 += \"\\n\";\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSql.java, /hsqldb/src/org/hsqldb/test/TestSql.java",
  "id": 1017,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BooleanType.java",
    "startLineNumber": 267,
    "lines": "return ((Boolean) a).booleanValue() ? Tokens.T_TRUE\n                                            : Tokens.T_FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BooleanType.java",
    "startLineNumber": 277,
    "lines": "return ((Boolean) a).booleanValue() ? Tokens.T_TRUE\n                                            : Tokens.T_FALSE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BooleanType.java, /hsqldb/src/org/hsqldb/types/BooleanType.java",
  "id": 1018,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2109,
    "lines": "double value = ((Number) data[0]).doubleValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2081,
    "lines": "double value = ((Number) data[0]).doubleValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1019,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/auth/LdapAuthBean.java",
    "startLineNumber": 240,
    "lines": "/**\n     * Assign a pattern to both detect honored values, and to map from a single\n     * value of \"rolesSchemaAttribute\"s to a HyperSQL role or schema string.\n     * If your rolesSchemaAttribute holds only the String values precisely as\n     * HyperSQL needs them, then don't use this method at all and all matching\n     * attribute values will be passed directly.\n     * </P><P>\n     * You may only use this property if you have set property\n     * rolesSchemaAttribute.\n     * If rolesSchemaAttribute is set but this property is not set, then\n     * the value will directly determine the user's roles and schema.\n     * </P><P>\n     * <B>Unlike the rolesSchemaAttribute, the property at-hand uses the\n     * singular for \"role\", because whereas rolesSchemaAttribute is the\n     * attribute for listing multiple roles, roleSchemaValuePattern is used\n     * to evaluate single role values.</B>\n     * </P><P>\n     * These are two distinct and important purposes for the specified Pattern.\n     * <OL>\n     *   <LI>\n     *      Values that do not successfully match the pattern will be ignored.\n     *   <LI>\n     *      Optionally uses parentheses to specify a single capture group\n     *      (if you use parentheses to specify more than one matching group, we\n     *      will only capture for the first).\n     *      What is captured by this group is exactly the role or schema that\n     *      HyperSQL will attempt to assign.\n     *      If no capture parens are given then the Pattern is only used for the\n     *      acceptance decision, and the LDAP-provided value will be returned\n     *      verbatim.\n     * </OL>\n     * </P><P>\n     * Together, these two features work great to extract just the needed role\n     * and schema names from 'memberof' DNs, and will have no problem if you\n     * also use 'memberof' for unrelated purposes.\n     * </P><P>\n     * N.b. this Pattern will be used for the matches() operation, therefore it\n     * must match the entire candidate value strings (this is different than\n     * the find operation which does not need to satisfy the entire candidate\n     * value).\n     * </P><P>Example1 :<CODE><PRE>\n     *     cn=([^,]+),ou=dbRole,dc=admc,dc=com\n     * </PRE></CODE>\n     *     will extract the CN value from matching attribute values.\n     * </P><P>Example1 :<CODE><PRE>\n     *     cn=[^,]+,ou=dbRole,dc=admc,dc=com\n     * </PRE></CODE>\n     *     will return the entire <CODE>cn...com</CODE> string for matching\n     *     attribute values.\n     * </P>\n     *\n     * @see Matcher#matches()\n     */\n    public void setRoleSchemaValuePattern(Pattern roleSchemaValuePattern) {\n        this.roleSchemaValuePattern = roleSchemaValuePattern;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/auth/JaasAuthBean.java",
    "startLineNumber": 132,
    "lines": "/**\n     * Assign a pattern to both detect honored values, and optionally\n     * to map from a single principal name or public credential string\n     * to a single HyperSQL role or schema string.\n     * Do not use this method if you are using this JaasAuthBean only to\n     * permit or reject access (with roles and schema being determined by\n     * pre-existing local HyperSQL accounts).\n     * On that case, simple success of the login() method method will allow\n     * access as the specified user.\n     * <P>\n     * If every principal name or public credentials holds only the String\n     * values precisely as HyperSQL needs them, then set the pattern to \".+\".\n     * For example, if the JAAS module returns principals (or credentials) with\n     * values \"one\", \"two\", \"three\", then if you set this pattern to \".+\",\n     * HyperSQL will attempt to assign initial schema and roles for the values\n     * \"one\", \"two\", and \"three\".\n     * </P><P>\n     * These are two distinct and important purposes for the specified Pattern.\n     * <OL>\n     *   <LI>\n     *      Values that do not successfully match the pattern will be ignored.\n     *      If the pattern does match, then the entire principal or credential\n     *      value will be used to assign initial schema or role (as long as it\n     *      is a valid schema name or role name in the local database).\n     *   <LI>\n     *      Optionally uses parentheses to specify a single capture group\n     *      (if you use parentheses to specify more than one matching group, we\n     *      will only capture for the first).\n     *      What is captured by this group is exactly the role or schema that\n     *      HyperSQL will attempt to assign.\n     *      If no capture parens are given then the Pattern is only used for the\n     *      acceptance decision, and the JAAS-provided value will be returned\n     *      verbatim.\n     * </OL>\n     * </P><P>\n     * N.b. this Pattern will be used for the matches() operation, therefore it\n     * must match the entire candidate value strings (this is different than\n     * the find operation which does not need to satisfy the entire candidate\n     * value).\n     * </P><P>Example1 :<CODE><PRE>\n     *     cn=([^,]+),ou=dbRole,dc=admc,dc=com\n     * </PRE></CODE>\n     *     will extract the CN value from matching attribute values.\n     * </P><P>Example1 :<CODE><PRE>\n     *     cn=[^,]+,ou=dbRole,dc=admc,dc=com\n     * </PRE></CODE>\n     *     will return the entire <CODE>cn...com</CODE> string for matching\n     *     attribute values.\n     * </P>\n     *\n     * @see Matcher#matches()\n     */\n    public void setRoleSchemaValuePattern(Pattern roleSchemaValuePattern) {\n        this.roleSchemaValuePattern = roleSchemaValuePattern;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/auth/LdapAuthBean.java, /hsqldb/src/org/hsqldb/auth/JaasAuthBean.java",
  "id": 1020,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 310,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 240,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 284,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 266,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 197,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 253,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 263,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 219,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 219,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 175,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 241,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 297,
    "lines": "row  = (RowAVLDisk) store.get(this.row, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java & more ...",
  "id": 1021,
  "numClones": 12,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1230,
    "lines": "{\n                    throw Error.error(ErrorCode.X_42574,\n                                      ((Expression) tempSet.get(0)).getSQL());\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1220,
    "lines": "{\n                throw Error.error(ErrorCode.X_42574,\n                                  ((Expression) tempSet.get(0)).getSQL());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QuerySpecification.java, /hsqldb/src/org/hsqldb/QuerySpecification.java",
  "id": 1022,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/auth/JaasAuthBean.java",
    "startLineNumber": 283,
    "lines": "(m.groupCount() > 0) ? m.group(1) : candid"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/auth/JaasAuthBean.java",
    "startLineNumber": 284,
    "lines": "(m.groupCount() > 0) ? m.group(1) : candid"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/auth/JaasAuthBean.java, /hsqldb/src/org/hsqldb/auth/JaasAuthBean.java",
  "id": 1023,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1132,
    "lines": "lines.length == 1 && lines[0].trim().length() < 1"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1046,
    "lines": "lines.length == 1 && lines[0].trim().length() < 1"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1354,
    "lines": "lines.length == 1 && lines[0].trim().length() < 1"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUtil.java, /hsqldb/src/org/hsqldb/test/TestUtil.java & more ...",
  "id": 1024,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 204,
    "lines": "if (columnMap == null) {\n                data = (Object[]) ArrayUtil.resizeArrayIfDifferent(data,\n                        visibleColumnCount);\n            } else {\n                Object[] newData = new Object[visibleColumnCount];\n\n                ArrayUtil.projectRow(data, columnMap, newData);\n\n                data = newData;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 199,
    "lines": "if (columnMap == null) {\n            data = (Object[]) ArrayUtil.resizeArrayIfDifferent(data,\n                    visibleColumnCount);\n        } else {\n            Object[] newData = new Object[visibleColumnCount];\n\n            ArrayUtil.projectRow(data, columnMap, newData);\n\n            data = newData;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
  "id": 1025,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java",
    "startLineNumber": 353,
    "lines": "if (conn.clientProperties != null) {\n            translateTTIType = conn.clientProperties.isPropertyTrue(\n                HsqlDatabaseProperties.jdbc_translate_tti_types);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7526,
    "lines": "if (conn.clientProperties != null) {\n                translateTTIType = conn.clientProperties.isPropertyTrue(\n                    HsqlDatabaseProperties.jdbc_translate_tti_types);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 925,
    "lines": "if (conn.clientProperties != null) {\n            translateTTIType = conn.clientProperties.isPropertyTrue(\n                HsqlDatabaseProperties.jdbc_translate_tti_types);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCParameterMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java & more ...",
  "id": 1026,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1922,
    "lines": "statement = new StatementExpression(session, compileContext,\n                                                StatementTypes.CONDITION, e);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1939,
    "lines": "statement = new StatementExpression(session, compileContext,\n                                                StatementTypes.CONDITION, e);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java",
  "id": 1027,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1203,
    "lines": "return ((NumberType) dataType).negate(\n                    nodes[LEFT].getValue(session, nodes[LEFT].dataType));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 624,
    "lines": "return ((NumberType) dataType).negate(\n                    nodes[LEFT].getValue(session, nodes[LEFT].dataType));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
  "id": 1028,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 250,
    "lines": "if (source == null || pattern == null || pattern.length == 0) {\n            return -1;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 323,
    "lines": "if (source == null || pattern == null || pattern.length == 0) {\n            return -1;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java, /hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
  "id": 1029,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 585,
    "lines": "core.mainCols.length == 1\n                       && core.mainCols[0] == colIndex"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 589,
    "lines": "core.mainCols.length == 1\n                       && core.mainCols[0] == colIndex"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Constraint.java, /hsqldb/src/org/hsqldb/Constraint.java",
  "id": 1030,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 111,
    "lines": "nodes.length > 1 ? nodes[RIGHT]\n                                                      : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 870,
    "lines": "nodes.length > 1 ? nodes[RIGHT]\n                                : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 192,
    "lines": "nodes.length > 1 ? nodes[RIGHT]\n                                                            : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 369,
    "lines": "nodes.length > 1 ? nodes[RIGHT]\n                                                      : null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/Expression.java & more ...",
  "id": 1031,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1371,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = nodes[1].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1397,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = nodes[1].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2831,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = nodes[1].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2247,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = nodes[1].dataType;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 1032,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlToolSprayer.java",
    "startLineNumber": 68,
    "lines": "static {\n        if (!LS.equals(\"\\n\")) {\n            SYNTAX_MSG = SYNTAX_MSG.replaceAll(\"\\n\", LS);\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/MainInvoker.java",
    "startLineNumber": 119,
    "lines": "static {\n        if (!LS.equals(\"\\n\")) {\n            SYNTAX_MSG = SYNTAX_MSG.replaceAll(\"\\n\", LS);\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlToolSprayer.java, /hsqldb/src/org/hsqldb/util/MainInvoker.java",
  "id": 1033,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2385,
    "lines": "row[table_schema]   = tableName.schema.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2503,
    "lines": "row[table_schema]  = tableName.schema.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4123,
    "lines": "row[table_schema]       = tableName.schema.name;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1034,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementProcedure.java",
    "startLineNumber": 378,
    "lines": "for (int i = 0; i < subqueries.length; i++) {\n                if (subqueries[i].queryExpression != null) {\n                    subqueries[i].queryExpression.getBaseTableNames(set);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSet.java",
    "startLineNumber": 344,
    "lines": "for (int i = 0; i < subqueries.length; i++) {\n            if (subqueries[i].queryExpression != null) {\n                subqueries[i].queryExpression.getBaseTableNames(set);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementExpression.java",
    "startLineNumber": 185,
    "lines": "for (int i = 0; i < subqueries.length; i++) {\n            if (subqueries[i].queryExpression != null) {\n                subqueries[i].queryExpression.getBaseTableNames(set);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementQuery.java",
    "startLineNumber": 94,
    "lines": "for (int i = 0; i < subqueries.length; i++) {\n            if (subqueries[i].queryExpression != null) {\n                subqueries[i].queryExpression.getBaseTableNames(set);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 294,
    "lines": "for (int i = 0; i < subqueries.length; i++) {\n            if (subqueries[i].queryExpression != null) {\n                subqueries[i].queryExpression.getBaseTableNames(set);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementProcedure.java, /hsqldb/src/org/hsqldb/StatementSet.java & more ...",
  "id": 1035,
  "numClones": 5,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
    "startLineNumber": 418,
    "lines": "ps.setBytes(1, new byte[] {\n                1, 2, 3, 4, 5\n            });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
    "startLineNumber": 409,
    "lines": "ps.setBytes(1, new byte[] {\n                1, 2, 3, 4, 5\n            });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java, /hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
  "id": 1036,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 977,
    "lines": "persistenceScope == TableBase.SCOPE_STATEMENT\n                    ? TableBase.SYSTEM_SUBQUERY\n                    : TableBase.RESULT_TABLE"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1841,
    "lines": "persistenceScope == TableBase.SCOPE_STATEMENT\n                        ? TableBase.SYSTEM_SUBQUERY\n                        : TableBase.RESULT_TABLE"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QueryExpression.java, /hsqldb/src/org/hsqldb/QuerySpecification.java",
  "id": 1037,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3363,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6792,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2451,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2871,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7411,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8053,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2333,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6\n            }, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1038,
  "numClones": 7,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongValueHashMap.java",
    "startLineNumber": 150,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMap.java",
    "startLineNumber": 120,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
    "startLineNumber": 118,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java",
    "startLineNumber": 110,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java",
    "startLineNumber": 95,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 111,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedLongKeyHashMap.java",
    "startLineNumber": 153,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
    "startLineNumber": 122,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMapConcurrent.java",
    "startLineNumber": 149,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyHashMap.java",
    "startLineNumber": 183,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/MultiValueHashMap.java",
    "startLineNumber": 108,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntValueHashMap.java",
    "startLineNumber": 155,
    "lines": "public Set keySet() {\n\n        if (keySet == null) {\n            keySet = new KeySet();\n        }\n\n        return keySet;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongValueHashMap.java, /hsqldb/src/org/hsqldb/lib/HashMap.java & more ...",
  "id": 1039,
  "numClones": 12,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 482,
    "lines": "java.sql.ResultSet rs = stmt.executeQuery(\"select * from mytable\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 501,
    "lines": "java.sql.ResultSet rs = stmt.executeQuery(\"select * from mytable\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java, /hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
  "id": 1040,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java",
    "startLineNumber": 381,
    "lines": "public void itemStateChanged(ItemEvent e) {\n\n        String s = (String) e.getItem();\n\n        for (int i = 0; i < connTypes.length; i++) {\n            if (s.equals(connTypes[i][0])) {\n                mDriver.setText(connTypes[i][1]);\n                mURL.setText(connTypes[i][2]);\n            }\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
    "startLineNumber": 341,
    "lines": "public void itemStateChanged(ItemEvent e) {\n\n        String s = (String) e.getItem();\n\n        for (int i = 0; i < connTypes.length; i++) {\n            if (s.equals(connTypes[i][0])) {\n                mDriver.setText(connTypes[i][1]);\n                mURL.setText(connTypes[i][2]);\n            }\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java, /hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
  "id": 1041,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 209,
    "lines": "for (; lookup >= 0;\n                lastLookup = lookup,\n                lookup = hashIndex.getNextLookup(lookup)) {\n            testValue = (String) objectKeyTable[lookup];\n\n            if (key.equals(testValue)) {\n                if (accessCount > ACCESS_MAX) {\n                    resetAccessCount();\n                }\n\n                accessTable[lookup] = accessCount++;\n\n                return testValue;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
    "startLineNumber": 254,
    "lines": "for (; lookup >= 0;\n                lastLookup = lookup,\n                lookup = hashIndex.getNextLookup(lookup)) {\n            testValue = (String) objectKeyTable[lookup];\n\n            if (key.equals(testValue)) {\n                if (accessCount > ACCESS_MAX) {\n                    resetAccessCount();\n                }\n\n                accessTable[lookup] = accessCount++;\n\n                return testValue;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java, /hsqldb/src/org/hsqldb/map/ValuePoolHashMap.java",
  "id": 1042,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 179,
    "lines": "catch (ShortBufferException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 156,
    "lines": "catch (ShortBufferException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Crypto.java, /hsqldb/src/org/hsqldb/persist/Crypto.java",
  "id": 1043,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongValueHashMap.java",
    "startLineNumber": 214,
    "lines": "while (it.hasNext()) {\n            Object key = it.next();\n\n            put(key, t.get(key));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMap.java",
    "startLineNumber": 89,
    "lines": "while (it.hasNext()) {\n            Object key = it.next();\n\n            put(key, t.get(key));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/MultiValueHashMap.java",
    "startLineNumber": 101,
    "lines": "while (it.hasNext()) {\n            Object key = it.next();\n\n            put(key, t.get(key));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntValueHashMap.java",
    "startLineNumber": 263,
    "lines": "while (it.hasNext()) {\n            Object key = it.next();\n\n            put(key, t.get(key));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongValueHashMap.java, /hsqldb/src/org/hsqldb/lib/HashMap.java & more ...",
  "id": 1044,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/IntArrayCachedObject.java",
    "startLineNumber": 101,
    "lines": "public void write(RowOutputInterface out, LongLookup lookup) {\n        write(out);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/BitMapCachedObject.java",
    "startLineNumber": 104,
    "lines": "public void write(RowOutputInterface out, LongLookup lookup) {\n        write(out);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DirectoryBlockCachedObject.java",
    "startLineNumber": 132,
    "lines": "public void write(RowOutputInterface out, LongLookup lookup) {\n        write(out);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/IntArrayCachedObject.java, /hsqldb/src/org/hsqldb/persist/BitMapCachedObject.java & more ...",
  "id": 1045,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionContext.java",
    "startLineNumber": 223,
    "lines": "rownum = ((Integer) stack.remove(stack.size() - 1)).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionContext.java",
    "startLineNumber": 180,
    "lines": "rownum = ((Integer) stack.remove(stack.size() - 1)).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SessionContext.java, /hsqldb/src/org/hsqldb/SessionContext.java",
  "id": 1046,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1397,
    "lines": "typeCode == Types.SQL_TIME\n                || typeCode == Types.SQL_TIME_WITH_TIME_ZONE"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1283,
    "lines": "typeCode == Types.SQL_TIME\n                        || typeCode == Types.SQL_TIME_WITH_TIME_ZONE"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1379,
    "lines": "typeCode == Types.SQL_TIME\n                || typeCode == Types.SQL_TIME_WITH_TIME_ZONE"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java & more ...",
  "id": 1047,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/integration/extAuthWithSpring/src/org/hsqldb/sample/SpringExtAuth.java",
    "startLineNumber": 131,
    "lines": "if (c != null) try {\n                c.close();\n            } catch (SQLException se) {\n                log.error(\"Failed to close emulation database setup Connection\",\n                        se);\n            } finally {\n                c = null;  // Encourage GC\n            }"
   },
   {
    "fileName": "/hsqldb/integration/extAuthWithSpring/src/org/hsqldb/sample/JdbcAppClass.java",
    "startLineNumber": 99,
    "lines": "if (c != null) try {\n                c.close();\n            } catch (SQLException se) {\n                log.error(\"Failed to close emulation database setup Connection\",\n                        se);\n            } finally {\n                c = null;  // Encourage GC\n            }"
   },
   {
    "fileName": "/hsqldb/integration/extAuthWithSpring/src/org/hsqldb/sample/SpringExtAuth.java",
    "startLineNumber": 166,
    "lines": "if (c != null) try {\n                c.close();\n            } catch (SQLException se) {\n                log.error(\"Failed to close emulation database setup Connection\",\n                        se);\n            } finally {\n                c = null;  // Encourage GC\n            }"
   }
  ],
  "title": "/hsqldb/integration/extAuthWithSpring/src/org/hsqldb/sample/SpringExtAuth.java, /hsqldb/integration/extAuthWithSpring/src/org/hsqldb/sample/JdbcAppClass.java & more ...",
  "id": 1048,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
    "startLineNumber": 290,
    "lines": "while (r.next()) {\n                r.getInt(1);\n\n                valid = true;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
    "startLineNumber": 203,
    "lines": "while (r.next()) {\n                r.getInt(1);\n\n                valid = true;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
    "startLineNumber": 179,
    "lines": "while (r.next()) {\n                r.getInt(1);\n\n                valid = true;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
    "startLineNumber": 191,
    "lines": "while (r.next()) {\n                r.getInt(1);\n\n                valid = true;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java, /hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java & more ...",
  "id": 1049,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 928,
    "lines": "if (bOffset == bAddresses[bIndex][LOBS.BLOCK_COUNT]) {\n                bOffset = 0;\n\n                bIndex++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1018,
    "lines": "if (bOffset == bAddresses[bIndex][LOBS.BLOCK_COUNT]) {\n                bOffset = 0;\n\n                bIndex++;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1050,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1675,
    "lines": "if (object instanceof Routine) {\n                name = ((Routine) object).getSpecificName();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 479,
    "lines": "if (object instanceof Routine) {\n            name = ((Routine) object).getSpecificName();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1642,
    "lines": "if (object instanceof Routine) {\n                name = ((Routine) object).getSpecificName();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 376,
    "lines": "if (object instanceof Routine) {\n            name = ((Routine) object).getSpecificName();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 502,
    "lines": "if (object instanceof Routine) {\n            name = ((Routine) object).getSpecificName();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 650,
    "lines": "if (object instanceof Routine) {\n            name = ((Routine) object).getSpecificName();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/rights/Grantee.java & more ...",
  "id": 1051,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1747,
    "lines": "if (nodes.length > 0 && nodes[0] != null) {\n                    precision = ((Integer) nodes[0].valueData).intValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1760,
    "lines": "if (nodes.length > 0 && nodes[0] != null) {\n                    precision = ((Integer) nodes[0].valueData).intValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1784,
    "lines": "if (nodes.length > 0 && nodes[0] != null) {\n                    precision = ((Integer) nodes[0].valueData).intValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1772,
    "lines": "if (nodes.length > 0 && nodes[0] != null) {\n                    precision = ((Integer) nodes[0].valueData).intValue();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 1052,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2354,
    "lines": "Object[]   args           = new Object[] {\n                    td, otherName\n                };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2386,
    "lines": "Object[] args = new Object[] {\n            td, otherName\n        };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1053,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 755,
    "lines": "if (t == null) {\n                    throw Error.error(ErrorCode.X_42501, name);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 785,
    "lines": "if (t == null) {\n                throw Error.error(ErrorCode.X_42501, name);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 1054,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 507,
    "lines": "Session current = (Session) session.waitingSessions.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 430,
    "lines": "Session current = (Session) session.waitingSessions.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 360,
    "lines": "Session current = (Session) session.waitingSessions.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 888,
    "lines": "Session   current = (Session) session.waitingSessions.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 903,
    "lines": "Session current = (Session) session.waitingSessions.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 851,
    "lines": "Session current = (Session) session.waitingSessions.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 341,
    "lines": "Session current = (Session) session.waitingSessions.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 485,
    "lines": "Session current = (Session) session.waitingSessions.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 529,
    "lines": "Session current = (Session) session.waitingSessions.get(i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java, /hsqldb/src/org/hsqldb/TransactionManagerCommon.java & more ...",
  "id": 1055,
  "numClones": 9,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 555,
    "lines": "byte[] bytes   = new byte[(int) (length + 7) / 8];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 473,
    "lines": "byte[] bytes     = new byte[(int) (length + 7) / 8];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BitType.java, /hsqldb/src/org/hsqldb/types/BitType.java",
  "id": 1056,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3331,
    "lines": "((matcher.group(1).length() > 0)\n                                                ? matcher.group(1)\n                                                : getCurrentSchema())"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3433,
    "lines": "((matcher.group(1).length() > 0)\n                                                ? matcher.group(1)\n                                                : getCurrentSchema())"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1057,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java",
    "startLineNumber": 71,
    "lines": "public Object put(int key, Object value) {\n        return super.addOrRemove(key, value, null, false);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java",
    "startLineNumber": 67,
    "lines": "public Object put(int key, Object value) {\n        return super.addOrRemove(key, value, null, false);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java, /hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java",
  "id": 1058,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 871,
    "lines": "baseTable.triggerLists[Trigger.INSERT_BEFORE_ROW].length > 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 811,
    "lines": "baseTable.triggerLists[Trigger.INSERT_BEFORE_ROW].length > 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 1059,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 468,
    "lines": "if (condition.isUnresolvedParam()) {\n                condition.dataType = Type.SQL_BOOLEAN;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 581,
    "lines": "if (condition.isUnresolvedParam()) {\n                condition.dataType = Type.SQL_BOOLEAN;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDML.java",
  "id": 1060,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1012,
    "lines": "if (aOffset == aAddresses[aIndex][LOBS.BLOCK_COUNT]) {\n                aOffset = 0;\n\n                aIndex++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 922,
    "lines": "if (aOffset == aAddresses[aIndex][LOBS.BLOCK_COUNT]) {\n                aOffset = 0;\n\n                aIndex++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 739,
    "lines": "if (aOffset == aAddresses[aIndex][LOBS.BLOCK_COUNT]) {\n                    aOffset = 0;\n\n                    aIndex++;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 839,
    "lines": "if (aOffset == aAddresses[aIndex][LOBS.BLOCK_COUNT]) {\n                    aOffset = 0;\n\n                    aIndex++;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 1061,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 758,
    "lines": "if (token.tokenType == Tokens.TRUE) {\n                    delay = database.getProperties().getDefaultWriteDelay();\n\n                    read();\n                } else if (token.tokenType == Tokens.FALSE) {\n                    delay = 0;\n\n                    read();\n                } else {\n                    delay = this.readInteger();\n\n                    if (delay < 0) {\n                        delay = 0;\n                    }\n\n                    if (token.tokenType == Tokens.MILLIS) {\n                        read();\n                    } else {\n                        delay *= 1000;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1516,
    "lines": "if (token.tokenType == Tokens.TRUE) {\n                    delay = database.getProperties().getDefaultWriteDelay();\n\n                    read();\n                } else if (token.tokenType == Tokens.FALSE) {\n                    delay = 0;\n\n                    read();\n                } else {\n                    delay = this.readInteger();\n\n                    if (delay < 0) {\n                        delay = 0;\n                    }\n\n                    if (token.tokenType == Tokens.MILLIS) {\n                        read();\n                    } else {\n                        delay *= 1000;\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 1062,
  "numClones": 2,
  "cloneSize": 17
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 504,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ').append(Tokens.UNIQUE).append(' ')"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 497,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ').append(Tokens.UNIQUE).append(' ')"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1063,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterEncode.java",
    "startLineNumber": 102,
    "lines": "protected void openFile() {\n\n        try {\n            FileAccess   fa  = isDump ? FileUtil.getFileUtil()\n                                      : database.logger.getFileAccess();\n            OutputStream fos = fa.openOutputStreamElement(outFile);\n\n            outDescriptor = fa.getFileSync(fos);\n            fileStreamOut = fos;\n            fileStreamOut = new BufferedOutputStream(fos, 1 << 14);\n        } catch (IOException e) {\n            throw Error.error(e, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_Message_Pair, new Object[] {\n                e.toString(), outFile\n            });\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterBase.java",
    "startLineNumber": 265,
    "lines": "/**\n     *  File is opened in append mode although in current usage the file\n     *  never pre-exists\n     */\n    protected void openFile() {\n\n        try {\n            FileAccess   fa  = isDump ? FileUtil.getFileUtil()\n                                      : database.logger.getFileAccess();\n            OutputStream fos = fa.openOutputStreamElement(outFile);\n\n            outDescriptor = fa.getFileSync(fos);\n            fileStreamOut = fos;\n            fileStreamOut = new BufferedOutputStream(fos, 1 << 14);\n        } catch (IOException e) {\n            throw Error.error(e, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_Message_Pair, new Object[] {\n                e.toString(), outFile\n            });\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterEncode.java, /hsqldb/src/org/hsqldb/scriptio/ScriptWriterBase.java",
  "id": 1064,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2514,
    "lines": "while (true) {\n                Iterator it = unresolved.iterator();\n\n                if (!it.hasNext()) {\n                    break;\n                }\n\n                OrderedHashSet newResolved = new OrderedHashSet();\n\n                SchemaObjectSet.addAllSQL(resolved, unresolved, list, it,\n                                          newResolved);\n                unresolved.removeAll(newResolved);\n\n                if (newResolved.size() == 0) {\n                    break;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2480,
    "lines": "while (true) {\n                Iterator it = unresolved.iterator();\n\n                if (!it.hasNext()) {\n                    break;\n                }\n\n                OrderedHashSet newResolved = new OrderedHashSet();\n\n                SchemaObjectSet.addAllSQL(resolved, unresolved, list, it,\n                                          newResolved);\n                unresolved.removeAll(newResolved);\n\n                if (newResolved.size() == 0) {\n                    break;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 1065,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 170,
    "lines": "{\n\n        ensureRoom(2);\n\n        buffer[count++] = (byte) (v >>> 8);\n        buffer[count++] = (byte) v;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 111,
    "lines": "{\n\n        ensureRoom(2);\n\n        buffer[count++] = (byte) (v >>> 8);\n        buffer[count++] = (byte) v;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java, /hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
  "id": 1066,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1589,
    "lines": "if (byteBuffer == null) {\n            throw Error.error(ErrorCode.DATA_IS_READONLY);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1541,
    "lines": "if (byteBuffer == null) {\n            throw Error.error(ErrorCode.DATA_IS_READONLY);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1067,
    "lines": "if (byteBuffer == null) {\n            throw Error.error(ErrorCode.DATA_IS_READONLY);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1659,
    "lines": "if (byteBuffer == null) {\n            throw Error.error(ErrorCode.DATA_IS_READONLY);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1610,
    "lines": "if (byteBuffer == null) {\n            throw Error.error(ErrorCode.DATA_IS_READONLY);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1686,
    "lines": "if (byteBuffer == null) {\n            throw Error.error(ErrorCode.DATA_IS_READONLY);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 1067,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1364,
    "lines": "assertEquals(Timestamp.class, rs.getObject(\"ts\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 600,
    "lines": "assertEquals(Timestamp.class, rs.getObject(\"ts\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 1068,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 340,
    "lines": "scanner.token.isUndelimitedIdentifier\n               || scanner.token.isDelimitedIdentifier"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 321,
    "lines": "scanner.token.isUndelimitedIdentifier\n                   || scanner.token.isDelimitedIdentifier"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 307,
    "lines": "scanner.token.isUndelimitedIdentifier\n                   || scanner.token.isDelimitedIdentifier"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserBase.java, /hsqldb/src/org/hsqldb/ParserBase.java & more ...",
  "id": 1069,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 300,
    "lines": "for (int i = 0; i < routines.length; i++) {\n            set.addAll(routines[i].getTableNamesForRead());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementProcedure.java",
    "startLineNumber": 384,
    "lines": "for (int i = 0; i < routines.length; i++) {\n                set.addAll(routines[i].getTableNamesForRead());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSet.java",
    "startLineNumber": 350,
    "lines": "for (int i = 0; i < routines.length; i++) {\n            set.addAll(routines[i].getTableNamesForRead());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementExpression.java",
    "startLineNumber": 191,
    "lines": "for (int i = 0; i < routines.length; i++) {\n            set.addAll(routines[i].getTableNamesForRead());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementQuery.java",
    "startLineNumber": 100,
    "lines": "for (int i = 0; i < routines.length; i++) {\n            set.addAll(routines[i].getTableNamesForRead());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementProcedure.java & more ...",
  "id": 1070,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5251,
    "lines": "(shared.encoding == null)\n                    ? DEFAULT_FILE_ENCODING : shared.encoding"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5491,
    "lines": "(shared.encoding == null)\n                    ? DEFAULT_FILE_ENCODING : shared.encoding"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4710,
    "lines": "(shared.encoding == null)\n                ? DEFAULT_FILE_ENCODING : shared.encoding"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1426,
    "lines": "(shared.encoding == null)\n                            ? DEFAULT_FILE_ENCODING : shared.encoding"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1650,
    "lines": "(shared.encoding == null)\n                                ? DEFAULT_FILE_ENCODING : shared.encoding"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 5505,
    "lines": "(shared.encoding == null)\n                    ? DEFAULT_FILE_ENCODING : shared.encoding"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1785,
    "lines": "(shared.encoding == null)\n                            ? DEFAULT_FILE_ENCODING : shared.encoding"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1071,
  "numClones": 7,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3322,
    "lines": "if (owner == null) {\n            throw Error.error(ErrorCode.X_28501, authorisation);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3301,
    "lines": "if (owner == null) {\n                    throw Error.error(ErrorCode.X_28501, authorisation);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1072,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 801,
    "lines": "Statement cs =\n                    new StatementCommand(StatementTypes.SET_USER_PASSWORD,\n                                         args);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4380,
    "lines": "Statement cs =\n                    new StatementCommand(StatementTypes.SET_USER_PASSWORD,\n                                         args);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1073,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 184,
    "lines": "sessionContext.isReadOnly   = isReadOnlyDefault ? Boolean.TRUE\n                                                        : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 613,
    "lines": "sessionContext.isReadOnly = isReadOnlyDefault ? Boolean.TRUE\n                                                          : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 555,
    "lines": "sessionContext.isReadOnly = isReadOnlyDefault ? Boolean.TRUE\n                                                          : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 799,
    "lines": "sessionContext.isReadOnly = isReadOnlyDefault ? Boolean.TRUE\n                                                          : Boolean.FALSE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java & more ...",
  "id": 1074,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 436,
    "lines": "int nextIntRandom(Random r, int range) {\n\n        int b = r.nextInt();\n\n        if (b == Integer.MIN_VALUE) {\n            b = Integer.MAX_VALUE;\n        }\n\n        b = Math.abs(b);\n\n        return b % range;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 993,
    "lines": "int nextIntRandom(Random r, int range) {\n\n        int b = r.nextInt();\n\n        if (b == Integer.MIN_VALUE) {\n            b = Integer.MAX_VALUE;\n        }\n\n        b = Math.abs(b);\n\n        return b % range;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 540,
    "lines": "int nextIntRandom(Random r, int range) {\n\n        int b = r.nextInt();\n\n        if (b == Integer.MIN_VALUE) {\n            b = Integer.MAX_VALUE;\n        }\n\n        b = Math.abs(b);\n\n        return b % range;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java & more ...",
  "id": 1075,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 537,
    "lines": "params[LOB_IDS.LOB_LENGTH]      = ValuePool.getLong(length);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 512,
    "lines": "params[LOB_IDS.LOB_LENGTH]      = ValuePool.getLong(length);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1076,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1836,
    "lines": "if (sql.startsWith(\"--#\")) {\n                max = Integer.parseInt(sql.substring(3));\n\n                continue;\n            } else if (sql.startsWith(\"--\")) {\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1013,
    "lines": "if (sql.startsWith(\"--#\")) {\n                max = Integer.parseInt(sql.substring(3));\n\n                continue;\n            } else if (sql.startsWith(\"--\")) {\n                continue;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java",
  "id": 1077,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 773,
    "lines": "unresolved = Expression.resolveColumnSet(session,\n                    RangeVariable.emptyArray, RangeGroup.emptyArray,\n                    unresolved);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 759,
    "lines": "unresolved = Expression.resolveColumnSet(session,\n                    RangeVariable.emptyArray, RangeGroup.emptyArray,\n                    unresolved);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariable.java",
  "id": 1078,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1851,
    "lines": "result = reversed ? last(store, result)\n                                  : next(store, result);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1769,
    "lines": "result = reversed ? last(store, result)\n                                  : next(store, result);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java",
  "id": 1079,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java",
    "startLineNumber": 382,
    "lines": "resultSet.preparedStatement.parameterSet[colIndex]    = Boolean.TRUE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
    "startLineNumber": 728,
    "lines": "resultSet.preparedStatement.parameterSet[colIndex]    = Boolean.TRUE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
  "id": 1080,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 683,
    "lines": "{\n                        if (e.getType() != OpTypes.DEFAULT) {\n                            throw Error.error(ErrorCode.X_42541);\n                        }\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 242,
    "lines": "{\n                            if (e.getType() != OpTypes.DEFAULT) {\n                                throw Error.error(ErrorCode.X_42541);\n                            }\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 726,
    "lines": "{\n                    if (e.getType() != OpTypes.DEFAULT) {\n                        throw Error.error(ErrorCode.X_42541);\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDML.java & more ...",
  "id": 1081,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1342,
    "lines": "{\n\n        for (int i = 0; i < columnMap.length; i++) {\n            newRow[i] = row[columnMap[i]];\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1335,
    "lines": "{\n\n        for (int i = 0; i < columnMap.length; i++) {\n            newRow[i] = row[columnMap[i]];\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
  "id": 1082,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 714,
    "lines": "{\n                returnValue              = objectValueTable[lookup];\n                objectValueTable[lookup] = objectValue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 393,
    "lines": "{\n                returnValue              = objectValueTable[lookup];\n                objectValueTable[lookup] = objectValue;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 1083,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 324,
    "lines": "System.arraycopy(list, firstindex, newList, firstindex,\n                         list.length - firstindex);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 332,
    "lines": "System.arraycopy(list, firstindex, newList, firstindex,\n                         list.length - firstindex);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongDeque.java, /hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
  "id": 1084,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 175,
    "lines": "return other.typeCode == Types.SQL_BLOB ? 4\n                                                        : 2;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 171,
    "lines": "return other.typeCode == Types.SQL_BLOB ? 4\n                                                        : 2;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BinaryType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java",
  "id": 1085,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/CharArrayWriter.java",
    "startLineNumber": 179,
    "lines": "/**\n     * Converts input data to a string.\n     * @return the string.\n     */\n    public String toString() {\n        return new String(buffer, 0, count);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
    "startLineNumber": 246,
    "lines": "public String toString() {\n        return new String(buffer, 0, count);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/CharArrayWriter.java, /hsqldb/src/org/hsqldb/lib/HsqlByteArrayOutputStream.java",
  "id": 1086,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 106,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    DBUrl = Args[i];\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 94,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    DBUrl = Args[i];\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 1087,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 680,
    "lines": "dataImpact == Routine.CONTAINS_SQL\n                            || dataImpact == Routine.READS_SQL"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 690,
    "lines": "dataImpact == Routine.CONTAINS_SQL\n                || dataImpact == Routine.READS_SQL"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 1088,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5122,
    "lines": "row[table_schema]     = refName.parent.schema.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8119,
    "lines": "row[table_schema]  = refName.parent.schema.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6843,
    "lines": "row[table_schema]    = refName.parent.schema.name;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1089,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1712,
    "lines": "params[DELETE_BLOCKS.LOB_ID]       = ValuePool.getLong(lobID);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1806,
    "lines": "params[DELETE_BLOCKS.LOB_ID]       = ValuePool.getLong(lobID);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1090,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedStatements.java",
    "startLineNumber": 158,
    "lines": "System.out.println(\" -- preparing\\n<<<\\n\"\n                                       + stmtArray[i].command + \"\\n>>>\\n\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
    "startLineNumber": 120,
    "lines": "System.out.println(\" -- preparing\\n<<<\\n\"\n                                       + stmtArray[i].command + \"\\n>>>\\n\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestPreparedStatements.java, /hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
  "id": 1091,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 591,
    "lines": "if (nodes[2] != null\n                        && ((Number) nodes[2].valueData).intValue()\n                           == Tokens.OCTETS) {\n                    result *= 2;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 609,
    "lines": "if (nodes[2] != null\n                        && ((Number) nodes[2].valueData).intValue()\n                           == Tokens.OCTETS) {\n                    result *= 2;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 1092,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 165,
    "lines": "joinConditions = new RangeVariableConditions[]{\n            new RangeVariableConditions(this, true) };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 636,
    "lines": "joinConditions = new RangeVariableConditions[]{\n            new RangeVariableConditions(this, true) };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 138,
    "lines": "joinConditions = new RangeVariableConditions[]{\n            new RangeVariableConditions(this, true) };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 186,
    "lines": "joinConditions = new RangeVariableConditions[]{\n            new RangeVariableConditions(this, true) };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariable.java & more ...",
  "id": 1093,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1724,
    "lines": "e1 = new ExpressionValue(ValuePool.INTEGER_0, Type.SQL_INTEGER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1611,
    "lines": "e1 = new ExpressionValue(ValuePool.INTEGER_0, Type.SQL_INTEGER);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1094,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7575,
    "lines": "row[is_grantable] =\n                        right.getGrantee() == object.getOwner()\n                        || grantableRight.isFull() ? Tokens.T_YES\n                                                   : Tokens.T_NO;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7770,
    "lines": "row[is_grantable] =\n                        right.getGrantee() == object.getOwner()\n                        || grantableRight.isFull() ? Tokens.T_YES\n                                                   : Tokens.T_NO;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 1095,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1558,
    "lines": "((NumberType) dataType).round(data[0], offset)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1218,
    "lines": "((NumberType) dataType).round(data[0], offset)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1096,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 226,
    "lines": "array[i + 1] = array[i];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3385,
    "lines": "array[i + 1] = array[i];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1097,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 407,
    "lines": "boolean newGroup =\n                compareData == null\n                || fullIndex.compareRowNonUnique(\n                    session, currentData, compareData,\n                    fullIndex.getColumnCount()) != 0;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 466,
    "lines": "boolean newGroup =\n                compareData == null\n                || fullIndex.compareRowNonUnique(\n                    session, currentData, compareData,\n                    fullIndex.getColumnCount()) != 0;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
  "id": 1098,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FileArchiver.java",
    "startLineNumber": 234,
    "lines": "if (!completed && storage.isStreamElement(outfilename)) {\n                    storage.removeElement(outfilename);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FileArchiver.java",
    "startLineNumber": 157,
    "lines": "if (!completed && storage.isStreamElement(outfilename)) {\n                    storage.removeElement(outfilename);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/FileArchiver.java, /hsqldb/src/org/hsqldb/lib/FileArchiver.java",
  "id": 1099,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4907,
    "lines": "HsqlName name = HsqlNameManager.newInfoSchemaObjectName(\n                sysTableHsqlNames[ROLE_TABLE_GRANTS].name, false,\n                SchemaObject.INDEX);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4828,
    "lines": "// order:  TABLE_SCHEM, TABLE_NAME, and PRIVILEGE,\n            // added for unique:  GRANTEE, GRANTOR,\n            // false PK, as TABLE_SCHEM and/or TABLE_CAT may be null\n            HsqlName name = HsqlNameManager.newInfoSchemaObjectName(\n                sysTableHsqlNames[ROLE_TABLE_GRANTS].name, false,\n                SchemaObject.INDEX);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 1100,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
    "startLineNumber": 257,
    "lines": "if (nextAtom.op != null)\n                throw new IllegalStateException(\n                        \"Value expected but got operator \" + nextAtom.op);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
    "startLineNumber": 222,
    "lines": "if (nextAtom.op != null)\n                throw new IllegalStateException(\n                        \"Value expected but got operator \" + nextAtom.op);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java, /hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
  "id": 1101,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 124,
    "lines": "public Row getCurrentRow() {\n        throw Error.runtimeError(ErrorCode.U_S0500, \"RowSetNavigatorClient\");\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 260,
    "lines": "public Row getCurrentRow() {\n        throw Error.runtimeError(ErrorCode.U_S0500, \"RowSetNavigatorClient\");\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
  "id": 1102,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1138,
    "lines": "row = (String[]) data.elementAt(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1104,
    "lines": "row = (String[]) data.elementAt(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1065,
    "lines": "row = (String[]) data.elementAt(i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java & more ...",
  "id": 1103,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3799,
    "lines": "{\n            row[numeric_precision] = ValuePool.getLong(\n                ((NumberType) type).getNumericPrecisionInRadix());\n            row[declared_numeric_precision] = ValuePool.getLong(\n                ((NumberType) type).getNumericPrecisionInRadix());\n\n            if (type.isExactNumberType()) {\n                row[numeric_scale] = row[declared_numeric_scale] =\n                    ValuePool.getLong(type.scale);\n            }\n\n            row[numeric_precision_radix] =\n                ValuePool.getLong(type.getPrecisionRadix());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2707,
    "lines": "{\n                    row[numeric_precision] = ValuePool.getLong(\n                        ((NumberType) type).getNumericPrecisionInRadix());\n                    row[declared_numeric_precision] = ValuePool.getLong(\n                        ((NumberType) type).getNumericPrecisionInRadix());\n\n                    if (type.isExactNumberType()) {\n                        row[numeric_scale] = row[declared_numeric_scale] =\n                            ValuePool.getLong(type.scale);\n                    }\n\n                    row[numeric_precision_radix] =\n                        ValuePool.getLong(type.getPrecisionRadix());\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5987,
    "lines": "{\n                    row[numeric_precision] = ValuePool.getLong(\n                        ((NumberType) type).getNumericPrecisionInRadix());\n                    row[declared_numeric_precision] = ValuePool.getLong(\n                        ((NumberType) type).getNumericPrecisionInRadix());\n\n                    if (type.isExactNumberType()) {\n                        row[numeric_scale] = row[declared_numeric_scale] =\n                            ValuePool.getLong(type.scale);\n                    }\n\n                    row[numeric_precision_radix] =\n                        ValuePool.getLong(type.getPrecisionRadix());\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3457,
    "lines": "{\n                row[numeric_precision] = ValuePool.getLong(\n                    ((NumberType) type).getNumericPrecisionInRadix());\n                row[declared_numeric_precision] = ValuePool.getLong(\n                    ((NumberType) type).getNumericPrecisionInRadix());\n\n                if (type.isExactNumberType()) {\n                    row[numeric_scale] = row[declared_numeric_scale] =\n                        ValuePool.getLong(type.scale);\n                }\n\n                row[numeric_precision_radix] =\n                    ValuePool.getLong(type.getPrecisionRadix());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7949,
    "lines": "{\n                row[numeric_precision] = ValuePool.getLong(\n                    ((NumberType) type).getNumericPrecisionInRadix());\n                row[declared_numeric_precision] = ValuePool.getLong(\n                    ((NumberType) type).getNumericPrecisionInRadix());\n\n                if (type.isExactNumberType()) {\n                    row[numeric_scale] = row[declared_numeric_scale] =\n                        ValuePool.getLong(type.scale);\n                }\n\n                row[numeric_precision_radix] =\n                    ValuePool.getLong(type.getPrecisionRadix());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1104,
  "numClones": 5,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3067,
    "lines": "//\n        Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6307,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4995,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4842,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4746,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6346,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6421,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4665,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6268,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4916,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6384,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3136,
    "lines": "//\n        Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6460,
    "lines": "Session sys = database.sessionManager.newSysSession(\n            SqlInvariants.INFORMATION_SCHEMA_HSQLNAME, session.getUser());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1105,
  "numClones": 13,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 376,
    "lines": "session.isolationLevel == SessionInterface.TX_REPEATABLE_READ\n                || session.isolationLevel\n                   == SessionInterface.TX_SERIALIZABLE"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 324,
    "lines": "session.isolationLevel == SessionInterface\n                        .TX_REPEATABLE_READ || session\n                        .isolationLevel == SessionInterface.TX_SERIALIZABLE"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java, /hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
  "id": 1106,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1586,
    "lines": "if (nodes[2].dataType == null) {\n                    nodes[2].dataType = Type.SQL_VARCHAR_DEFAULT;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3132,
    "lines": "if (nodes[2].dataType == null) {\n                        nodes[2].dataType = Type.SQL_VARCHAR_DEFAULT;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1107,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCacheSession.java",
    "startLineNumber": 122,
    "lines": "throw Error.error(t, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_DataFileCache_close, new Object[] {\n                t.toString(), dataFileName\n            });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 802,
    "lines": "throw Error.error(t, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_DataFileCache_close, new Object[] {\n                t.toString(), dataFileName\n            });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 710,
    "lines": "throw Error.error(t, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_DataFileCache_close, new Object[] {\n                t.toString(), dataFileName\n            });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCacheSession.java, /hsqldb/src/org/hsqldb/persist/DataFileCache.java & more ...",
  "id": 1108,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
    "startLineNumber": 219,
    "lines": "// after the first match and check, all compares are with row id\n                if (compare == 0 && session != null && !compareRowId\n                        && session.database.txManager.isMVRows()) {\n                    if (!isEqualReadable(session, store, n)) {\n                        compareRowId = true;\n                        compare = compareRowForInsertOrDelete(session, row,\n                                                              currentRow,\n                                                              compareRowId,\n                                                              colIndex.length);\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 907,
    "lines": "// after the first match and check, all compares are with row id\n                if (compare == 0 && session != null && !compareRowId\n                        && session.database.txManager.isMVRows()) {\n                    if (!isEqualReadable(session, store, n)) {\n                        compareRowId = true;\n                        compare = compareRowForInsertOrDelete(session, row,\n                                                              currentRow,\n                                                              compareRowId,\n                                                              colIndex.length);\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVLMemory.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java",
  "id": 1109,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3539,
    "lines": "schema = (matcher.group(1).length() > 0)\n                                ? matcher.group(1)\n                                : getCurrentSchema();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3497,
    "lines": "schema = (matcher.group(1).length() > 0)\n                                    ? matcher.group(1) : getCurrentSchema();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1110,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 283,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDisk) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 309,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDisk) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 262,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDisk) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 218,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDisk) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 240,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDisk) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 296,
    "lines": "if (!row.isInMemory()) {\n            row  = (RowAVLDisk) store.get(this.row, false);\n            node = (NodeAVLDisk) row.getNode(iId);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDisk.java & more ...",
  "id": 1111,
  "numClones": 6,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1516,
    "lines": "if (nodes[2].dataType == null) {\n                        nodes[2].dataType = Type.SQL_NUMERIC;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1688,
    "lines": "if (nodes[2].dataType == null) {\n                    nodes[2].dataType = Type.SQL_NUMERIC;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 1112,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1527,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 60;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1531,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 60;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java",
  "id": 1113,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/MainInvoker.java",
    "startLineNumber": 91,
    "lines": "invoke((String) outList.remove(0),\n                           (String[]) outList.toArray(emptyStringArray));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/MainInvoker.java",
    "startLineNumber": 103,
    "lines": "invoke((String) outList.remove(0),\n                   (String[]) outList.toArray(emptyStringArray));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/MainInvoker.java, /hsqldb/src/org/hsqldb/util/MainInvoker.java",
  "id": 1114,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 257,
    "lines": "return other.precision >= precision ? other\n                                                        : getCharacterType(\n                                                        other.typeCode,\n                                                        precision,\n                                                        other.getCollation());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 264,
    "lines": "return other.precision >= precision ? other\n                                                    : getCharacterType(\n                                                    other.typeCode, precision,\n                                                    other.getCollation());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 1115,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobType.java",
    "startLineNumber": 185,
    "lines": "otherType.typeCode == Types.SQL_BINARY\n                || otherType.typeCode == Types.SQL_VARBINARY"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobType.java",
    "startLineNumber": 238,
    "lines": "otherType.typeCode == Types.SQL_BINARY\n                || otherType.typeCode == Types.SQL_VARBINARY"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobType.java, /hsqldb/src/org/hsqldb/types/BlobType.java",
  "id": 1116,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 408,
    "lines": "if (sqlText != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_params_redundant.getString());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 416,
    "lines": "if (sqlText != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_params_redundant.getString());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java, /hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
  "id": 1117,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1136,
    "lines": "for (int i = 0; i < lines.length; i++) {\n            if (i > 0) {\n                sb.append(LS);\n            }\n\n            sb.append(\"+ \" + lines[i]);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1358,
    "lines": "for (int i = 0; i < lines.length; i++) {\n            if (i > 0) {\n                sb.append(LS);\n            }\n\n            sb.append(\"+ \" + lines[i]);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1050,
    "lines": "for (int i = 0; i < lines.length; i++) {\n            if (i > 0) {\n                sb.append(LS);\n            }\n\n            sb.append(\"+ \" + lines[i]);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUtil.java, /hsqldb/src/org/hsqldb/test/TestUtil.java & more ...",
  "id": 1118,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5236,
    "lines": "if (token.tokenType == Tokens.CLOSEBRACKET) {\n            read();\n        } else {\n            while (true) {\n                Expression e = XreadValueExpression();\n\n                list.add(e);\n\n                if (token.tokenType == Tokens.COMMA) {\n                    read();\n                } else {\n                    readThis(Tokens.CLOSEBRACKET);\n\n                    break;\n                }\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 1153,
    "lines": "if (token.tokenType == Tokens.CLOSEBRACKET) {\n                    read();\n                } else {\n                    while (true) {\n                        Expression e = XreadValueExpression();\n\n                        list.add(e);\n\n                        if (token.tokenType == Tokens.COMMA) {\n                            read();\n                        } else {\n                            readThis(Tokens.CLOSEBRACKET);\n\n                            break;\n                        }\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDML.java",
  "id": 1119,
  "numClones": 2,
  "cloneSize": 14
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 860,
    "lines": "baseTable.fireTriggers(session, Trigger.INSERT_AFTER_ROW,\n                                       null, data, null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 888,
    "lines": "baseTable.fireTriggers(session, Trigger.INSERT_AFTER_ROW, null,\n                                   data, null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 1120,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 2254,
    "lines": "return new StatementCommand(StatementTypes.SET_TABLE_SOURCE, args,\n                                        null, new HsqlName[]{ t.getName() });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 2245,
    "lines": "return new StatementCommand(StatementTypes.SET_TABLE_SOURCE, args,\n                                        null, new HsqlName[]{ t.getName() });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 1121,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 277,
    "lines": "String[] expected = new String[] {\n            \"golden delicious\", \"granny smith\", \"macintosh\", \"red delicious\"\n        };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 263,
    "lines": "String[] expected = new String[] {\n            \"golden delicious\", \"granny smith\", \"macintosh\", \"red delicious\"\n        };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSubselect.java, /hsqldb/src/org/hsqldb/test/TestSubselect.java",
  "id": 1122,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1486,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 12;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1482,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 12;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java",
  "id": 1123,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1118,
    "lines": "for (int i = 0; i < set.size(); i++) {\n                HsqlName name = (HsqlName) set.get(i);\n\n                switch (name.type) {\n\n                    case SchemaObject.VIEW :\n                    case SchemaObject.CONSTRAINT :\n                    case SchemaObject.ASSERTION :\n                    case SchemaObject.ROUTINE :\n                    case SchemaObject.PROCEDURE :\n                    case SchemaObject.FUNCTION :\n                    case SchemaObject.SPECIFIC_ROUTINE :\n                        SchemaObject object = getSchemaObject(name);\n\n                        object.compile(session, null);\n                        break;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1070,
    "lines": "for (int i = 0; i < set.size(); i++) {\n                HsqlName name = (HsqlName) set.get(i);\n\n                switch (name.type) {\n\n                    case SchemaObject.VIEW :\n                    case SchemaObject.CONSTRAINT :\n                    case SchemaObject.ASSERTION :\n                    case SchemaObject.ROUTINE :\n                    case SchemaObject.PROCEDURE :\n                    case SchemaObject.FUNCTION :\n                    case SchemaObject.SPECIFIC_ROUTINE :\n                        SchemaObject object = getSchemaObject(name);\n\n                        object.compile(session, null);\n                        break;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 1124,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java",
    "startLineNumber": 106,
    "lines": "new RowAVL(table, (Object[]) object, id, this)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
    "startLineNumber": 212,
    "lines": "new RowAVL(table, (Object[]) object, id, this)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
  "id": 1125,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2361,
    "lines": "if (nodes[2].dataType.typeCode == Types.SQL_TIME\n                                || nodes[2].dataType.typeCode\n                                   == Types.SQL_TIME_WITH_TIME_ZONE) {\n                            throw Error.error(ErrorCode.X_42563);\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2383,
    "lines": "if (nodes[2].dataType.typeCode == Types.SQL_TIME\n                                || nodes[2].dataType.typeCode\n                                   == Types.SQL_TIME_WITH_TIME_ZONE) {\n                            throw Error.error(ErrorCode.X_42563);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1126,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 949,
    "lines": "if (reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)) {\n                    System.out.println(\"delete \" + (i + 1) + \" : \"\n                                       + sw.elapsedTime() + \" rps: \"\n                                       + (i * 1000 / (sw.elapsedTime() + 1)));\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 897,
    "lines": "/*\n                if ((i + 1) % 10000 == 0) {\n                    Statement st = cConnection.createStatement();\n\n                    st.execute(\"CHECKPOINT DEFRAG\");\n                    st.close();\n                }\n*/\n                if (reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)) {\n                    System.out.println(\"delete \" + (i + 1) + \" : \"\n                                       + sw.elapsedTime() + \" rps: \"\n                                       + (i * 1000 / (sw.elapsedTime() + 1)));\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java",
  "id": 1127,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 779,
    "lines": "if (offset + otherLength > ((String) data).length()) {\n                return -1;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 764,
    "lines": "if (offset + otherLength > ((String) data).length()) {\n                return -1;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 1128,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementExpression.java",
    "startLineNumber": 183,
    "lines": "{\n\n        for (int i = 0; i < subqueries.length; i++) {\n            if (subqueries[i].queryExpression != null) {\n                subqueries[i].queryExpression.getBaseTableNames(set);\n            }\n        }\n\n        for (int i = 0; i < routines.length; i++) {\n            set.addAll(routines[i].getTableNamesForRead());\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementProcedure.java",
    "startLineNumber": 377,
    "lines": "{\n            for (int i = 0; i < subqueries.length; i++) {\n                if (subqueries[i].queryExpression != null) {\n                    subqueries[i].queryExpression.getBaseTableNames(set);\n                }\n            }\n\n            for (int i = 0; i < routines.length; i++) {\n                set.addAll(routines[i].getTableNamesForRead());\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementExpression.java, /hsqldb/src/org/hsqldb/StatementProcedure.java",
  "id": 1129,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAVL.java",
    "startLineNumber": 125,
    "lines": "{\n            n.nNext = new NodeAVL(this);\n            n       = n.nNext;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAVLDiskData.java",
    "startLineNumber": 140,
    "lines": "{\n            n.nNext = new NodeAVL(this);\n            n       = n.nNext;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAVL.java, /hsqldb/src/org/hsqldb/RowAVLDiskData.java",
  "id": 1130,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1043,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 600,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 913,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 570,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 778,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 742,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1141,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1149,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1244,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2024,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2056,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2051,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2155,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2002,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1890,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2086,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1222,
    "lines": "if (data[0] == null || data[1] == null) {\n                    return null;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 1131,
  "numClones": 17,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 470,
    "lines": "if (seconds > Short.MAX_VALUE) {\n            seconds = Short.MAX_VALUE;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 3231,
    "lines": "if (seconds > Short.MAX_VALUE) {\n            seconds = Short.MAX_VALUE;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 1132,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2860,
    "lines": "{\n            if (result != null) {\n                try {\n                    result.close();\n                } catch (SQLException se) {}\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2651,
    "lines": "{\n            if (result != null) {\n                try {\n                    result.close();\n                } catch (SQLException se) {}\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1133,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 559,
    "lines": "Session current = (Session) session.tempSet.get(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 657,
    "lines": "Session current = (Session) session.tempSet.get(i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java, /hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
  "id": 1134,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/HsqlNameManager.java",
    "startLineNumber": 423,
    "lines": "if (schema != null) {\n                        sb.append(schema.getStatementName());\n                        sb.append('.');\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/HsqlNameManager.java",
    "startLineNumber": 442,
    "lines": "if (schema != null) {\n                sb.append(schema.getStatementName());\n                sb.append('.');\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/HsqlNameManager.java, /hsqldb/src/org/hsqldb/HsqlNameManager.java",
  "id": 1135,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionContext.java",
    "startLineNumber": 114,
    "lines": "diagnosticsVariables =\n            new Object[ExpressionColumn.diagnosticsVariableTokens.length];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SessionContext.java",
    "startLineNumber": 161,
    "lines": "diagnosticsVariables =\n            new Object[ExpressionColumn.diagnosticsVariableTokens.length];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SessionContext.java, /hsqldb/src/org/hsqldb/SessionContext.java",
  "id": 1136,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1457,
    "lines": "dataType.typeCode == Types.SQL_DECIMAL\n                        || dataType.typeCode == Types.SQL_NUMERIC"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2542,
    "lines": "dataType.typeCode == Types.SQL_DECIMAL\n                            || dataType.typeCode == Types.SQL_NUMERIC"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1137,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4342,
    "lines": "parameterSet[i - 1]    = Boolean.TRUE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4407,
    "lines": "parameterSet[i - 1]    = Boolean.TRUE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4476,
    "lines": "parameterSet[i - 1]    = Boolean.TRUE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4468,
    "lines": "parameterSet[i - 1]    = Boolean.TRUE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4440,
    "lines": "parameterSet[i - 1]    = Boolean.TRUE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4337,
    "lines": "parameterSet[i - 1]    = Boolean.TRUE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4509,
    "lines": "parameterSet[i - 1]    = Boolean.TRUE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java & more ...",
  "id": 1138,
  "numClones": 7,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4295,
    "lines": "try {\n                    o = outType.convertToDefaultType(session, o);\n\n                    break;\n                } catch (HsqlException e) {\n                    JDBCUtil.throwError(e);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4269,
    "lines": "try {\n                        o = outType.convertToDefaultType(session, o);\n\n                        break;\n                    } catch (HsqlException e) {\n                        JDBCUtil.throwError(e);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 1139,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1585,
    "lines": "catch (HsqlException e) {\n                    String[] info = getConstraintInfo(c);\n\n                    refiterator.release();\n\n                    throw Error.error(null, ErrorCode.X_27000,\n                                      ErrorCode.CONSTRAINT, info);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1499,
    "lines": "catch (HsqlException e) {\n                                String[] info = getConstraintInfo(c);\n\n                                refiterator.release();\n\n                                throw Error.error(null, ErrorCode.X_27000,\n                                                  ErrorCode.CONSTRAINT, info);\n                            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 1140,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/HsqlDateTime.java",
    "startLineNumber": 758,
    "lines": "ch = (i == len) ? e\n                            : format.charAt(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/HsqlDateTime.java",
    "startLineNumber": 698,
    "lines": "ch = (i == len) ? e\n                            : format.charAt(i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/HsqlDateTime.java, /hsqldb/src/org/hsqldb/HsqlDateTime.java",
  "id": 1141,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3808,
    "lines": "List<String[]>    rows        = new ArrayList<String[]>();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4396,
    "lines": "List<String[]> rows = new ArrayList<String[]>();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1142,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 393,
    "lines": "if (nodes[LEFT].dataType == null) {\n                throw Error.error(ErrorCode.X_42567);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 85,
    "lines": "if (nodes[LEFT].dataType == null) {\n            throw Error.error(ErrorCode.X_42567);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 428,
    "lines": "if (nodes[LEFT].dataType == null) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 504,
    "lines": "if (nodes[LEFT].dataType == null) {\n                        throw Error.error(ErrorCode.X_42567);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionAccessor.java & more ...",
  "id": 1143,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 481,
    "lines": "otherData != null\n                    && fullIndex.compareRowNonUnique(\n                        session, currentData, otherData,\n                        fullIndex.getColumnCount()) == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 422,
    "lines": "otherData != null\n                    && fullIndex.compareRowNonUnique(\n                        session, currentData, otherData,\n                        fullIndex.getColumnCount()) == 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
  "id": 1144,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlTaskQueue.java",
    "startLineNumber": 64,
    "lines": "protected synchronized void clearThread() {\n\n        try {\n            taskRunnerThread.setContextClassLoader(null);\n        } catch (Throwable t) {}\n\n        taskRunnerThread = null;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlTimer.java",
    "startLineNumber": 481,
    "lines": "/** Sets the background thread to null. */\n    protected synchronized void clearThread() {\n\n        try {\n            taskRunnerThread.setContextClassLoader(null);\n        } catch (Throwable t) {}\n\n        taskRunnerThread = null;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlTaskQueue.java, /hsqldb/src/org/hsqldb/lib/HsqlTimer.java",
  "id": 1145,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1103,
    "lines": "if (currentTable.triggerLists[Trigger.UPDATE_AFTER_ROW].length\n                        > 0) {\n                    hasAfterRowTriggers = true;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1347,
    "lines": "if (currentTable.triggerLists[Trigger.UPDATE_AFTER_ROW]\n                                .length > 0) {\n                            hasAfterRowTriggers = true;\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 1146,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 781,
    "lines": "long rate = (i * 1000) / (time + 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 869,
    "lines": "long rate = (i * 1000) / (time + 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 739,
    "lines": "long rate = (i * 1000) / (time + 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 827,
    "lines": "long rate = (i * 1000) / (time + 1);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java & more ...",
  "id": 1147,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1267,
    "lines": "Boolean result = (Boolean) nodes[LEFT].getValue(session);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 845,
    "lines": "Boolean result = (Boolean) nodes[LEFT].getValue(session);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionOp.java",
  "id": 1148,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 313,
    "lines": "Type[] newTypes   = new Type[dataTypes.length];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 341,
    "lines": "Type[] newTypes   = new Type[dataTypes.length];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/RowType.java, /hsqldb/src/org/hsqldb/types/RowType.java",
  "id": 1149,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 1171,
    "lines": "if (statement != null) {\n                        Result result = statement.execute(session);\n\n                        table.insertIntoTable(session, result);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 683,
    "lines": "if (statement != null) {\n                        Result result = statement.execute(session);\n\n                        table.insertIntoTable(session, result);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchema.java, /hsqldb/src/org/hsqldb/StatementSession.java",
  "id": 1150,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 392,
    "lines": "if (!getName().isReservedName()) {\n            sb.append(Tokens.T_CONSTRAINT).append(' ');\n            sb.append(getName().statementName);\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 336,
    "lines": "if (!getName().isReservedName()) {\n                    sb.append(Tokens.T_CONSTRAINT).append(' ');\n                    sb.append(getName().statementName);\n                    sb.append(' ');\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Constraint.java, /hsqldb/src/org/hsqldb/Constraint.java",
  "id": 1151,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java",
    "startLineNumber": 58,
    "lines": "{\n\n        this.database     = table.database;\n        this.manager      = manager;\n        this.table        = table;\n        this.indexList    = table.getIndexList();\n        this.accessorList = new CachedObject[indexList.length];\n\n        manager.setStore(table, this);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 64,
    "lines": "{\n\n        this.database     = table.database;\n        this.manager      = manager;\n        this.table        = table;\n        this.indexList    = table.getIndexList();\n        this.accessorList = new CachedObject[indexList.length];\n\n        manager.setStore(table, this);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
  "id": 1152,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 220,
    "lines": "if (arra.length > maxCardinality) {\n            throw Error.error(ErrorCode.X_2202F);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 190,
    "lines": "if (arra.length > maxCardinality) {\n            throw Error.error(ErrorCode.X_2202F);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ArrayType.java, /hsqldb/src/org/hsqldb/types/ArrayType.java",
  "id": 1153,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 583,
    "lines": "Expression[] args = new Expression[]{ e };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 556,
    "lines": "Expression[] args = new Expression[]{ e };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 1154,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 80,
    "lines": "c\n                .core.deleteAction == SchemaObject.ReferentialAction\n                .SET_DEFAULT"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 104,
    "lines": "c.core.deleteAction\n               == SchemaObject.ReferentialAction.SET_DEFAULT"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 1155,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2412,
    "lines": "private static final String[] oracleSysSchemas = {\n        \"SYS\", \"SYSTEM\", \"OUTLN\", \"DBSNMP\", \"OUTLN\", \"MDSYS\", \"ORDSYS\",\n        \"ORDPLUGINS\", \"CTXSYS\", \"DSSYS\", \"PERFSTAT\", \"WKPROXY\", \"WKSYS\",\n        \"WMSYS\", \"XDB\", \"ANONYMOUS\", \"ODM\", \"ODM_MTR\", \"OLAPSYS\", \"TRACESVR\",\n        \"REPADMIN\"\n    };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3172,
    "lines": "/**\n     * SYS and SYSTEM are the only base system accounts in Oracle, however,\n     * from an empirical perspective, all of these other accounts are\n     * system accounts because <UL>\n     * <LI> they are hidden from the casual user\n     * <LI> they are created by the installer at installation-time\n     * <LI> they are used automatically by the Oracle engine when the\n     *      specific Oracle sub-product is used\n     * <LI> the accounts should not be <I>messed with</I> by database users\n     * <LI> the accounts should certainly not be used if the specific\n     *      Oracle sub-product is going to be used.\n     * </UL>\n     *\n     * General advice:  If you aren't going to use an Oracle sub-product,\n     * then <B>don't install it!</B>\n     * Don't blindly accept default when running OUI.\n     *\n     * If users also see accounts that they didn't create with names like\n     * SCOTT, ADAMS, JONES, CLARK, BLAKE, OE, PM, SH, QS, QS_*, these\n     * contain sample data and the schemas can safely be removed.\n     */\n    private static final String[] oracleSysSchemas = {\n        \"SYS\", \"SYSTEM\", \"OUTLN\", \"DBSNMP\", \"OUTLN\", \"MDSYS\", \"ORDSYS\",\n        \"ORDPLUGINS\", \"CTXSYS\", \"DSSYS\", \"PERFSTAT\", \"WKPROXY\", \"WKSYS\",\n        \"WMSYS\", \"XDB\", \"ANONYMOUS\", \"ODM\", \"ODM_MTR\", \"OLAPSYS\", \"TRACESVR\",\n        \"REPADMIN\"\n    };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1156,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5594,
    "lines": "c = new ExpressionOp(OpTypes.CASEWHEN, condition, alternative);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5559,
    "lines": "c = new ExpressionOp(OpTypes.CASEWHEN, condition, alternative);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1157,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileInJar.java",
    "startLineNumber": 146,
    "lines": "if (bufferDirty || seekPosition < bufferOffset\n                || seekPosition >= bufferOffset + buffer.length) {\n            readIntoBuffer();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileInJar.java",
    "startLineNumber": 163,
    "lines": "if (bufferDirty || seekPosition < bufferOffset\n                || seekPosition >= bufferOffset + buffer.length) {\n            readIntoBuffer();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileInJar.java",
    "startLineNumber": 121,
    "lines": "if (bufferDirty || seekPosition < bufferOffset\n                || seekPosition >= bufferOffset + buffer.length) {\n            readIntoBuffer();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RAFileInJar.java, /hsqldb/src/org/hsqldb/persist/RAFileInJar.java & more ...",
  "id": 1158,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java",
    "startLineNumber": 189,
    "lines": "{\n                    int index = rangeVarSet.getIndex(range);\n\n                    if (index > 0) {\n                        rangeVariables[index].isLeftJoin      = false;\n                        rangeVariables[index - 1].isRightJoin = false;\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java",
    "startLineNumber": 177,
    "lines": "{\n                    int index = rangeVarSet.getIndex(range);\n\n                    if (index > 0) {\n                        rangeVariables[index].isLeftJoin      = false;\n                        rangeVariables[index - 1].isRightJoin = false;\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariableResolver.java, /hsqldb/src/org/hsqldb/RangeVariableResolver.java",
  "id": 1159,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 311,
    "lines": "public void write(RowOutputInterface out,\n                      ResultMetaData meta) throws IOException {\n\n        reset();\n        out.writeLong(id);\n        out.writeInt(size);\n        out.writeInt(0);    // offset\n        out.writeInt(size);\n\n        while (hasNext()) {\n            Object[] data = getNext();\n\n            out.writeData(meta.getExtendedColumnCount(), meta.columnTypes,\n                          data, null, null);\n        }\n\n        reset();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 295,
    "lines": "public void write(RowOutputInterface out,\n                      ResultMetaData meta) throws IOException {\n\n        reset();\n        out.writeLong(id);\n        out.writeInt(size);\n        out.writeInt(0);    // offset\n        out.writeInt(size);\n\n        while (hasNext()) {\n            Object[] data = getNext();\n\n            out.writeData(meta.getExtendedColumnCount(), meta.columnTypes,\n                          data, null, null);\n        }\n\n        reset();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
  "id": 1160,
  "numClones": 2,
  "cloneSize": 14
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 438,
    "lines": "nodes[LEFT].dataType.typeComparisonGroup\n                        != nodes[RIGHT].dataType.typeComparisonGroup"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 979,
    "lines": "nodes[LEFT].dataType.typeComparisonGroup\n                    != nodes[RIGHT].dataType.typeComparisonGroup"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 905,
    "lines": "nodes[LEFT].dataType.typeComparisonGroup\n                    != nodes[RIGHT].dataType.typeComparisonGroup"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java & more ...",
  "id": 1161,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 152,
    "lines": "public String getString(int i1, int i2, int i3) {\n        return vrb.getString(this, i1, i2, i3);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 317,
    "lines": "public String getString(int i1, int i2, int i3) {\n        return vrb.getString(this, i1, i2, i3);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/RB.java, /hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
  "id": 1162,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 642,
    "lines": "{\n                if (head == null) {\n                    head = tail = action;\n                } else {\n                    tail.next = action;\n                    tail      = action;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 718,
    "lines": "{\n                if (head == null) {\n                    head = tail = action;\n                } else {\n                    tail.next = action;\n                    tail      = action;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAction.java, /hsqldb/src/org/hsqldb/RowAction.java",
  "id": 1163,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1261,
    "lines": "if (byteLimitOffset == 0) {\n            byteLimitOffset = lobBlockSize;\n        } else {\n            blockLimit++;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1476,
    "lines": "if (byteLimitOffset == 0) {\n            byteLimitOffset = lobBlockSize;\n        } else {\n            blockLimit++;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1379,
    "lines": "if (byteLimitOffset == 0) {\n            byteLimitOffset = lobBlockSize;\n        } else {\n            blockLimit++;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 1164,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAggregate.java",
    "startLineNumber": 144,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionTable.java",
    "startLineNumber": 82,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSet.java",
    "startLineNumber": 276,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSimple.java",
    "startLineNumber": 112,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOrderBy.java",
    "startLineNumber": 138,
    "lines": "for (int i = 0; i < blanks; i++) {\n                sb.append(' ');\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLike.java",
    "startLineNumber": 353,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 135,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 160,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 207,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementExpression.java",
    "startLineNumber": 123,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 2113,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 284,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 384,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 181,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 807,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 524,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionValue.java",
    "startLineNumber": 87,
    "lines": "for (int i = 0; i < blanks; i++) {\n            sb.append(' ');\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionAggregate.java, /hsqldb/src/org/hsqldb/ExpressionTable.java & more ...",
  "id": 1165,
  "numClones": 17,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 297,
    "lines": "if (baseTable.identitySequence.isAlways()) {\n                if (!overridingUser && !overridingSystem) {\n                    throw Error.error(ErrorCode.X_42543);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 230,
    "lines": "if (baseTable.identitySequence.isAlways()) {\n                                    if (!overridingUser && !overridingSystem) {\n                                        throw Error.error(ErrorCode.X_42543);\n                                    }\n                                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDML.java",
  "id": 1166,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 672,
    "lines": "{\n            Object[] data = getLobHeader(lobID);\n\n            if (data == null) {\n                throw Error.error(ErrorCode.X_0F502);\n            }\n\n            long length = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();\n            int  type   = ((Integer) data[LOB_IDS.LOB_TYPE]).intValue();\n\n            return ResultLob.newLobSetResponse(lobID, length);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1154,
    "lines": "{\n            Object[] data = getLobHeader(lobID);\n\n            if (data == null) {\n                throw Error.error(ErrorCode.X_0F502);\n            }\n\n            long length = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();\n            int  type   = ((Integer) data[LOB_IDS.LOB_TYPE]).intValue();\n\n            return ResultLob.newLobSetResponse(lobID, length);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1167,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6055,
    "lines": "if (newVal.length() < 1)\n                    throw new BadSpecial(SqltoolRB.macrodef_empty.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 6011,
    "lines": "if (newVal.length() < 1)\n                    throw new BadSpecial(SqltoolRB.macrodef_empty.getString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1168,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1362,
    "lines": "if (!nodes[1].dataType.isIntegralType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2522,
    "lines": "if (!nodes[1].dataType.isIntegralType()) {\n                        throw Error.error(ErrorCode.X_42563);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1169,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 1021,
    "lines": "{\n                        if (matchIndex < 0) {\n                            matchIndex = i;\n                        } else if (session.database.sqlEnforceRefs) {\n                            String message = getColumnName();\n\n                            throw Error.error(ErrorCode.X_42580, message);\n                        }\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 1038,
    "lines": "{\n                            if (matchIndex < 0) {\n                                matchIndex = i;\n                            } else if (session.database.sqlEnforceRefs) {\n                                String message = getColumnName();\n\n                                throw Error.error(ErrorCode.X_42580, message);\n                            }\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 1051,
    "lines": "{\n                            if (matchIndex < 0) {\n                                matchIndex = i;\n                            } else if (session.database.sqlEnforceRefs) {\n                                String message = getColumnName();\n\n                                throw Error.error(ErrorCode.X_42580, message);\n                            }\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionColumn.java, /hsqldb/src/org/hsqldb/ExpressionColumn.java & more ...",
  "id": 1170,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 687,
    "lines": "boolean  cascade = ((Boolean) arguments[2]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 731,
    "lines": "boolean  cascade = ((Boolean) arguments[2]).booleanValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchema.java, /hsqldb/src/org/hsqldb/StatementSchema.java",
  "id": 1171,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 954,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                set = nodes[i].collectRangeVariables(set);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 916,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                set = nodes[i].collectRangeVariables(set);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionColumn.java, /hsqldb/src/org/hsqldb/Expression.java",
  "id": 1172,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4594,
    "lines": "tokens[0] == null || tokens[2] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4608,
    "lines": "tokens[0] == null || tokens[2] == null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4584,
    "lines": "tokens[0] == null || tokens[2] == null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1173,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 514,
    "lines": "if (foreignKeyName.length() > 0) {\n                                alterCreate +=\n                                    \" (\"\n                                    + Dest.helper.formatIdentifier(\n                                        foreignKeyName.substring(\n                                            0, foreignKeyName.length()\n                                            - 1)) + \")\";\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 579,
    "lines": "if (foreignKeyName.length() > 0) {\n                    alterCreate +=\n                        \" (\"\n                        + Dest.helper.formatIdentifier(\n                            foreignKeyName.substring(\n                                0, foreignKeyName.length() - 1)) + \")\";\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferDb.java, /hsqldb/src/org/hsqldb/util/TransferDb.java",
  "id": 1174,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 459,
    "lines": "java.util.Iterator uIt = uMap.keySet().iterator();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 492,
    "lines": "java.util.Iterator uIt = uMap.keySet().iterator();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 364,
    "lines": "java.util.Iterator uIt = uMap.keySet().iterator();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java, /hsqldb/src/org/hsqldb/test/TestHashStructures.java & more ...",
  "id": 1175,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 77,
    "lines": "//------------------------------------------------------------\n    // Class methods\n    //------------------------------------------------------------\n    protected static Connection getJDBCConnection() throws SQLException {\n        return DriverManager.getConnection(databaseURL, databaseUser,\n                                           databasePassword);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestGroupByHaving.java",
    "startLineNumber": 76,
    "lines": "//------------------------------------------------------------\n    // Class methods\n    //------------------------------------------------------------\n    protected static Connection getJDBCConnection() throws SQLException {\n        return DriverManager.getConnection(databaseURL, databaseUser,\n                                           databasePassword);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSubselect.java, /hsqldb/src/org/hsqldb/test/TestGroupByHaving.java",
  "id": 1176,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDatabaseMetaData.java",
    "startLineNumber": 117,
    "lines": "for (i = 0; rs.next(); i++) {\n                String tempstr =\n                    rs.getString(\"TABLE_NAME\").trim().toLowerCase();\n\n                tablesarr.add(tempstr);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDatabaseMetaData.java",
    "startLineNumber": 160,
    "lines": "for (i = 0; rs.next(); i++) {\n                String tempstr =\n                    rs.getString(\"TABLE_NAME\").trim().toLowerCase();\n\n                tablesarr.add(tempstr);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDatabaseMetaData.java, /hsqldb/src/org/hsqldb/test/TestDatabaseMetaData.java",
  "id": 1177,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2978,
    "lines": "if (schemaObject.getName().type != SchemaObject.TABLE) {\n                    throw this.unexpectedTokenRequire(Tokens.T_CHECK);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2955,
    "lines": "if (schemaObject.getName().type != SchemaObject.TABLE) {\n                    throw this.unexpectedTokenRequire(Tokens.T_CHECK);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2923,
    "lines": "if (schemaObject.getName().type != SchemaObject.TABLE) {\n                    throw this.unexpectedTokenRequire(Tokens.T_CHECK);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 1178,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3401,
    "lines": "if (!nodes[0].dataType.isCharacterType()\n                        || !nodes[1].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2623,
    "lines": "if (!nodes[0].dataType.isCharacterType()\n                        || !nodes[1].dataType.isCharacterType()) {\n                    throw Error.error(ErrorCode.X_42567);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1179,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Document.java",
    "startLineNumber": 239,
    "lines": "OutputStreamWriter osr = isEncoding(encoding)\n                    ? new OutputStreamWriter(os, encoding)\n                    : new OutputStreamWriter(os);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Document.java",
    "startLineNumber": 246,
    "lines": "OutputStreamWriter osr = isEncoding(encoding)\n                    ? new OutputStreamWriter(os, encoding)\n                    : new OutputStreamWriter(os);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Document.java",
    "startLineNumber": 254,
    "lines": "OutputStreamWriter osr = isEncoding(encoding)\n                    ? new OutputStreamWriter(os, encoding)\n                    : new OutputStreamWriter(os);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/preprocessor/Document.java, /hsqldb/src/org/hsqldb/util/preprocessor/Document.java & more ...",
  "id": 1180,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2893,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_INTEGER;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2836,
    "lines": "if (nodes[0].dataType == null) {\n                        nodes[0].dataType = Type.SQL_INTEGER;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3015,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_INTEGER;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 1181,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1058,
    "lines": "{\n\n        int to = array.length;\n\n        while (--to >= offset) {\n            array[to] = value;\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1070,
    "lines": "{\n\n        int to = array.length;\n\n        while (--to >= offset) {\n            array[to] = value;\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
  "id": 1182,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/WebServerConnection.java",
    "startLineNumber": 385,
    "lines": "type == ResultConstants.DISCONNECT\n                    || type == ResultConstants.RESETSESSION"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/Servlet.java",
    "startLineNumber": 288,
    "lines": "type == ResultConstants.DISCONNECT\n                           || type == ResultConstants.RESETSESSION"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/WebServerConnection.java, /hsqldb/src/org/hsqldb/server/Servlet.java",
  "id": 1183,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/TableSpaceManagerBlocks.java",
    "startLineNumber": 142,
    "lines": "if (asBlocks) {\n            rowSize = (int) ArrayUtil.getBinaryMultipleCeiling(rowSize,\n                    DataSpaceManager.fixedBlockSizeUnit);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/TableSpaceManagerBlocks.java",
    "startLineNumber": 203,
    "lines": "if (asBlocks) {\n            rowSize = (int) ArrayUtil.getBinaryMultipleCeiling(rowSize,\n                    DataSpaceManager.fixedBlockSizeUnit);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/TableSpaceManagerBlocks.java, /hsqldb/src/org/hsqldb/persist/TableSpaceManagerBlocks.java",
  "id": 1184,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputTextLog.java",
    "startLineNumber": 465,
    "lines": "if (scanner.getTokenType() == Tokens.X_MALFORMED_BINARY_STRING) {\n            throw Error.error(ErrorCode.X_42587);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputTextLog.java",
    "startLineNumber": 427,
    "lines": "if (scanner.getTokenType() == Tokens.X_MALFORMED_BINARY_STRING) {\n            throw Error.error(ErrorCode.X_42587);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowInputTextLog.java, /hsqldb/src/org/hsqldb/rowio/RowInputTextLog.java",
  "id": 1185,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 680,
    "lines": "((Integer) data[LOB_IDS.LOB_TYPE]).intValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1103,
    "lines": "((Integer) data[LOB_IDS.LOB_TYPE]).intValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1702,
    "lines": "((Integer) data[LOB_IDS.LOB_TYPE]).intValue()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1162,
    "lines": "((Integer) data[LOB_IDS.LOB_TYPE]).intValue()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 1186,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2844,
    "lines": "{\n                        nodes[1].dataType = nodes[0].dataType;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2251,
    "lines": "{\n                    nodes[1].dataType = nodes[0].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1375,
    "lines": "{\n                    nodes[1].dataType = nodes[0].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1227,
    "lines": "{\n                        nodes[1].dataType = nodes[0].dataType;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1401,
    "lines": "{\n                    nodes[1].dataType = nodes[0].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1637,
    "lines": "{\n                        nodes[1].dataType = nodes[0].dataType;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 1187,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4897,
    "lines": "database.schemaManager.getCollation(session,\n                token.tokenString, token.namePrefix)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2924,
    "lines": "database.schemaManager.getCollation(session,\n                        token.tokenString, token.namePrefix)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 600,
    "lines": "database.schemaManager.getCollation(session,\n                        token.tokenString, token.namePrefix)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java & more ...",
  "id": 1188,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArraySort.java",
    "startLineNumber": 67,
    "lines": "if (compare < 0) {\n                high = mid;\n            } else if (compare > 0) {\n                low = mid + 1;\n            } else {\n                high  = mid;\n                found = mid;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 516,
    "lines": "if (compare < 0) {\n                high = mid;\n            } else if (compare > 0) {\n                low = mid + 1;\n            } else {\n                high  = mid;\n                found = mid;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArraySort.java, /hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
  "id": 1189,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 389,
    "lines": "deleteWhileInsert && i != 0\n                    && i % deleteWhileInsertInterval == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 239,
    "lines": "deleteWhileInsert && i != 0\n                        && i % deleteWhileInsertInterval == 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java, /hsqldb/src/org/hsqldb/test/TestAllTypes.java",
  "id": 1190,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4915,
    "lines": "if (grant) {\n            readThis(Tokens.TO);\n        } else {\n            readThis(Tokens.FROM);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4814,
    "lines": "if (grant) {\n            readThis(Tokens.TO);\n        } else {\n            readThis(Tokens.FROM);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1191,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java",
    "startLineNumber": 280,
    "lines": "sb.append(s.substring(previousEnd, matcher.start())\n                        + ((varValue == null) ? matcher.group() : varValue));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java",
    "startLineNumber": 232,
    "lines": "sb.append(s.substring(previousEnd, matcher.start())\n                        + ((varValue == null) ? matcher.group() : varValue));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java, /hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java",
  "id": 1192,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 960,
    "lines": "int      offset = parent == null ? 0\n                                         : parent.scopeVariables.size();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCompound.java",
    "startLineNumber": 946,
    "lines": "int      offset = parent == null ? 0\n                                         : parent.scopeVariables.size();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCompound.java, /hsqldb/src/org/hsqldb/StatementCompound.java",
  "id": 1193,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 339,
    "lines": "if (patternLength > Integer.MAX_VALUE) {\n            throw JDBCUtil.outOfRangeArgument(\"pattern.length(): \"\n                                          + patternLength);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 248,
    "lines": "if (patternLength > Integer.MAX_VALUE) {\n            throw JDBCUtil.outOfRangeArgument(\"pattern.length(): \"\n                                          + patternLength);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
  "id": 1194,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1595,
    "lines": "if (dataType.typeCode == Types.SQL_CHAR) {\n                        dataType = CharacterType.getCharacterType(\n                            Types.SQL_VARCHAR, dataType.precision,\n                            dataType.getCollation());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1533,
    "lines": "if (dataType.typeCode == Types.SQL_CHAR) {\n                        dataType = CharacterType.getCharacterType(\n                            Types.SQL_VARCHAR, dataType.precision,\n                            dataType.getCollation());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 1195,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 2177,
    "lines": "Statement cs = new StatementCommand(StatementTypes.DATABASE_CHECKPOINT,\n                                            args, null, names);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 2188,
    "lines": "Statement cs = new StatementCommand(StatementTypes.DATABASE_CHECKPOINT,\n                                            args, null, names);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 1196,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1074,
    "lines": "Object[] args = new Object[]{ size };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1902,
    "lines": "Object[] args = new Object[]{ size };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 716,
    "lines": "Object[] args = new Object[]{ size };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 424,
    "lines": "Object[] args = new Object[]{ size };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java & more ...",
  "id": 1197,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 433,
    "lines": "(i * 1000 / (sw.elapsedTime() + 1))"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 472,
    "lines": "(i * 1000 / (sw.elapsedTime() + 1))"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 816,
    "lines": "(i * 1000 / (sw.elapsedTime() + 1))"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 545,
    "lines": "(i * 1000 / (sw.elapsedTime() + 1))"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 909,
    "lines": "(i * 1000 / (sw.elapsedTime() + 1))"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 953,
    "lines": "(i * 1000 / (sw.elapsedTime() + 1))"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 770,
    "lines": "(i * 1000 / (sw.elapsedTime() + 1))"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 858,
    "lines": "(i * 1000 / (sw.elapsedTime() + 1))"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java & more ...",
  "id": 1198,
  "numClones": 8,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
    "startLineNumber": 159,
    "lines": "if (setting != null) {\n                    mName.setText(setting.getName());\n                    mDriver.setText(setting.getDriver());\n                    mURL.setText(setting.getUrl());\n                    mUser.setText(setting.getUser());\n                    mPassword.setText(setting.getPassword());\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java",
    "startLineNumber": 359,
    "lines": "if (setting != null) {\n                mName.setText(setting.getName());\n                mDriver.setText(setting.getDriver());\n                mURL.setText(setting.getUrl());\n                mUser.setText(setting.getUser());\n                mPassword.setText(setting.getPassword());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/ConnectionDialog.java, /hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java",
  "id": 1199,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementResultUpdate.java",
    "startLineNumber": 137,
    "lines": "if (row == null || row.isDeleted(session, store)) {\n                    throw Error.error(ErrorCode.X_24521);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementResultUpdate.java",
    "startLineNumber": 101,
    "lines": "/**\n                 * @todo - in 2PL mode isDeleted() always returns false.\n                 * While write lock prevents delete by other transactions,\n                 * same-transaction deletes are not caught\n                 */\n                if (row == null || row.isDeleted(session, store)) {\n                    throw Error.error(ErrorCode.X_24521);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementResultUpdate.java, /hsqldb/src/org/hsqldb/StatementResultUpdate.java",
  "id": 1200,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 638,
    "lines": "newScale = scale > other.scale ? scale\n                                               : other.scale;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 649,
    "lines": "newScale  = scale > other.scale ? scale\n                                                : other.scale;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/NumberType.java, /hsqldb/src/org/hsqldb/types/NumberType.java",
  "id": 1201,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMappedList.java",
    "startLineNumber": 207,
    "lines": "if (a == null || a.length < size) {\n            a = new Object[size];\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMappedList.java",
    "startLineNumber": 222,
    "lines": "if (a == null || a.length < size) {\n            a = new Object[size];\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HashMappedList.java, /hsqldb/src/org/hsqldb/lib/HashMappedList.java",
  "id": 1202,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 530,
    "lines": "{\n                reader = dataClob.getCharacterStream();\n\n                ps.setString(1, \"test-id-1\" + i);\n                ps.setLong(2, 23456789123456L + i);\n                ps.setCharacterStream(3, reader, dataClob.length());\n                ps.setString(4, \"test-scope-1\" + i);\n                ps.executeUpdate();\n                connection.commit();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 603,
    "lines": "{\n                reader = dataClob.getCharacterStream();\n\n                ps.setString(1, \"test-id-1\" + i);\n                ps.setLong(2, 23456789123456L + i);\n                ps.setCharacterStream(3, reader, dataClob.length());\n                ps.setString(4, \"test-scope-1\" + i);\n                ps.executeUpdate();\n                connection.commit();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLobs.java, /hsqldb/src/org/hsqldb/test/TestLobs.java",
  "id": 1203,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1618,
    "lines": "{\n                    int pos = sqlString.indexOf('\\r', currentPosition + 2);\n\n                    if (pos == -1) {\n                        pos = sqlString.indexOf('\\n', currentPosition + 2);\n                    }\n\n                    if (pos == -1) {\n                        pos = limit;\n                    }\n\n                    token.tokenString = sqlString.substring(currentPosition\n                            + 2, pos);\n                    token.tokenType   = Tokens.X_REMARK;\n                    token.isDelimiter = true;\n\n                    return;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1570,
    "lines": "{\n                    int pos = sqlString.indexOf('\\r', currentPosition + 2);\n\n                    if (pos == -1) {\n                        pos = sqlString.indexOf('\\n', currentPosition + 2);\n                    }\n\n                    if (pos == -1) {\n                        pos = limit;\n                    }\n\n                    token.tokenString = sqlString.substring(currentPosition\n                            + 2, pos);\n                    token.tokenType   = Tokens.X_REMARK;\n                    token.isDelimiter = true;\n\n                    return;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 1204,
  "numClones": 2,
  "cloneSize": 14
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1299,
    "lines": "Boolean r2 = (Boolean) nodes[RIGHT].getValue(session);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1280,
    "lines": "Boolean r2 = (Boolean) nodes[RIGHT].getValue(session);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1205,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5691,
    "lines": "if (refName.type != SchemaObject.TABLE\n                        && refName.type != SchemaObject.VIEW) {\n                    continue;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8341,
    "lines": "if (refName.type != SchemaObject.TABLE\n                        && refName.type != SchemaObject.VIEW) {\n                    continue;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7164,
    "lines": "if (refName.type != SchemaObject.TABLE\n                        && refName.type != SchemaObject.VIEW) {\n                    continue;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1206,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 2663,
    "lines": "if (length < 0) {\n            throw JDBCUtil.sqlException(ErrorCode.JDBC_INVALID_ARGUMENT,\n                                    \"length: \" + length);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 2736,
    "lines": "if (length < 0) {\n            throw JDBCUtil.sqlException(ErrorCode.JDBC_INVALID_ARGUMENT,\n                                    \"length: \" + length);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 2601,
    "lines": "if (length < 0) {\n            throw JDBCUtil.sqlException(ErrorCode.JDBC_INVALID_ARGUMENT,\n                                    \"length: \" + length);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java & more ...",
  "id": 1207,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobInputStream.java",
    "startLineNumber": 115,
    "lines": "public int available() {\n\n        long avail = availableLength - currentPosition;\n\n        if (avail > Integer.MAX_VALUE) {\n            return Integer.MAX_VALUE;\n        }\n\n        return (int) avail;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobInputStream.java",
    "startLineNumber": 134,
    "lines": "public int available() {\n\n        long avail = availableLength - currentPosition;\n\n        if (avail > Integer.MAX_VALUE) {\n            return Integer.MAX_VALUE;\n        }\n\n        return (int) avail;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobInputStream.java, /hsqldb/src/org/hsqldb/types/ClobInputStream.java",
  "id": 1208,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 190,
    "lines": "String       left  = getContextSQL(nodes.length > 0 ? nodes[LEFT]\n                                                            : null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAggregate.java",
    "startLineNumber": 71,
    "lines": "String       left = getContextSQL(nodes.length > 0 ? nodes[LEFT]\n                                                           : null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 109,
    "lines": "String left  = getContextSQL(nodes.length > 0 ? nodes[LEFT]\n                                                      : null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 101,
    "lines": "String       left = getContextSQL(nodes.length > 0 ? nodes[LEFT]\n                                                           : null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionOp.java, /hsqldb/src/org/hsqldb/ExpressionAggregate.java & more ...",
  "id": 1209,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 236,
    "lines": "//\n            sb.append(Tokens.T_START).append(' ');\n            sb.append(Tokens.T_WITH).append(' ');\n            sb.append(startValue);\n\n            if (getIncrement() != 1) {\n                sb.append(' ').append(Tokens.T_INCREMENT).append(' ');\n                sb.append(Tokens.T_BY).append(' ');\n                sb.append(getIncrement());\n            }\n\n            if (!hasDefaultMinMax()) {\n                sb.append(' ').append(Tokens.T_MINVALUE).append(' ');\n                sb.append(getMinValue());\n                sb.append(' ').append(Tokens.T_MAXVALUE).append(' ');\n                sb.append(getMaxValue());\n            }\n\n            if (isCycle()) {\n                sb.append(' ').append(Tokens.T_CYCLE);\n            }\n\n            if (name == null) {\n                sb.append(Tokens.T_CLOSEBRACKET);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 191,
    "lines": "//\n        sb.append(Tokens.T_START).append(' ');\n        sb.append(Tokens.T_WITH).append(' ');\n        sb.append(startValue);\n\n        if (getIncrement() != 1) {\n            sb.append(' ').append(Tokens.T_INCREMENT).append(' ');\n            sb.append(Tokens.T_BY).append(' ');\n            sb.append(getIncrement());\n        }\n\n        if (!hasDefaultMinMax()) {\n            sb.append(' ').append(Tokens.T_MINVALUE).append(' ');\n            sb.append(getMinValue());\n            sb.append(' ').append(Tokens.T_MAXVALUE).append(' ');\n            sb.append(getMaxValue());\n        }\n\n        if (isCycle()) {\n            sb.append(' ').append(Tokens.T_CYCLE);\n        }\n\n        if (name == null) {\n            sb.append(Tokens.T_CLOSEBRACKET);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/NumberSequence.java, /hsqldb/src/org/hsqldb/NumberSequence.java",
  "id": 1210,
  "numClones": 2,
  "cloneSize": 20
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAcl.java",
    "startLineNumber": 247,
    "lines": "junit.textui.TestRunner runner = new junit.textui.TestRunner();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDbBackup.java",
    "startLineNumber": 226,
    "lines": "junit.textui.TestRunner runner = new junit.textui.TestRunner();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSchemaParse.java",
    "startLineNumber": 988,
    "lines": "junit.textui.TestRunner runner = new junit.textui.TestRunner();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/AbstractTestOdbc.java",
    "startLineNumber": 215,
    "lines": "junit.textui.TestRunner runner = new junit.textui.TestRunner();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestAcl.java, /hsqldb/src/org/hsqldb/test/TestDbBackup.java & more ...",
  "id": 1211,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 611,
    "lines": "if (SqlInvariants.isLobsSchemaName(name.name)\n                || SqlInvariants.isSystemSchemaName(name.name)) {\n            throw Error.error(ErrorCode.X_28502, name.name);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 590,
    "lines": "if (SqlInvariants.isLobsSchemaName(name.name)\n                || SqlInvariants.isSystemSchemaName(name.name)) {\n            throw Error.error(ErrorCode.X_28502, name.name);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java, /hsqldb/src/org/hsqldb/rights/GranteeManager.java",
  "id": 1212,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 414,
    "lines": "otherType.typeCode == Types.SQL_ALL_TYPES\n               || otherType.isBinaryType()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 527,
    "lines": "otherType.typeCode == Types.SQL_ALL_TYPES\n               || otherType.isBinaryType()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BitType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java",
  "id": 1213,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputBinary180.java",
    "startLineNumber": 67,
    "lines": "{\n            long millis = o.getSeconds() * 1000L;\n\n            millis = HsqlDateTime.convertMillisToCalendar(tempCalDefault,\n                    millis);\n\n            writeLong(millis);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputBinary180.java",
    "startLineNumber": 56,
    "lines": "{\n\n        long millis = o.getSeconds() * 1000L;\n\n        millis = HsqlDateTime.convertMillisToCalendar(tempCalDefault, millis);\n\n        writeLong(millis);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowOutputBinary180.java, /hsqldb/src/org/hsqldb/rowio/RowOutputBinary180.java",
  "id": 1214,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
    "startLineNumber": 165,
    "lines": "Connection c  = newConnection();\n            Statement  st = c.createStatement();\n            String     s  = \"DROP TABLE T IF EXISTS\";\n\n            st.execute(s);\n\n            s = \"CREATE TABLE T (I INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 33), C CHARACTER(10))\";\n\n            st.execute(s);\n\n            s = \"INSERT INTO T (C) VALUES('TEST')\";"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
    "startLineNumber": 51,
    "lines": "Connection c  = newConnection();\n            Statement  st = c.createStatement();\n            String     s  = \"DROP TABLE T IF EXISTS\";\n\n            st.execute(s);\n\n            s = \"CREATE TABLE T (I INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 33), C CHARACTER(10))\";\n\n            st.execute(s);\n\n            s = \"INSERT INTO T (C) VALUES('TEST')\";"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java, /hsqldb/src/org/hsqldb/test/TestJDBCGeneratedColumns.java",
  "id": 1215,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 222,
    "lines": "if (result.isError()) {\n            result.getException().setStatementType(group, type);\n\n            return result;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 244,
    "lines": "if (result.isError()) {\n            result.getException().setStatementType(group, type);\n\n            return result;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 273,
    "lines": "if (result.isError()) {\n            result.getException().setStatementType(group, type);\n\n            return result;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementSession.java & more ...",
  "id": 1216,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 614,
    "lines": "if (getLeftNode() != null) {\n            sb.append(\" arg_left=[\");\n            sb.append(nodes[LEFT].describe(session, blanks + 1));\n            sb.append(']');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 217,
    "lines": "if (getLeftNode() != null) {\n            sb.append(\" arg_left=[\");\n            sb.append(nodes[LEFT].describe(session, blanks + 1));\n            sb.append(']');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 328,
    "lines": "if (getLeftNode() != null) {\n            sb.append(\" arg_left=[\");\n            sb.append(nodes[LEFT].describe(session, blanks + 1));\n            sb.append(']');\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionArithmetic.java & more ...",
  "id": 1217,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 523,
    "lines": "{\n            for (int j = 0; j < arrb.length; j++) {\n                if (arra[i] == arrb[j]) {\n                    k++;\n\n                    break;\n                }\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 505,
    "lines": "{\n            for (int j = 0; j < arrb.length; j++) {\n                if (arra[i] == arrb[j]) {\n                    k++;\n\n                    break;\n                }\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
  "id": 1218,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 437,
    "lines": "return o == null ? false\n                         : ((Boolean) o).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 506,
    "lines": "return o == null ? false\n                         : ((Boolean) o).booleanValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 1219,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4122,
    "lines": "condlPrint(((j > 0) ? \"  \" : \"\")\n                                    + ((j < fieldArray.length - 1\n                                        || rightJust[j])\n                                       ? StringUtil.toPaddedString(\n                                         fieldArray[j], maxWidth[j],\n                                         ' ', !rightJust[j])\n                                       : fieldArray[j])\n                                    , false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4508,
    "lines": "condlPrint(((j > 0) ? \"  \" : \"\")\n                            + ((j < fieldArray.length - 1 || rightJust[j])\n                               ? StringUtil.toPaddedString(\n                                 fieldArray[j], maxWidth[j], ' ', !rightJust[j])\n                               : fieldArray[j])\n                            , false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1220,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4454,
    "lines": "return new StatementSchema(sql,\n                                               StatementTypes.ALTER_DOMAIN,\n                                               args, null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4520,
    "lines": "return new StatementSchema(sql,\n                                               StatementTypes.ALTER_DOMAIN,\n                                               args, null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4475,
    "lines": "return new StatementSchema(sql,\n                                               StatementTypes.ALTER_DOMAIN,\n                                               args, null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4495,
    "lines": "return new StatementSchema(sql, StatementTypes.ALTER_DOMAIN,\n                                           args, null, writeLockNames);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 1221,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 471,
    "lines": "if (isObjectKey) {\n            if (objectKey == null) {\n                return null;\n            }\n\n            if (comparator == null) {\n                hash = objectKey.hashCode();\n            } else {\n                hash = comparator.hashCode(objectKey);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 312,
    "lines": "if (isObjectKey) {\n            if (objectKey == null) {\n                return null;\n            }\n\n            if (comparator == null) {\n                hash = objectKey.hashCode();\n            } else {\n                hash = comparator.hashCode(objectKey);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 1222,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 183,
    "lines": "int result = (word & mask) == 0 ? 0\n                                        : 1;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 209,
    "lines": "int result = (word & mask) == 0 ? 0\n                                        : 1;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BitMap.java, /hsqldb/src/org/hsqldb/map/BitMap.java",
  "id": 1223,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2121,
    "lines": "if (read == -1) {\n                        return Result.newErrorResult(new EOFException());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1504,
    "lines": "if (read == -1) {\n                            return Result.newErrorResult(new EOFException());\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1224,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1226,
    "lines": "nodes[0].dataType.typeCode == Types.SQL_CLOB\n                            || nodes[0].dataType.isBinaryType()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1636,
    "lines": "nodes[0].dataType.typeCode == Types.SQL_CLOB\n                            || nodes[0].dataType.isBinaryType()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 1225,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterBase.java",
    "startLineNumber": 279,
    "lines": "catch (IOException e) {\n            throw Error.error(e, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_Message_Pair, new Object[] {\n                e.toString(), outFile\n            });\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterText.java",
    "startLineNumber": 134,
    "lines": "catch (IOException e) {\n                throw Error.error(e, ErrorCode.FILE_IO_ERROR,\n                                  ErrorCode.M_Message_Pair, new Object[] {\n                    e.toString(), outFile\n                });\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterEncode.java",
    "startLineNumber": 85,
    "lines": "catch (IOException e) {\n            throw Error.error(e, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_Message_Pair, new Object[] {\n                e.toString(), outFile\n            });\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterEncode.java",
    "startLineNumber": 68,
    "lines": "catch (IOException e) {\n            throw Error.error(e, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_Message_Pair, new Object[] {\n                e.toString(), outFile\n            });\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterEncode.java",
    "startLineNumber": 112,
    "lines": "catch (IOException e) {\n            throw Error.error(e, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_Message_Pair, new Object[] {\n                e.toString(), outFile\n            });\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterBase.java, /hsqldb/src/org/hsqldb/scriptio/ScriptWriterText.java & more ...",
  "id": 1226,
  "numClones": 5,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1414,
    "lines": "boolean isForward = c.core.mainTable.getSchemaName()\n                            != table.getSchemaName();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 379,
    "lines": "boolean isForward = c.core.mainTable.getSchemaName()\n                                        != table.getSchemaName();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 1227,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestTriggers.java",
    "startLineNumber": 79,
    "lines": "try {\n            runStatements();\n        } catch (SQLException e) {\n            e.printStackTrace();\n            assertTrue(false);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestTriggers.java",
    "startLineNumber": 100,
    "lines": "try {\n            runStatements();\n        } catch (SQLException e) {\n            e.printStackTrace();\n            assertTrue(false);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestTriggers.java, /hsqldb/src/org/hsqldb/test/TestTriggers.java",
  "id": 1228,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 483,
    "lines": "{\n                        if (!cast) {\n                            throw Error.error(ErrorCode.X_22001);\n                        }\n\n                        session.addWarning(Error.error(ErrorCode.W_01004));\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 518,
    "lines": "{\n\n                    // todo nonSpaceLength() not yet implemented for CLOB\n                    if (!cast) {\n                        throw Error.error(ErrorCode.X_22001);\n                    }\n\n                    session.addWarning(Error.error(ErrorCode.W_01004));\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 299,
    "lines": "{\n            if (!cast) {\n                throw Error.error(ErrorCode.X_22001);\n            }\n\n            session.addWarning(Error.error(ErrorCode.W_01004));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 451,
    "lines": "{\n            if (!cast) {\n                throw Error.error(ErrorCode.X_22001);\n            }\n\n            session.addWarning(Error.error(ErrorCode.W_01004));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java & more ...",
  "id": 1229,
  "numClones": 4,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1828,
    "lines": "if (i != -1) {\n                sql = all.substring(0, i);\n                all = all.substring(i + 1);\n            } else {\n                sql = all;\n                all = \"\";\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1005,
    "lines": "if (i != -1) {\n                sql = all.substring(0, i);\n                all = all.substring(i + 1);\n            } else {\n                sql = all;\n                all = \"\";\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java",
  "id": 1230,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileDefrag.java",
    "startLineNumber": 196,
    "lines": "if (pos == -1) {\n                throw Error.error(ErrorCode.DATA_FILE_ERROR);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 396,
    "lines": "if (pos == -1) {\n                    throw Error.error(ErrorCode.DATA_FILE_ERROR);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileDefrag.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
  "id": 1231,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1486,
    "lines": "Table t = getTable(session, name.parent.name,\n                               name.parent.schema.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1504,
    "lines": "Table t = getTable(session, name.parent.name,\n                               name.parent.schema.name);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 1232,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 158,
    "lines": "public String getString(String s1, int i2) {\n        return vrb.getString(this, s1, i2);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 323,
    "lines": "public String getString(String s1, int i2) {\n        return vrb.getString(this, s1, i2);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/RB.java, /hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
  "id": 1233,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 197,
    "lines": "catch (NoSuchProviderException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 101,
    "lines": "catch (NoSuchProviderException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Crypto.java, /hsqldb/src/org/hsqldb/persist/Crypto.java",
  "id": 1234,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 502,
    "lines": "{\n                        ClobData clob =\n                            session.createClob(((String) a).length());\n\n                        clob.setString(session, 0, (String) a);\n\n                        return clob;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobType.java",
    "startLineNumber": 159,
    "lines": "{\n            ClobData clob = session.createClob(((String) a).length());\n\n            clob.setString(session, 0, (String) a);\n\n            return clob;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/ClobType.java",
  "id": 1235,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1254,
    "lines": "if (!nodes[3].dataType.isNumberType()) {\n                        throw Error.error(ErrorCode.X_42563);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1704,
    "lines": "if (!nodes[3].dataType.isNumberType()) {\n                        throw Error.error(ErrorCode.X_42563);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 1236,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 479,
    "lines": "// (ulrivo): full size on screen with less than 640 width\n        if (d.width >= 640) {\n            fMain.setLocation((d.width - size.width) / 2,\n                              (d.height - size.height) / 2);\n        } else {\n            fMain.setLocation(0, 0);\n            fMain.setSize(d);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 414,
    "lines": "// (ulrivo): full size on screen with less than 640 width\n        if (d.width >= 640) {\n            fMain.setLocation((d.width - size.width) / 2,\n                              (d.height - size.height) / 2);\n        } else {\n            fMain.setLocation(0, 0);\n            fMain.setSize(d);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/Transfer.java",
  "id": 1237,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2647,
    "lines": "Row row = (Row) store.getNewCachedObject(session, data, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2679,
    "lines": "Row row = (Row) store.getNewCachedObject(session, data, true);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 1238,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1283,
    "lines": "blockAddresses[i][LOBS.BLOCK_COUNT]\n                         + blockAddresses[i][LOBS.BLOCK_OFFSET]"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1288,
    "lines": "blockAddresses[i][LOBS.BLOCK_COUNT]\n                           + blockAddresses[i][LOBS.BLOCK_OFFSET]"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1320,
    "lines": "blockAddresses[i][LOBS.BLOCK_COUNT]\n                    + blockAddresses[i][LOBS.BLOCK_OFFSET]"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1286,
    "lines": "blockAddresses[i][LOBS.BLOCK_COUNT]\n                + blockAddresses[i][LOBS.BLOCK_OFFSET]"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1322,
    "lines": "blockAddresses[i][LOBS.BLOCK_COUNT]\n                               + blockAddresses[i][LOBS.BLOCK_OFFSET]"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 1239,
  "numClones": 5,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 343,
    "lines": "catch (Exception e) {\n            try {\n                if (!destDb.getAutoCommit()) {\n                    destDb.rollback();\n                }\n            } catch (Exception e1) {}\n\n            throw (e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 289,
    "lines": "catch (Exception e) {\n            try {\n                if (!destDb.getAutoCommit()) {\n                    destDb.rollback();\n                }\n            } catch (Exception e1) {}\n\n            throw (e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 444,
    "lines": "catch (Exception e) {\n            try {\n                if (!destDb.getAutoCommit()) {\n                    destDb.rollback();\n                }\n            } catch (Exception e1) {}\n\n            throw (e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferTable.java, /hsqldb/src/org/hsqldb/util/TransferTable.java & more ...",
  "id": 1240,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java",
    "startLineNumber": 74,
    "lines": "catch (UnsupportedEncodingException e) {\n            Error.runtimeError(ErrorCode.U_S0500, \"RowOutputTextLog\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/WebServerConnection.java",
    "startLineNumber": 122,
    "lines": "catch (UnsupportedEncodingException e) {\n            Error.runtimeError(ErrorCode.U_S0500, \"RowOutputTextLog\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java, /hsqldb/src/org/hsqldb/server/WebServerConnection.java",
  "id": 1241,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 783,
    "lines": "if (scale != dec.scale()) {\n                    dec = dec.setScale(scale, BigDecimal.ROUND_HALF_DOWN);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 814,
    "lines": "if (scale != dec.scale()) {\n                        dec = dec.setScale(scale, BigDecimal.ROUND_HALF_DOWN);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 1013,
    "lines": "if (scale != dec.scale()) {\n                        dec = dec.setScale(scale, BigDecimal.ROUND_HALF_DOWN);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/NumberType.java, /hsqldb/src/org/hsqldb/types/NumberType.java & more ...",
  "id": 1242,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java",
    "startLineNumber": 147,
    "lines": "while (rs.next()) {\n            System.out.println(\"(\" + rs.getInt(1) + \",\" + rs.getInt(2) + \")\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java",
    "startLineNumber": 157,
    "lines": "while (rs.next()) {\n            System.out.println(\"(\" + rs.getInt(1) + \",\" + rs.getInt(2) + \")\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java",
    "startLineNumber": 137,
    "lines": "while (rs.next()) {\n            System.out.println(\"(\" + rs.getInt(1) + \",\" + rs.getInt(2) + \")\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java, /hsqldb/src/org/hsqldb/test/TestSubQueriesInPreparedStatements.java & more ...",
  "id": 1243,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2302,
    "lines": "// I think it's impossible to get here, since the pattern is\n            // so liberal.\n        if (m.groupCount() < 1 || m.group(1) == null) {\n            stdprintln(SqltoolRB.deprecated_noop.getString(\"*\"));\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2772,
    "lines": "// I think it's impossible to get here, since the pattern is\n            // so liberal.\n        if (m.groupCount() < 1 || m.group(1) == null) {\n            stdprintln(SqltoolRB.deprecated_noop.getString(\"*\"));\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1244,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 667,
    "lines": "synchronized (committedTransactionTimestamps) {\n                if (committedTransactionTimestamps.isEmpty()) {\n                    break;\n                }\n\n                commitTimestamp = committedTransactionTimestamps.getFirst();\n\n                if (commitTimestamp < timestamp) {\n                    committedTransactionTimestamps.removeFirst();\n\n                    actions = (Object[]) committedTransactions.removeFirst();\n                } else {\n                    break;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 437,
    "lines": "synchronized (committedTransactionTimestamps) {\n                if (committedTransactionTimestamps.isEmpty()) {\n                    break;\n                }\n\n                commitTimestamp = committedTransactionTimestamps.getFirst();\n\n                if (commitTimestamp < timestamp) {\n                    committedTransactionTimestamps.removeFirst();\n\n                    actions = (Object[]) committedTransactions.removeFirst();\n                } else {\n                    break;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java, /hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
  "id": 1245,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 912,
    "lines": "{\n                    if (session.database.sqlEnforceTypes) {\n                        throw Error.error(ErrorCode.X_42562);\n                    }\n\n                    if (nodes[LEFT].dataType.canConvertFrom(\n                            nodes[RIGHT].dataType)) {\n                        nodes[RIGHT] = ExpressionOp.getCastExpression(session,\n                                nodes[RIGHT], nodes[LEFT].dataType);\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 933,
    "lines": "{\n                    if (session.database.sqlEnforceTypes) {\n                        throw Error.error(ErrorCode.X_42562);\n                    }\n\n                    if (nodes[LEFT].dataType.canConvertFrom(\n                            nodes[RIGHT].dataType)) {\n                        nodes[RIGHT] = ExpressionOp.getCastExpression(session,\n                                nodes[RIGHT], nodes[LEFT].dataType);\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1246,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/TimeData.java",
    "startLineNumber": 93,
    "lines": "{\n\n        long diff = seconds - b.seconds;\n\n        if (diff == 0) {\n            diff = nanos - b.nanos;\n\n            if (diff == 0) {\n                return 0;\n            }\n        }\n\n        return diff > 0 ? 1\n                        : -1;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/TimestampData.java",
    "startLineNumber": 99,
    "lines": "{\n\n        long diff = seconds - b.seconds;\n\n        if (diff == 0) {\n            diff = nanos - b.nanos;\n\n            if (diff == 0) {\n                return 0;\n            }\n        }\n\n        return diff > 0 ? 1\n                        : -1;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/TimeData.java, /hsqldb/src/org/hsqldb/types/TimestampData.java",
  "id": 1247,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 1035,
    "lines": "if (statement != null) {\n                result.mainString += \" in statement [\" + statement + \"]\";\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 1058,
    "lines": "if (statement != null) {\n                result.mainString += \" in statement [\" + statement + \"]\";\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/Result.java, /hsqldb/src/org/hsqldb/result/Result.java",
  "id": 1248,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 2052,
    "lines": "if (nodes.length > 0 && nodes[0] != null) {\n                    precision = ((Number) nodes[0].valueData).intValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 2069,
    "lines": "if (nodes.length > 0 && nodes[0] != null) {\n                    precision = ((Number) nodes[0].valueData).intValue();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 1249,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4127,
    "lines": "row[ordinal_position] = ValuePool.getLong(j + 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4372,
    "lines": "row[ordinal_position] = ValuePool.getLong(j + 1);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 1250,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 118,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    DBPassword = Args[i];\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 118,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    DBPassword = Args[i];\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 1251,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SetFunction.java",
    "startLineNumber": 412,
    "lines": "if (((IntervalType) type).isDaySecondIntervalType()) {\n                            return new IntervalSecondData(bi.longValue(),\n                                                          currentLong,\n                                                          (IntervalType) type,\n                                                          true);\n                        } else {\n                            return IntervalMonthData.newIntervalMonth(\n                                bi.longValue(), (IntervalType) type);\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SetFunction.java",
    "startLineNumber": 356,
    "lines": "if (((IntervalType) type).isDaySecondIntervalType()) {\n                            return new IntervalSecondData(bi.longValue(),\n                                                          currentLong,\n                                                          (IntervalType) type,\n                                                          true);\n                        } else {\n                            return IntervalMonthData.newIntervalMonth(\n                                bi.longValue(), (IntervalType) type);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SetFunction.java, /hsqldb/src/org/hsqldb/SetFunction.java",
  "id": 1252,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 696,
    "lines": "long     aLength = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 955,
    "lines": "long     aLength = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 791,
    "lines": "long     aLength = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 887,
    "lines": "long     aLength = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 1253,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 131,
    "lines": "Number index = (Number) nodes[RIGHT].getValue(session);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 108,
    "lines": "Number index = (Number) nodes[RIGHT].getValue(session);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java, /hsqldb/src/org/hsqldb/ExpressionAccessor.java",
  "id": 1254,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
    "startLineNumber": 113,
    "lines": "public boolean remove(long key) {\n\n        int oldSize = size();\n\n        super.addOrRemove(key, 0, null, null, true);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
    "startLineNumber": 109,
    "lines": "public boolean remove(long key) {\n\n        int oldSize = size();\n\n        super.addOrRemove(key, 0, null, null, true);\n\n        return oldSize != size();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java, /hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
  "id": 1255,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 742,
    "lines": "for (int i = 0; i < ba.length; i++) {\n            assertEquals(\"Byte \" + i + \" wrong\", expectedBytes[i], ba[i]);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 778,
    "lines": "for (int i = 0; i < ba.length; i++) {\n            assertEquals(\"Byte \" + i + \" wrong\", expectedBytes[i], ba[i]);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 1256,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2986,
    "lines": "m.groupCount() > 2 && m.group(3) != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3004,
    "lines": "m.groupCount() > 2 && m.group(3) != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2972,
    "lines": "m.groupCount() > 2 && m.group(3) != null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1257,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1809,
    "lines": "params[DELETE_BLOCKS.TX_ID] =\n            ValuePool.getLong(sysLobSession.getTransactionTimestamp());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1715,
    "lines": "params[DELETE_BLOCKS.TX_ID] =\n                ValuePool.getLong(sysLobSession.getTransactionTimestamp());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1258,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 224,
    "lines": "return precision >= other.precision ? this\n                                                        : getBinaryType(\n                                                        typeCode,\n                                                        other.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 218,
    "lines": "return precision >= other.precision ? this\n                                                    : getBinaryType(typeCode,\n                                                    other.precision);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BinaryType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java",
  "id": 1259,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1335,
    "lines": "long          millis = (ts.getSeconds() + ts.getZone()) * 1000;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1363,
    "lines": "long          millis = (ts.getSeconds() + ts.getZone()) * 1000;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 1260,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlArrayList.java",
    "startLineNumber": 212,
    "lines": "if (index < 0) {\n            throw new IndexOutOfBoundsException(\"Index out of bounds: \"\n                                                + index + \" < 0\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlArrayList.java",
    "startLineNumber": 173,
    "lines": "if (index < 0) {\n            throw new IndexOutOfBoundsException(\"Index out of bounds: \"\n                                                + index + \" < 0\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlArrayList.java",
    "startLineNumber": 131,
    "lines": "if (index < 0) {\n            throw new IndexOutOfBoundsException(\"Index out of bounds: \"\n                                                + index + \" < 0\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlArrayList.java",
    "startLineNumber": 243,
    "lines": "if (index < 0) {\n            throw new IndexOutOfBoundsException(\"Index out of bounds: \"\n                                                + index + \" < 0\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlArrayList.java, /hsqldb/src/org/hsqldb/lib/HsqlArrayList.java & more ...",
  "id": 1261,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1154,
    "lines": "Object newarray =\n            Array.newInstance(source.getClass().getComponentType(), newsize);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1173,
    "lines": "Object newarray =\n            Array.newInstance(source.getClass().getComponentType(), newsize);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1197,
    "lines": "Object newarray =\n            Array.newInstance(source.getClass().getComponentType(), newsize);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java & more ...",
  "id": 1262,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 306,
    "lines": "return (result == -1) ? -1\n                              : result + 1;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 253,
    "lines": "return (result == -1) ? -1\n                              : result + 1;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
  "id": 1263,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 1119,
    "lines": "boolean mode = ((Boolean) parameters[1]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 1042,
    "lines": "boolean mode =\n                            ((Boolean) parameters[1]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 628,
    "lines": "boolean mode     = ((Boolean) parameters[1]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 1012,
    "lines": "boolean mode = ((Boolean) parameters[1]).booleanValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementCommand.java & more ...",
  "id": 1264,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 302,
    "lines": "while (e.hasMoreElements()) {\n            Client = (Thread) e.nextElement();\n\n            Client.join();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 279,
    "lines": "while (e.hasMoreElements()) {\n            Client = (Thread) e.nextElement();\n\n            Client.join();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 1265,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyHashMap.java",
    "startLineNumber": 192,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java",
    "startLineNumber": 119,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntValueHashMap.java",
    "startLineNumber": 164,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedLongKeyHashMap.java",
    "startLineNumber": 162,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMap.java",
    "startLineNumber": 129,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMapConcurrent.java",
    "startLineNumber": 158,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
    "startLineNumber": 127,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 120,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
    "startLineNumber": 131,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java",
    "startLineNumber": 104,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/MultiValueHashMap.java",
    "startLineNumber": 117,
    "lines": "public Collection values() {\n\n        if (values == null) {\n            values = new Values();\n        }\n\n        return values;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongKeyHashMap.java, /hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java & more ...",
  "id": 1266,
  "numClones": 11,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
    "startLineNumber": 213,
    "lines": "if (startAtomIndex + remaining < i + 3)\n                throw new IllegalStateException(\n                        \"No operator/operand pairing remaining\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
    "startLineNumber": 248,
    "lines": "if (startAtomIndex + remaining < i + 3)\n                throw new IllegalStateException(\n                        \"No operator/operand pairing remaining\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java, /hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
  "id": 1267,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 112,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    DBUser = Args[i];\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 100,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    DBUser = Args[i];\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 1268,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4656,
    "lines": "if (resultIn.mode == ResultConstants.ERROR) {\n            throw JDBCUtil.sqlException(resultIn);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1920,
    "lines": "if (resultIn.mode == ResultConstants.ERROR) {\n            throw JDBCUtil.sqlException(resultIn);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 1269,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 907,
    "lines": "assertEquals(Integer.class, rs.getObject(\"ti\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 179,
    "lines": "assertEquals(Integer.class, rs.getObject(\"ti\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 1270,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3347,
    "lines": "if (token.tokenType == Tokens.PLUS) {\n                type = OpTypes.ADD;\n            } else if (token.tokenType == Tokens.MINUS) {\n                type = OpTypes.SUBTRACT;\n            } else {\n                break;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3265,
    "lines": "if (token.tokenType == Tokens.PLUS) {\n                type = OpTypes.ADD;\n            } else if (token.tokenType == Tokens.MINUS) {\n                type = OpTypes.SUBTRACT;\n            } else {\n                break;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3373,
    "lines": "if (token.tokenType == Tokens.PLUS) {\n                type = OpTypes.ADD;\n            } else if (token.tokenType == Tokens.MINUS) {\n                type = OpTypes.SUBTRACT;\n            } else {\n                break;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java & more ...",
  "id": 1271,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 117,
    "lines": "while (--to >= from) {\n                    array[to] = 0;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 90,
    "lines": "while (--to >= from) {\n                    array[to] = 0;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 126,
    "lines": "while (--to >= from) {\n                    array[to] = 0;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 99,
    "lines": "while (--to >= from) {\n                    array[to] = 0;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 135,
    "lines": "while (--to >= from) {\n                    array[to] = 0;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 108,
    "lines": "while (--to >= from) {\n                    array[to] = 0;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 144,
    "lines": "while (--to >= from) {\n                    array[to] = 0;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java & more ...",
  "id": 1272,
  "numClones": 7,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 836,
    "lines": "i >= 4 && i <= 10 && (i % 2) == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 801,
    "lines": "i >= 4 && i <= 10 && (i % 2) == 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/StringConverter.java, /hsqldb/src/org/hsqldb/lib/StringConverter.java",
  "id": 1273,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2055,
    "lines": "{\n                throw Error.error(ErrorCode.X_42538, name.schema.name);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2059,
    "lines": "{\n                throw Error.error(ErrorCode.X_42538, name.schema.name);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1274,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 225,
    "lines": "if (action == null) {\n/*\n            System.out.println(\"null insert action \" + session + \" \"\n                               + session.actionTimestamp);\n*/\n            throw Error.runtimeError(ErrorCode.GENERAL_ERROR,\n                                     \"null insert action \");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 296,
    "lines": "if (action == null) {\n/*\n            System.out.println(\"null insert action \" + session + \" \"\n                               + session.actionTimestamp);\n*/\n            throw Error.runtimeError(ErrorCode.GENERAL_ERROR,\n                                     \"null insert action \");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
  "id": 1275,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1646,
    "lines": "if (x == null) {\n            parameterValues[i] = null;\n            parameterSet[i]    = Boolean.TRUE;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1572,
    "lines": "if (x == null) {\n            parameterValues[i] = null;\n            parameterSet[i]    = Boolean.TRUE;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1721,
    "lines": "if (x == null) {\n            parameterValues[i] = null;\n            parameterSet[i]    = Boolean.TRUE;\n\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java & more ...",
  "id": 1276,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 253,
    "lines": "// INSERT + DELETE\n                if (txModel == TransactionManager.LOCKS) {\n                    remove(row);\n                } else {\n                    delete(session, row);\n                    remove(row);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 214,
    "lines": "// INSERT + DELETE\n                if (txModel == TransactionManager.LOCKS) {\n                    remove(row);\n                } else {\n                    delete(session, row);\n                    remove(row);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
  "id": 1277,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5078,
    "lines": "// column number mappings\n        final int specific_catalog = 0;\n        final int specific_schema  = 1;\n        final int specific_name    = 2;\n        final int routine_catalog  = 3;\n        final int routine_schema   = 4;\n        final int routine_name     = 5;\n        final int table_catalog    = 6;\n        final int table_schema     = 7;\n        final int table_name       = 8;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5666,
    "lines": "// column number mappings\n        final int specific_catalog = 0;\n        final int specific_schema  = 1;\n        final int specific_name    = 2;\n        final int routine_catalog  = 3;\n        final int routine_schema   = 4;\n        final int routine_name     = 5;\n        final int table_catalog    = 6;\n        final int table_schema     = 7;\n        final int table_name       = 8;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 1278,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 181,
    "lines": "public CachedObject getAccessor(Index key) {\n\n        int position = key.getPosition();\n\n        if (position >= accessorList.length) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"RowStoreAVL\");\n        }\n\n        return accessorList[position];\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 171,
    "lines": "public CachedObject getAccessor(Index key) {\n\n        int position = key.getPosition();\n\n        if (position >= accessorList.length) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"RowStoreAVL\");\n        }\n\n        return accessorList[position];\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
  "id": 1279,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 441,
    "lines": "if (database.databaseProperties.isPropertyTrue(\n                HsqlDatabaseProperties.hsqldb_readonly)) {\n            database.setReadOnly();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 616,
    "lines": "if (database.databaseProperties.isPropertyTrue(\n                HsqlDatabaseProperties.hsqldb_readonly)) {\n            database.setReadOnly();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Logger.java, /hsqldb/src/org/hsqldb/persist/Logger.java",
  "id": 1280,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1834,
    "lines": "convertToType(session, data, nodes[LEFT].nodeDataTypes,\n                              nodes[RIGHT].nodeDataTypes);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1751,
    "lines": "convertToType(session, data, nodes[LEFT].nodeDataTypes,\n                              nodes[RIGHT].nodeDataTypes);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1627,
    "lines": "convertToType(session, data, nodes[LEFT].nodeDataTypes,\n                              nodes[RIGHT].nodeDataTypes);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java & more ...",
  "id": 1281,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 700,
    "lines": "Object[] meta          = (Object[]) dbMeta.get(propertyName);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
    "startLineNumber": 726,
    "lines": "Object[] meta         = (Object[]) dbMeta.get(propertyName);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java, /hsqldb/src/org/hsqldb/persist/HsqlDatabaseProperties.java",
  "id": 1282,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2687,
    "lines": "// common type block\n                if (type.isCharacterType()) {\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision * 2);\n                    row[character_set_catalog] =\n                        database.getCatalogName().name;\n                    row[character_set_schema] =\n                        ((CharacterType) type).getCharacterSet()\n                            .getSchemaName().name;\n                    row[character_set_name] =\n                        ((CharacterType) type).getCharacterSet().getName()\n                            .name;\n                    row[collation_catalog] = database.getCatalogName().name;\n                    row[collation_schema] =\n                        ((CharacterType) type).getCollation().getSchemaName()\n                            .name;\n                    row[collation_name] =\n                        ((CharacterType) type).getCollation().getName().name;\n                } else if (type.isNumberType()) {\n                    row[numeric_precision] = ValuePool.getLong(\n                        ((NumberType) type).getNumericPrecisionInRadix());\n                    row[declared_numeric_precision] = ValuePool.getLong(\n                        ((NumberType) type).getNumericPrecisionInRadix());\n\n                    if (type.isExactNumberType()) {\n                        row[numeric_scale] = row[declared_numeric_scale] =\n                            ValuePool.getLong(type.scale);\n                    }\n\n                    row[numeric_precision_radix] =\n                        ValuePool.getLong(type.getPrecisionRadix());\n                } else if (type.isBooleanType()) {\n\n                    //\n                } else if (type.isDateTimeType()) {\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                } else if (type.isIntervalType()) {\n                    row[data_type] = \"INTERVAL\";\n                    row[interval_type] =\n                        ((IntervalType) type).getQualifier(type.typeCode);\n                    row[interval_precision] =\n                        ValuePool.getLong(type.precision);\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                } else if (type.isBinaryType()) {\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                } else if (type.isBitType()) {\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                } else if (type.isArrayType()) {\n                    row[maximum_cardinality] =\n                        ValuePool.getLong(type.arrayLimitCardinality());\n                    row[data_type] = \"ARRAY\";\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5967,
    "lines": "// common type block\n                if (type.isCharacterType()) {\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision * 2);\n                    row[character_set_catalog] =\n                        database.getCatalogName().name;\n                    row[character_set_schema] =\n                        ((CharacterType) type).getCharacterSet()\n                            .getSchemaName().name;\n                    row[character_set_name] =\n                        ((CharacterType) type).getCharacterSet().getName()\n                            .name;\n                    row[collation_catalog] = database.getCatalogName().name;\n                    row[collation_schema] =\n                        ((CharacterType) type).getCollation().getSchemaName()\n                            .name;\n                    row[collation_name] =\n                        ((CharacterType) type).getCollation().getName().name;\n                } else if (type.isNumberType()) {\n                    row[numeric_precision] = ValuePool.getLong(\n                        ((NumberType) type).getNumericPrecisionInRadix());\n                    row[declared_numeric_precision] = ValuePool.getLong(\n                        ((NumberType) type).getNumericPrecisionInRadix());\n\n                    if (type.isExactNumberType()) {\n                        row[numeric_scale] = row[declared_numeric_scale] =\n                            ValuePool.getLong(type.scale);\n                    }\n\n                    row[numeric_precision_radix] =\n                        ValuePool.getLong(type.getPrecisionRadix());\n                } else if (type.isBooleanType()) {\n\n                    //\n                } else if (type.isDateTimeType()) {\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                } else if (type.isIntervalType()) {\n                    row[data_type] = \"INTERVAL\";\n                    row[interval_type] =\n                        ((IntervalType) type).getQualifier(type.typeCode);\n                    row[interval_precision] =\n                        ValuePool.getLong(type.precision);\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                } else if (type.isBinaryType()) {\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                } else if (type.isBitType()) {\n                    row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);\n                    row[character_octet_length] =\n                        ValuePool.getLong(type.precision);\n                } else if (type.isArrayType()) {\n                    row[maximum_cardinality] =\n                        ValuePool.getLong(type.arrayLimitCardinality());\n                    row[data_type] = \"ARRAY\";\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3440,
    "lines": "// common type block\n            if (type.isCharacterType()) {\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] = ValuePool.getLong(type.precision\n                        * 2);\n                row[character_set_catalog] = database.getCatalogName().name;\n                row[character_set_schema] =\n                    ((CharacterType) type).getCharacterSet().getSchemaName()\n                        .name;\n                row[character_set_name] =\n                    ((CharacterType) type).getCharacterSet().getName().name;\n                row[collation_catalog] = database.getCatalogName().name;\n                row[collation_schema] =\n                    ((CharacterType) type).getCollation().getSchemaName().name;\n                row[collation_name] =\n                    ((CharacterType) type).getCollation().getName().name;\n            } else if (type.isNumberType()) {\n                row[numeric_precision] = ValuePool.getLong(\n                    ((NumberType) type).getNumericPrecisionInRadix());\n                row[declared_numeric_precision] = ValuePool.getLong(\n                    ((NumberType) type).getNumericPrecisionInRadix());\n\n                if (type.isExactNumberType()) {\n                    row[numeric_scale] = row[declared_numeric_scale] =\n                        ValuePool.getLong(type.scale);\n                }\n\n                row[numeric_precision_radix] =\n                    ValuePool.getLong(type.getPrecisionRadix());\n            } else if (type.isBooleanType()) {\n\n                //\n            } else if (type.isDateTimeType()) {\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            } else if (type.isIntervalType()) {\n                row[data_type] = \"INTERVAL\";\n                row[interval_type] =\n                    ((IntervalType) type).getQualifier(type.typeCode);\n                row[interval_precision] = ValuePool.getLong(type.precision);\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            } else if (type.isBinaryType()) {\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            } else if (type.isBitType()) {\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            } else if (type.isArrayType()) {\n                row[maximum_cardinality] =\n                    ValuePool.getLong(type.arrayLimitCardinality());\n                row[data_type] = \"ARRAY\";\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7932,
    "lines": "// common type block\n            if (type.isCharacterType()) {\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] = ValuePool.getLong(type.precision\n                        * 2);\n                row[character_set_catalog] = database.getCatalogName().name;\n                row[character_set_schema] =\n                    ((CharacterType) type).getCharacterSet().getSchemaName()\n                        .name;\n                row[character_set_name] =\n                    ((CharacterType) type).getCharacterSet().getName().name;\n                row[collation_catalog] = database.getCatalogName().name;\n                row[collation_schema] =\n                    ((CharacterType) type).getCollation().getSchemaName().name;\n                row[collation_name] =\n                    ((CharacterType) type).getCollation().getName().name;\n            } else if (type.isNumberType()) {\n                row[numeric_precision] = ValuePool.getLong(\n                    ((NumberType) type).getNumericPrecisionInRadix());\n                row[declared_numeric_precision] = ValuePool.getLong(\n                    ((NumberType) type).getNumericPrecisionInRadix());\n\n                if (type.isExactNumberType()) {\n                    row[numeric_scale] = row[declared_numeric_scale] =\n                        ValuePool.getLong(type.scale);\n                }\n\n                row[numeric_precision_radix] =\n                    ValuePool.getLong(type.getPrecisionRadix());\n            } else if (type.isBooleanType()) {}\n            else if (type.isDateTimeType()) {\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            } else if (type.isIntervalType()) {\n                row[data_type] = \"INTERVAL\";\n                row[interval_type] =\n                    ((IntervalType) type).getQualifier(type.typeCode);\n                row[interval_precision] = ValuePool.getLong(type.precision);\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            } else if (type.isBinaryType()) {\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            } else if (type.isBitType()) {\n                row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);\n                row[character_octet_length] =\n                    ValuePool.getLong(type.precision);\n            } else if (type.isArrayType()) {\n                row[maximum_cardinality] =\n                    ValuePool.getLong(type.arrayLimitCardinality());\n                row[data_type] = \"ARRAY\";\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1283,
  "numClones": 4,
  "cloneSize": 50
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 204,
    "lines": "out.writeData(meta.getColumnCount(), meta.columnTypes, data, null,\n                          null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 1569,
    "lines": "out.writeData(meta.getColumnCount(), meta.columnTypes, data, null,\n                      null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 243,
    "lines": "out.writeData(meta.getColumnCount(), meta.columnTypes, data, null,\n                          null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java, /hsqldb/src/org/hsqldb/result/Result.java & more ...",
  "id": 1284,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 165,
    "lines": "public String getDefinition() {\n\n        if (precision == 0) {\n            return getNameString();\n        }\n\n        StringBuffer sb = new StringBuffer(16);\n\n        sb.append(getNameString());\n        sb.append('(');\n        sb.append(precision);\n        sb.append(')');\n\n        return sb.toString();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 118,
    "lines": "public String getDefinition() {\n\n        if (precision == 0) {\n            return getNameString();\n        }\n\n        StringBuffer sb = new StringBuffer(16);\n\n        sb.append(getNameString());\n        sb.append('(');\n        sb.append(precision);\n        sb.append(')');\n\n        return sb.toString();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 93,
    "lines": "public String getDefinition() {\n\n        if (precision == 0) {\n            return getNameString();\n        }\n\n        StringBuffer sb = new StringBuffer(16);\n\n        sb.append(getNameString());\n        sb.append('(');\n        sb.append(precision);\n        sb.append(')');\n\n        return sb.toString();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java & more ...",
  "id": 1285,
  "numClones": 3,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2210,
    "lines": "RangeVariable range = new RangeVariable(transition,\n                            null, null, null, compileContext);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2137,
    "lines": "RangeVariable range = new RangeVariable(transition,\n                            null, null, null, compileContext);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1286,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TriggerDef.java",
    "startLineNumber": 319,
    "lines": "sb.append(Tokens.T_OLD).append(' ').append(Tokens.T_TABLE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TriggerDef.java",
    "startLineNumber": 326,
    "lines": "sb.append(Tokens.T_OLD).append(' ').append(Tokens.T_TABLE);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TriggerDef.java, /hsqldb/src/org/hsqldb/TriggerDef.java",
  "id": 1287,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java",
    "startLineNumber": 125,
    "lines": "if (t.Stmts.sDestTable.length() > spaceleft) {\n                SeqName = t.Stmts.sDestTable.substring(0, spaceleft)\n                          + SeqName;\n            } else {\n                SeqName = t.Stmts.sDestTable + SeqName;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java",
    "startLineNumber": 84,
    "lines": "if (t.Stmts.sDestTable.length() > spaceleft) {\n            SeqName = t.Stmts.sDestTable.substring(0, spaceleft) + SeqName;\n        } else {\n            SeqName = t.Stmts.sDestTable + SeqName;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/OracleTransferHelper.java",
    "startLineNumber": 103,
    "lines": "if (t.Stmts.sDestTable.length() > spaceleft) {\n                SeqName = t.Stmts.sDestTable.substring(0, spaceleft)\n                          + SeqName;\n            } else {\n                SeqName = t.Stmts.sDestTable + SeqName;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java, /hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java & more ...",
  "id": 1288,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 945,
    "lines": "sb.append(b).append(\"table=\").append(rangeTable.getName().name).append(\n            \"\\n\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableJoined.java",
    "startLineNumber": 359,
    "lines": "sb.append(b).append(\"table=\").append(rangeTable.getName().name).append(\n            \"\\n\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariableJoined.java",
  "id": 1289,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 395,
    "lines": "public boolean hasCondition() {\n        return condition != null && !condition.isTrue();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQLInvoked.java",
    "startLineNumber": 328,
    "lines": "public boolean hasCondition() {\n        return condition != null && !condition.isTrue();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java, /hsqldb/src/org/hsqldb/FunctionSQLInvoked.java",
  "id": 1290,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 2089,
    "lines": "if (currentPart == lastPart) {\n                    endOfPart = true;\n                } else {\n                    throw Error.error(ErrorCode.X_22007);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 2070,
    "lines": "if (currentPart == lastPart) {\n                    endOfPart = true;\n                } else {\n\n                    // parts missing\n                    throw Error.error(ErrorCode.X_22007);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 1291,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1389,
    "lines": "if (!conditions[condIndex].isJoin) {\n                        hasLeftOuterRow = false;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1267,
    "lines": "if (!conditions[condIndex].isJoin) {\n                    hasLeftOuterRow = false;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariable.java",
  "id": 1292,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 446,
    "lines": "{\n            parameterValues[--parameterIndex] = Integer.valueOf(x);\n            parameterSet[parameterIndex]      = Boolean.TRUE;\n\n            return;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 417,
    "lines": "{\n            parameterValues[--parameterIndex] = Integer.valueOf(x);\n            parameterSet[parameterIndex]      = Boolean.TRUE;\n\n            return;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 1293,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LockFile.java",
    "startLineNumber": 632,
    "lines": "catch (LockFile.BaseException e) {\n            throw Error.error(ErrorCode.LOCK_FILE_ACQUISITION_FAILURE,\n                              e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LockFile.java",
    "startLineNumber": 641,
    "lines": "catch (LockFile.BaseException e) {\n            throw Error.error(ErrorCode.LOCK_FILE_ACQUISITION_FAILURE,\n                              e.getMessage());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LockFile.java, /hsqldb/src/org/hsqldb/persist/LockFile.java",
  "id": 1294,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1107,
    "lines": "((ste.getMessage() == null)\n                                        ? \"\" : ste.getMessage())"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1101,
    "lines": "((ste.getMessage() == null)\n                                        ? \"\" : ste.getMessage())"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1295,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 260,
    "lines": "if (start < 1) {\n            throw JDBCUtil.outOfRangeArgument(\"start: \" + start);\n        } else if (pattern == null || pattern.length == 0\n                   || start > length()) {\n            return -1L;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 190,
    "lines": "if (start < 1) {\n            throw JDBCUtil.outOfRangeArgument(\"start: \" + start);\n        } else if (pattern == null || pattern.length == 0\n                   || start > length()) {\n            return -1L;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
  "id": 1296,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 472,
    "lines": "if (condition.getDataType() != Type.SQL_BOOLEAN) {\n                throw Error.error(ErrorCode.X_42568);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2322,
    "lines": "if (condition.getDataType() != Type.SQL_BOOLEAN) {\n                throw Error.error(ErrorCode.X_42568);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 585,
    "lines": "if (condition.getDataType() != Type.SQL_BOOLEAN) {\n                throw Error.error(ErrorCode.X_42568);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 1297,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 1482,
    "lines": "static void checkSchemaUpdateAuthorisation(Session session,\n            HsqlName schema) {\n\n        if (session.isProcessingLog()) {\n            return;\n        }\n\n        if (SqlInvariants.isSystemSchemaName(schema.name)) {\n            throw Error.error(ErrorCode.X_42503);\n        }\n\n        if (session.parser.isSchemaDefinition) {\n            if (schema == session.getCurrentSchemaHsqlName()) {\n                return;\n            }\n\n            Error.error(ErrorCode.X_42505, schema.name);\n        }\n\n        session.getGrantee().checkSchemaUpdateOrGrantRights(schema.name);\n        session.checkDDLWrite();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 5185,
    "lines": "void checkSchemaUpdateAuthorisation(Session session, HsqlName schema) {\n\n        if (session.isProcessingLog()) {\n            return;\n        }\n\n        if (SqlInvariants.isSystemSchemaName(schema.name)) {\n            throw Error.error(ErrorCode.X_42503);\n        }\n\n        if (session.parser.isSchemaDefinition) {\n            if (schema == session.getCurrentSchemaHsqlName()) {\n                return;\n            }\n\n            Error.error(ErrorCode.X_42505, schema.name);\n        }\n\n        session.getGrantee().checkSchemaUpdateOrGrantRights(schema.name);\n        session.checkDDLWrite();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchema.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1298,
  "numClones": 2,
  "cloneSize": 16
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 505,
    "lines": "lastRowData != null\n                    && fullIndex.compareRow(session, lastRowData, currentData)\n                       == 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 526,
    "lines": "lastRowData != null\n                    && fullIndex.compareRow(session, lastRowData, currentData)\n                       == 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
  "id": 1299,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 919,
    "lines": "{\n                    if (pstmt1 != null) {\n                        pstmt1.close();\n                    }\n\n                    if (pstmt2 != null) {\n                        pstmt2.close();\n                    }\n\n                    if (pstmt3 != null) {\n                        pstmt3.close();\n                    }\n\n                    if (pstmt4 != null) {\n                        pstmt4.close();\n                    }\n\n                    if (pstmt5 != null) {\n                        pstmt5.close();\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 843,
    "lines": "{\n                if (pstmt1 != null) {\n                    pstmt1.close();\n                }\n\n                if (pstmt2 != null) {\n                    pstmt2.close();\n                }\n\n                if (pstmt3 != null) {\n                    pstmt3.close();\n                }\n\n                if (pstmt4 != null) {\n                    pstmt4.close();\n                }\n\n                if (pstmt5 != null) {\n                    pstmt5.close();\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/JDBCBench.java, /hsqldb/src/org/hsqldb/test/TestBench.java",
  "id": 1300,
  "numClones": 2,
  "cloneSize": 17
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1002,
    "lines": "{\n                        token.tokenString = sqlString.substring(tokenStart,\n                                currentPosition + 1);\n                        token.tokenType   = Tokens.X_MALFORMED_NUMERIC;\n                        token.isMalformed = true;\n\n                        return;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1018,
    "lines": "{\n                        token.tokenString = sqlString.substring(tokenStart,\n                                currentPosition + 1);\n                        token.tokenType   = Tokens.X_MALFORMED_NUMERIC;\n                        token.isMalformed = true;\n\n                        return;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 1301,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAggregate.java",
    "startLineNumber": 236,
    "lines": "if (nodes[LEFT].isUnresolvedParam()) {\n            throw Error.error(ErrorCode.X_42567);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOrderBy.java",
    "startLineNumber": 95,
    "lines": "if (nodes[LEFT].isUnresolvedParam()) {\n            throw Error.error(ErrorCode.X_42567);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionAggregate.java, /hsqldb/src/org/hsqldb/ExpressionOrderBy.java",
  "id": 1302,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableDerived.java",
    "startLineNumber": 452,
    "lines": "public void setSQL(String sql) {\n        this.sql = sql;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Statement.java",
    "startLineNumber": 128,
    "lines": "public final void setSQL(String sql) {\n        this.sql = sql;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableDerived.java, /hsqldb/src/org/hsqldb/Statement.java",
  "id": 1303,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 972,
    "lines": "{\n                txtCommand.setText(sqlScriptBuffer);\n\n                sqlScriptBuffer = null;\n\n                txtCommand.setEnabled(true);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1172,
    "lines": "{\n                        txtCommand.setText(sqlScriptBuffer);\n\n                        sqlScriptBuffer = null;\n\n                        txtCommand.setEnabled(true);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1304,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1107,
    "lines": "{\n\n            // Would like to use String.split(), but don't know if Java 4\n            // is allowed here.\n            // Until we can use Java 4, prohibit tabs as white space.\n            int index = trimmed.indexOf(' ');\n\n            if (index < 0) {\n                throw new IllegalArgumentException();\n            }\n\n            enforceSequence = Boolean.valueOf(trimmed.substring(0,\n                    index)).booleanValue();\n            waiter = Waiter.getWaiter(trimmed.substring(index).trim());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1020,
    "lines": "{\n\n                // Would like to use String.split(), but don't know if Java 4\n                // is allowed here.\n                // Until we can use Java 4, prohibit tabs as white space.\n                int index = trimmed.indexOf(' ');\n\n                if (index < 0) {\n                    throw new IllegalArgumentException();\n                }\n\n                enforceSequence = Boolean.valueOf(trimmed.substring(0,\n                        index)).booleanValue();\n                waiter = Waiter.getWaiter(trimmed.substring(index).trim());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUtil.java, /hsqldb/src/org/hsqldb/test/TestUtil.java",
  "id": 1305,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 1671,
    "lines": "/**\n     * uses 2**scale form and returns a multipe of this that is larger or equal to value\n     */\n    public static long getBinaryNormalisedCeiling(long value, int scale) {\n\n        long mask    = 0xffffffffffffffffl << scale;\n        long newSize = value & mask;\n\n        if (newSize != value) {\n            newSize += 1 << scale;\n        }\n\n        return newSize;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFile.java",
    "startLineNumber": 487,
    "lines": "/**\n     * uses 2**scale form and returns a multipe of this that is larger or equal to value\n     */\n    static long getBinaryNormalisedCeiling(long value, int scale) {\n\n        long mask    = 0xffffffffffffffffl << scale;\n        long newSize = value & mask;\n\n        if (newSize != value) {\n            newSize += 1 << scale;\n        }\n\n        return newSize;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/persist/RAFile.java",
  "id": 1306,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3473,
    "lines": "{\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2723,
    "lines": "{\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7963,
    "lines": "{\n                row[datetime_precision] = ValuePool.getLong(type.scale);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3815,
    "lines": "{\n            row[datetime_precision] = ValuePool.getLong(type.scale);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6003,
    "lines": "{\n                    row[datetime_precision] = ValuePool.getLong(type.scale);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4423,
    "lines": "{\n                        row[datetime_precision] =\n                            ValuePool.getLong(type.scale);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1307,
  "numClones": 6,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1228,
    "lines": "catch (Throwable t) {\n                throw Error.error(t, ErrorCode.X_42501,\n                                  ErrorCode.M_Message_Pair, new Object[] {\n                    t.toString(), className\n                });\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1238,
    "lines": "catch (Throwable t) {\n            throw Error.error(t, ErrorCode.X_42501, ErrorCode.M_Message_Pair,\n                              new Object[] {\n                t.toString(), className\n            });\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 1308,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Tree.java",
    "startLineNumber": 479,
    "lines": "String[] s      = (String[]) vData.elementAt(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Tree.java",
    "startLineNumber": 509,
    "lines": "String[] s      = (String[]) vData.elementAt(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Tree.java",
    "startLineNumber": 348,
    "lines": "String[] s      = (String[]) vData.elementAt(i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Tree.java, /hsqldb/src/org/hsqldb/util/Tree.java & more ...",
  "id": 1309,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 448,
    "lines": "if (stdinputOverride != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_params_redundant.getString());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 441,
    "lines": "if (stdinputOverride != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_params_redundant.getString());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java, /hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
  "id": 1310,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1507,
    "lines": "Object[] data = new Object[nodes.length];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 552,
    "lines": "Object[] data = new Object[nodes.length];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 1311,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntValueHashMap.java",
    "startLineNumber": 101,
    "lines": "if (lookup != -1) {\n            value[0] = intValueTable[lookup];\n\n            return true;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 84,
    "lines": "if (lookup != -1) {\n            value[0] = intValueTable[lookup];\n\n            return true;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
    "startLineNumber": 91,
    "lines": "if (lookup != -1) {\n            value[0] = intValueTable[lookup];\n\n            return true;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntValueHashMap.java, /hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java & more ...",
  "id": 1312,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java",
    "startLineNumber": 217,
    "lines": "while (it.hasNext()) {\n            PersistentStore store = (PersistentStore) it.next();\n\n            store.release();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java",
    "startLineNumber": 268,
    "lines": "while (it.hasNext()) {\n            PersistentStore store = (PersistentStore) it.next();\n\n            store.release();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java",
    "startLineNumber": 251,
    "lines": "while (it.hasNext()) {\n            PersistentStore store = (PersistentStore) it.next();\n\n            store.release();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionDatabase.java",
    "startLineNumber": 89,
    "lines": "while (it.hasNext()) {\n            PersistentStore store = (PersistentStore) it.next();\n\n            store.release();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java",
    "startLineNumber": 234,
    "lines": "while (it.hasNext()) {\n            PersistentStore store = (PersistentStore) it.next();\n\n            store.release();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java, /hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java & more ...",
  "id": 1313,
  "numClones": 5,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 849,
    "lines": "millis = ((TimestampData) a).getSeconds() * 1000;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 855,
    "lines": "millis = ((TimestampData) a).getSeconds() * 1000;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 1314,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 532,
    "lines": "catch (Exception e) {\n            trace(\"Exception reading source tables: \" + e);\n            e.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 647,
    "lines": "catch (Exception e) {\n                trace(\"Exception reading source tables: \" + e);\n                e.printStackTrace();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Transfer.java, /hsqldb/src/org/hsqldb/util/Transfer.java",
  "id": 1315,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 102,
    "lines": "{\n\n        int oldSize = size();\n\n        super.addOrRemove(key, 0, null, null, true);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
    "startLineNumber": 113,
    "lines": "{\n\n        int oldSize = size();\n\n        super.addOrRemove(key, 0, null, null, true);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java",
    "startLineNumber": 99,
    "lines": "{\n\n        int oldSize = size();\n\n        super.addOrRemove(key, 0, null, null, true);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
    "startLineNumber": 109,
    "lines": "{\n\n        int oldSize = size();\n\n        super.addOrRemove(key, 0, null, null, true);\n\n        return oldSize != size();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java, /hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java & more ...",
  "id": 1316,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 132,
    "lines": "for (int i = 0; i < 10; i++) {\n                ps.setInt(1, i);\n                ps.setString(2, String.valueOf(i) + \" s\");\n                ps.setBytes(3, new byte[] {\n                    (byte) i, ' ', (byte) i\n                });\n                ps.execute();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 75,
    "lines": "for (int i = 0; i < 10; i++) {\n                ps.setInt(1, i);\n                ps.setString(2, String.valueOf(i) + \" s\");\n                ps.setBytes(3, new byte[] {\n                    (byte) i, ' ', (byte) i\n                });\n                ps.execute();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 227,
    "lines": "for (int i = 0; i < 10; i++) {\n                ps.setInt(1, i);\n                ps.setString(2, String.valueOf(i) + \" s\");\n                ps.setBytes(3, new byte[] {\n                    (byte) i, ' ', (byte) i\n                });\n                ps.execute();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java, /hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java & more ...",
  "id": 1317,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFile.java",
    "startLineNumber": 319,
    "lines": "file.readFully(b, offset + bytesRead, length - bytesRead);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileInJar.java",
    "startLineNumber": 180,
    "lines": "file.readFully(b, offset + bytesRead, length - bytesRead);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RAFile.java, /hsqldb/src/org/hsqldb/persist/RAFileInJar.java",
  "id": 1318,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2851,
    "lines": "(sysProps ? System.getProperties() : shared.userVars)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2861,
    "lines": "(sysProps ? System.getProperties()\n                                           : shared.userVars)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1319,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2428,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_DATE;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2400,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_DATE;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1320,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2599,
    "lines": "{\n            long v = p.readBigint();\n\n            roots[i++] = v;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2606,
    "lines": "{\n                long v = p.readBigint();\n\n                roots[i++] = v;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 1321,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java",
    "startLineNumber": 55,
    "lines": "public static final Object[][] emptyTable = new Object[0][];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 63,
    "lines": "public static final Object[][] emptyTable = new Object[0][];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorClient.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
  "id": 1322,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 235,
    "lines": "{\n\n        this.table = emptyTable;\n        this.size  = 0;\n\n        reset();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 227,
    "lines": "{\n\n        this.table = emptyTable;\n        this.size  = 0;\n\n        reset();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
  "id": 1323,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 187,
    "lines": "catch (Exception e) {\n                        tracer.trace(\"Ignoring error \" + e.getMessage());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 251,
    "lines": "catch (Exception e) {\n                        tracer.trace(\"Ignoring error \" + e.getMessage());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 219,
    "lines": "catch (Exception e) {\n                        tracer.trace(\"Ignoring error \" + e.getMessage());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 402,
    "lines": "catch (Exception e) {\n                        tracer.trace(\"Ignoring error \" + e.getMessage());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 434,
    "lines": "catch (Exception e) {\n                        tracer.trace(\"Ignoring error \" + e.getMessage());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferTable.java, /hsqldb/src/org/hsqldb/util/TransferTable.java & more ...",
  "id": 1324,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2511,
    "lines": "if (!nodes[0].dataType.isNumberType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1451,
    "lines": "if (!nodes[0].dataType.isNumberType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1427,
    "lines": "if (!nodes[0].dataType.isNumberType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3318,
    "lines": "if (!nodes[0].dataType.isNumberType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3338,
    "lines": "if (!nodes[0].dataType.isNumberType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 1325,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3585,
    "lines": "nodes.length > 1 && nodes[1] != null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1180,
    "lines": "nodes.length > 1 && nodes[1] != null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1326,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 413,
    "lines": "if (newGroup) {\n                compareData = currentData;\n                it          = other.findFirstRow(currentData);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 472,
    "lines": "if (newGroup) {\n                compareData = currentData;\n                it          = other.findFirstRow(currentData);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 458,
    "lines": "if (newGroup) {\n                compareData = currentData;\n                it          = other.findFirstRow(currentData);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 402,
    "lines": "if (newGroup) {\n                compareData = currentData;\n                it          = other.findFirstRow(currentData);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java & more ...",
  "id": 1327,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 943,
    "lines": "x = x.set(store, isleft, ((RowAVL) row).getNode(position));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
    "startLineNumber": 253,
    "lines": "x = x.set(store, isleft, ((RowAVL) row).getNode(position));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
  "id": 1328,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3533,
    "lines": "row[is_insertable_into] = table.isInsertable()\n                                              ? Tokens.T_YES\n                                              : Tokens.T_NO;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3520,
    "lines": "row[is_insertable_into] = table.isInsertable()\n                                              ? Tokens.T_YES\n                                              : Tokens.T_NO;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 1329,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 425,
    "lines": "return diff == 0 ? 0\n                                 : diff > 0 ? 1\n                                            : -1;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 440,
    "lines": "return diff == 0 ? 0\n                                 : diff > 0 ? 1\n                                            : -1;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Cache.java",
    "startLineNumber": 427,
    "lines": "return diff == 0 ? 0\n                             : diff > 0 ? 1\n                                        : -1;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java & more ...",
  "id": 1330,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 303,
    "lines": "if (value > Integer.MAX_VALUE || value < Integer.MIN_VALUE) {\n            throw new java.lang.IllegalArgumentException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 168,
    "lines": "if (value > Integer.MAX_VALUE || value < Integer.MIN_VALUE) {\n            throw new java.lang.IllegalArgumentException();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java, /hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
  "id": 1331,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 655,
    "lines": "if (wasEscape) {\n                                escapeCount++;\n\n                                newArray[j++] = array[i];\n                                wasEscape     = false;\n\n                                continue;\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 674,
    "lines": "if (wasEscape) {\n                                escapeCount++;\n\n                                newArray[j++] = array[i];\n                                wasEscape     = false;\n\n                                continue;\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 733,
    "lines": "if (wasEscape) {\n                                escapeCount++;\n\n                                newArray[j++] = array[i];\n                                wasEscape     = false;\n\n                                continue;\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 752,
    "lines": "if (wasEscape) {\n                                escapeCount++;\n\n                                newArray[j++] = array[i];\n                                wasEscape     = false;\n\n                                continue;\n                            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionOp.java, /hsqldb/src/org/hsqldb/ExpressionOp.java & more ...",
  "id": 1332,
  "numClones": 4,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 335,
    "lines": "if (!other.isDateTimeType()) {\n                    throw Error.error(ErrorCode.X_42562);\n                }\n\n                DateTimeType otherType = (DateTimeType) other;\n\n                // DATE with TIME caught here\n                if (otherType.startIntervalType > endIntervalType\n                        || startIntervalType > otherType.endIntervalType) {\n                    throw Error.error(ErrorCode.X_42562);\n                }\n\n                int     newType = typeCode;\n                int     scale   = this.scale > otherType.scale ? this.scale\n                                                               : otherType\n                                                                   .scale;\n                boolean zone    = withTimeZone || otherType.withTimeZone;\n                int startType = otherType.startIntervalType\n                                > startIntervalType ? startIntervalType\n                                                    : otherType\n                                                        .startIntervalType;\n\n                if (startType == Types.SQL_INTERVAL_HOUR) {\n                    newType = zone ? Types.SQL_TIME_WITH_TIME_ZONE\n                                   : Types.SQL_TIME;\n                } else {\n                    newType = zone ? Types.SQL_TIMESTAMP_WITH_TIME_ZONE\n                                   : Types.SQL_TIMESTAMP;\n                }\n\n                return getDateTimeType(newType, scale);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 286,
    "lines": "if (!other.isDateTimeType()) {\n            throw Error.error(ErrorCode.X_42562);\n        }\n\n        DateTimeType otherType = (DateTimeType) other;\n\n        // DATE with TIME caught here\n        if (otherType.startIntervalType > endIntervalType\n                || startIntervalType > otherType.endIntervalType) {\n            throw Error.error(ErrorCode.X_42562);\n        }\n\n        int     newType = typeCode;\n        int     scale   = this.scale > otherType.scale ? this.scale\n                                                       : otherType.scale;\n        boolean zone    = withTimeZone || otherType.withTimeZone;\n        int startType = otherType.startIntervalType > startIntervalType\n                        ? startIntervalType\n                        : otherType.startIntervalType;\n\n        if (startType == Types.SQL_INTERVAL_HOUR) {\n            newType = zone ? Types.SQL_TIME_WITH_TIME_ZONE\n                           : Types.SQL_TIME;\n        } else {\n            newType = zone ? Types.SQL_TIMESTAMP_WITH_TIME_ZONE\n                           : Types.SQL_TIMESTAMP;\n        }\n\n        return getDateTimeType(newType, scale);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 1333,
  "numClones": 2,
  "cloneSize": 23
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 1408,
    "lines": "{\n            Calendar calendar = cal == null ? session.getCalendar()\n                    : cal;\n\n            if (cal != null) {\n                millis = HsqlDateTime.convertMillisToCalendar(calendar,\n                        millis);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 4928,
    "lines": "{\n            Calendar calendar = cal == null ? session.getCalendar()\n                    : cal;\n\n            if (cal != null) {\n                millis = HsqlDateTime.convertMillisToCalendar(calendar,\n                        millis);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 1334,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2312,
    "lines": "Font fFont = new Font(\"Dialog\", Font.PLAIN, 12);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1193,
    "lines": "Font fFont = new Font(\"Dialog\", Font.PLAIN, 12);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 974,
    "lines": "Font fFont = new Font(\"Dialog\", Font.PLAIN, 12);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java & more ...",
  "id": 1335,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TriggerDef.java",
    "startLineNumber": 683,
    "lines": "public void fire(int i, String name, String table, Object[] row1,\n                         Object[] row2) {\n\n            // do nothing\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSchemaParse.java",
    "startLineNumber": 1016,
    "lines": "public void fire(int i, String name, String table, Object[] row1,\n                     Object[] row2) {}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TriggerDef.java, /hsqldb/src/org/hsqldb/test/TestSchemaParse.java",
  "id": 1336,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1149,
    "lines": "{\n                    token.tokenType   = Tokens.X_MALFORMED_NUMERIC;\n                    token.isMalformed = true;\n\n                    return;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1048,
    "lines": "{\n                        token.tokenType   = Tokens.X_MALFORMED_NUMERIC;\n                        token.isMalformed = true;\n\n                        return;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1134,
    "lines": "{\n                    token.tokenType   = Tokens.X_MALFORMED_NUMERIC;\n                    token.isMalformed = true;\n\n                    return;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1062,
    "lines": "{\n                        token.tokenType   = Tokens.X_MALFORMED_NUMERIC;\n                        token.isMalformed = true;\n\n                        return;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java & more ...",
  "id": 1337,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1927,
    "lines": "if (!e.getDataType().isCharacterType()) {\n                throw Error.error(ErrorCode.X_0P000);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 546,
    "lines": "if (!e.getDataType().isCharacterType()) {\n                    throw Error.error(ErrorCode.X_0P000);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 573,
    "lines": "if (!e.getDataType().isCharacterType()) {\n                    throw Error.error(ErrorCode.X_0P000);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java & more ...",
  "id": 1338,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 154,
    "lines": "if (getLeftNode() != null) {\n            sb.append(\" arg=[\");\n            sb.append(nodes[LEFT].describe(session, blanks + 1));\n            sb.append(']');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAggregate.java",
    "startLineNumber": 195,
    "lines": "if (getLeftNode() != null) {\n            sb.append(\" arg=[\");\n            sb.append(nodes[LEFT].describe(session, blanks + 1));\n            sb.append(']');\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java, /hsqldb/src/org/hsqldb/ExpressionAggregate.java",
  "id": 1339,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 390,
    "lines": "HsqlName indexName =\n                        database.nameManager.newAutoName(\"IDX\",\n                                                         c.getName().name,\n                                                         table.getSchemaName(),\n                                                         table.getName(),\n                                                         SchemaObject.INDEX);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 335,
    "lines": "HsqlName indexName =\n                        database.nameManager.newAutoName(\"IDX\",\n                                                         c.getName().name,\n                                                         table.getSchemaName(),\n                                                         table.getName(),\n                                                         SchemaObject.INDEX);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 1340,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 688,
    "lines": "boolean ifExists = ((Boolean) arguments[3]).booleanValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 732,
    "lines": "boolean ifExists = ((Boolean) arguments[3]).booleanValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchema.java, /hsqldb/src/org/hsqldb/StatementSchema.java",
  "id": 1341,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 275,
    "lines": "/**\n     * <!-- start generic documentation -->\n     * Retreives a slice of the SQL <code>ARRAY</code> value\n     * designated by this <code>Array</code> object, beginning with the specified\n     * <code>index</code> and containing up to <code>count</code>\n     * successive elements of the SQL array.\n     * <P>\n     * This method uses\n     * the specified <code>map</code> for type map customizations\n     * unless the base type of the array does not match a user-defined\n     * type in <code>map</code>, in which case it\n     * uses the standard mapping. This version of the method\n     * <code>getArray</code> uses either the given type map or the standard mapping;\n     * it never uses the type map associated with the connection.\n     * <p>\n     * <strong>Note:</strong> When <code>getArray</code> is used to materialize\n     * a base type that maps to a primitive data type, then it is\n     * implementation-defined whether the array returned is an array of\n     * that primitive data type or an array of <code>Object</code>.\n     *\n     * <!-- end generic documentation -->\n     * <!-- start release-specific documentation -->\n     * <div class=\"ReleaseSpecificDocumentation\">\n     * <h3>HSQLDB-Specific Information:</h3> <p>\n     *\n     * HSQLDB always returns an array of <code>Object</code>.\n     *\n     * </div>\n     * <!-- end release-specific documentation -->\n     *\n     * @param index the array index of the first element to retrieve;\n     *              the first element is at index 1\n     * @param count the number of successive SQL array elements to\n     * retrieve\n     * @param map a <code>java.util.Map</code> object\n     * that contains SQL type names and the classes in\n     * the Java programming language to which they are mapped\n     * @return an array containing up to <code>count</code>\n     * consecutive elements of the SQL <code>ARRAY</code> value designated by this\n     * <code>Array</code> object, beginning with element\n     * <code>index</code>\n     * @exception SQLException if an error occurs while attempting to\n     * access the array\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.2\n     */\n    public Object getArray(long index, int count,\n                           java.util.Map<String,\n                               Class<?>> map) throws SQLException {\n        return getArray(index, count);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 263,
    "lines": "/**\n     * <!-- start generic documentation -->\n     * Retreives a slice of the SQL <code>ARRAY</code> value\n     * designated by this <code>Array</code> object, beginning with the specified\n     * <code>index</code> and containing up to <code>count</code>\n     * successive elements of the SQL array.\n     * <P>\n     * This method uses\n     * the specified <code>map</code> for type map customizations\n     * unless the base type of the array does not match a user-defined\n     * type in <code>map</code>, in which case it\n     * uses the standard mapping. This version of the method\n     * <code>getArray</code> uses either the given type map or the standard mapping;\n     * it never uses the type map associated with the connection.\n     * <p>\n     * <strong>Note:</strong> When <code>getArray</code> is used to materialize\n     * a base type that maps to a primitive data type, then it is\n     * implementation-defined whether the array returned is an array of\n     * that primitive data type or an array of <code>Object</code>.\n     *\n     * <!-- end generic documentation -->\n     * <!-- start release-specific documentation -->\n     * <div class=\"ReleaseSpecificDocumentation\">\n     * <h3>HSQLDB-Specific Information:</h3> <p>\n     *\n     * HSQLDB always returns an array of <code>Object</code>.\n     *\n     * </div>\n     * <!-- end release-specific documentation -->\n     *\n     * @param index the array index of the first element to retrieve;\n     *              the first element is at index 1\n     * @param count the number of successive SQL array elements to\n     * retrieve\n     * @param map a <code>java.util.Map</code> object\n     * that contains SQL type names and the classes in\n     * the Java programming language to which they are mapped\n     * @return an array containing up to <code>count</code>\n     * consecutive elements of the SQL <code>ARRAY</code> value designated by this\n     * <code>Array</code> object, beginning with element\n     * <code>index</code>\n     * @exception SQLException if an error occurs while attempting to\n     * access the array\n     * @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n     * this method\n     * @since JDK 1.2\n     */\n    public Object getArray(long index, int count,\n                           java.util.Map<String,\n                               Class<?>> map) throws SQLException {\n        return getArray(index, count);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
  "id": 1342,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BooleanType.java",
    "startLineNumber": 250,
    "lines": "return NumberType.isZero(a) ? Boolean.FALSE\n                                        : Boolean.TRUE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BooleanType.java",
    "startLineNumber": 189,
    "lines": "return NumberType.isZero(a) ? Boolean.FALSE\n                                            : Boolean.TRUE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BooleanType.java, /hsqldb/src/org/hsqldb/types/BooleanType.java",
  "id": 1343,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
    "startLineNumber": 104,
    "lines": "{\n\n        int oldSize = size();\n\n        super.addOrRemove(key, value, null, null, false);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java",
    "startLineNumber": 90,
    "lines": "{\n\n        int oldSize = size();\n\n        super.addOrRemove(key, value, null, null, false);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
    "startLineNumber": 100,
    "lines": "{\n\n        int oldSize = size();\n\n        super.addOrRemove(key, value, null, null, false);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 93,
    "lines": "{\n\n        int oldSize = size();\n\n        super.addOrRemove(key, value, null, null, false);\n\n        return oldSize != size();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java, /hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java & more ...",
  "id": 1344,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputText.java",
    "startLineNumber": 381,
    "lines": "public RowOutputInterface duplicate() {\n        throw Error.runtimeError(ErrorCode.U_S0500, \"RowOutputText\");\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java",
    "startLineNumber": 294,
    "lines": "public RowOutputInterface duplicate() {\n        throw Error.runtimeError(ErrorCode.U_S0500, \"RowOutputText\");\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowOutputText.java, /hsqldb/src/org/hsqldb/rowio/RowOutputTextLog.java",
  "id": 1345,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Defines.java",
    "startLineNumber": 154,
    "lines": "if (!tokenizer.isToken(Token.EOI)) {\n            throw new PreprocessorException(\"Illegal trailing \"\n                    + \"characters at position: \"\n                    + tokenizer.getStartIndex()\n                    + \" in [\"\n                    + expression\n                    + \"]\"); // NOI18N\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Defines.java",
    "startLineNumber": 187,
    "lines": "if (!tokenizer.isToken(Token.EOI)) {\n            throw new PreprocessorException(\"Illegal trailing \"\n                    + \"characters at position: \"\n                    + tokenizer.getStartIndex()\n                    + \" in [\"\n                    + expression\n                    + \"]\"); // NOI18N\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/preprocessor/Defines.java, /hsqldb/src/org/hsqldb/util/preprocessor/Defines.java",
  "id": 1346,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
    "startLineNumber": 731,
    "lines": "private void checkClosed() throws SQLException {\n\n        if (isClosed) {\n            throw JDBCUtil.sqlException(ErrorCode.X_07501);\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java",
    "startLineNumber": 385,
    "lines": "private void checkClosed() throws SQLException {\n\n        if (isClosed) {\n            throw JDBCUtil.sqlException(ErrorCode.X_07501);\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java",
  "id": 1347,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 807,
    "lines": "if (action.type == ACTION_INSERT) {\n                    actionType = action.type;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 596,
    "lines": "if (action.type == ACTION_INSERT) {\n                    actionType = action.type;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAction.java",
    "startLineNumber": 564,
    "lines": "if (action.type == ACTION_INSERT) {\n                    actionType = action.type;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAction.java, /hsqldb/src/org/hsqldb/RowAction.java & more ...",
  "id": 1348,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 681,
    "lines": "{\n                        throw Error.error(ErrorCode.X_42608,\n                                          Tokens.T_MODIFIES + ' '\n                                          + Tokens.T_SQL);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 695,
    "lines": "{\n                    throw Error.error(ErrorCode.X_42608,\n                                      Tokens.T_MODIFIES + ' ' + Tokens.T_SQL);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 1349,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 80,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            value[0] = intValueTable[lookup];\n\n            return true;\n        }\n\n        return false;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
    "startLineNumber": 87,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            value[0] = intValueTable[lookup];\n\n            return true;\n        }\n\n        return false;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java, /hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
  "id": 1350,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1364,
    "lines": "if (params.length > 0 && params[0].equals(java.sql.Connection.class)) {\n            offset = 1;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1261,
    "lines": "if (params.length > 0\n                    && params[0].equals(java.sql.Connection.class)) {\n                offset = 1;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 1351,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 155,
    "lines": "if (patternIndex == patternLength) {\n                return streamIndex - (patternLength - 1);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 224,
    "lines": "if (patternIndex == patternLength) {\n                return streamIndex - (patternLength - 1);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java, /hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
  "id": 1352,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 548,
    "lines": "if (size == 1) {\n            return r.getSingleRowData();\n        } else {\n            throw Error.error(ErrorCode.X_21000);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 564,
    "lines": "if (size == 1) {\n            return r.getSingleRowData();\n        } else {\n            throw Error.error(ErrorCode.X_21000);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QueryExpression.java, /hsqldb/src/org/hsqldb/QueryExpression.java",
  "id": 1353,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedStatements.java",
    "startLineNumber": 206,
    "lines": "{\n                    System.out.println(\" -- executing directly\\n<<<\\n\"\n                                       + stmtArray[i].command + \"\\n>>>\\n\");\n\n                    Statement s = con.createStatement();\n                    boolean   b = s.execute(stmtArray[i].command);\n\n                    System.out.println(\" ***** st.execute gave me \" + b);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
    "startLineNumber": 147,
    "lines": "{\n                    System.out.println(\" -- executing directly\\n<<<\\n\"\n                                       + stmtArray[i].command + \"\\n>>>\\n\");\n\n                    Statement s = con.createStatement();\n                    boolean   b = s.execute(stmtArray[i].command);\n\n                    System.out.println(\" ***** st.execute gave me \" + b);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestPreparedStatements.java, /hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
  "id": 1354,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFile.java",
    "startLineNumber": 152,
    "lines": "java.io.File fi     = new java.io.File(name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFileHybrid.java",
    "startLineNumber": 69,
    "lines": "java.io.File fi = new java.io.File(name);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RAFile.java, /hsqldb/src/org/hsqldb/persist/RAFileHybrid.java",
  "id": 1355,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobDataID.java",
    "startLineNumber": 223,
    "lines": "public void setBytes(SessionInterface session, long pos, byte[] bytes) {\n        setBytes(session, pos, bytes, 0, bytes.length);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryData.java",
    "startLineNumber": 195,
    "lines": "public void setBytes(SessionInterface session, long pos, byte[] bytes) {\n        setBytes(session, pos, bytes, 0, bytes.length);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobDataID.java, /hsqldb/src/org/hsqldb/types/BinaryData.java",
  "id": 1356,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 1034,
    "lines": "{\n                if (reader != null) {\n                    try {\n                        reader.close();\n                    } catch (Exception ex) {}\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 281,
    "lines": "{\n            if (reader != null) {\n                try {\n                    reader.close();\n                } catch (Exception ex) {}\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 173,
    "lines": "{\n            if (reader != null) {\n                try {\n                    reader.close();\n                } catch (Exception ex) {}\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java & more ...",
  "id": 1357,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 448,
    "lines": "if (uMap.size() != hIntMap.size()) {\n                throw new Exception(\"HashMap size mismatch\");\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 426,
    "lines": "if (uMap.size() != hIntMap.size()) {\n                throw new Exception(\"HashMap size mismatch\");\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java, /hsqldb/src/org/hsqldb/test/TestHashStructures.java",
  "id": 1358,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 238,
    "lines": "result.navigator.add(new Object[]{\n                name.getSchemaQualifiedStatementName() });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 220,
    "lines": "result.navigator.add(new Object[]{\n                name.getSchemaQualifiedStatementName() });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDMQL.java",
    "startLineNumber": 229,
    "lines": "result.navigator.add(new Object[]{\n                name.getSchemaQualifiedStatementName() });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDMQL.java, /hsqldb/src/org/hsqldb/StatementDMQL.java & more ...",
  "id": 1359,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 538,
    "lines": "(TTable.Stmts.bFKForced)\n                                && (!ConstraintName.startsWith(\"FK_\"))"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferDb.java",
    "startLineNumber": 555,
    "lines": "(TTable.Stmts.bFKForced)\n                                && (!ConstraintName.startsWith(\"FK_\"))"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferDb.java, /hsqldb/src/org/hsqldb/util/TransferDb.java",
  "id": 1360,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4418,
    "lines": "if (is.session.getDatabaseUniqueName().equals(\n                    session.getDatabaseUniqueName())) {\n                throw JDBCUtil.sqlException(ErrorCode.JDBC_INVALID_ARGUMENT,\n                                        \"invalid Reader\");\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4348,
    "lines": "if (is.session.getDatabaseUniqueName().equals(\n                    session.getDatabaseUniqueName())) {\n                throw JDBCUtil.sqlException(ErrorCode.JDBC_INVALID_ARGUMENT,\n                                        \"invalid Reader\");\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 1361,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFile.java",
    "startLineNumber": 299,
    "lines": "seekPosition < bufferOffset\n                    || seekPosition >= bufferOffset + buffer.length"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFile.java",
    "startLineNumber": 245,
    "lines": "seekPosition < bufferOffset\n                    || seekPosition >= bufferOffset + buffer.length"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFile.java",
    "startLineNumber": 289,
    "lines": "seekPosition < bufferOffset\n                        || seekPosition >= bufferOffset + buffer.length"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RAFile.java, /hsqldb/src/org/hsqldb/persist/RAFile.java & more ...",
  "id": 1362,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 70,
    "lines": "provider == null ? Cipher.getInstance(cipherName)\n                                         : Cipher.getInstance(cipherName,\n                                         provider)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 82,
    "lines": "provider == null ? Cipher.getInstance(cipherName)\n                                        : Cipher.getInstance(cipherName,\n                                        provider)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 88,
    "lines": "provider == null ? Cipher.getInstance(cipherName)\n                                        : Cipher.getInstance(cipherName,\n                                        provider)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 76,
    "lines": "provider == null ? Cipher.getInstance(cipherName)\n                                         : Cipher.getInstance(cipherName,\n                                         provider)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Crypto.java, /hsqldb/src/org/hsqldb/persist/Crypto.java & more ...",
  "id": 1363,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 860,
    "lines": "byte[]            data = new byte[] {\n                1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n            };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 102,
    "lines": "byte[]            data = new byte[] {\n                1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n            };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLobs.java, /hsqldb/src/org/hsqldb/test/TestLobs.java",
  "id": 1364,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5944,
    "lines": "{\n                    checkValidCatalogName(token.namePrefix);\n\n                    if (token.namePrePrefix != null) {\n                        throw tooManyIdentifiers();\n                    }\n\n                    break;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5934,
    "lines": "{\n                    checkValidCatalogName(token.namePrefix);\n\n                    if (token.namePrePrefix != null) {\n                        throw tooManyIdentifiers();\n                    }\n\n                    break;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1365,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 170,
    "lines": "if (elementCount == 0) {\n            firstindex = endindex = 0;\n        } else if (endindex == 0) {\n            endindex = list.length;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 127,
    "lines": "if (elementCount == 0) {\n            firstindex = endindex = 0;\n        } else if (endindex == 0) {\n            endindex = list.length;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java, /hsqldb/src/org/hsqldb/lib/LongDeque.java",
  "id": 1366,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1221,
    "lines": "if (token.tokenType == Tokens.AS) {\n                read();\n                checkIsNonCoreReservedIdentifier();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1814,
    "lines": "if (token.tokenType == Tokens.AS) {\n                read();\n                checkIsNonCoreReservedIdentifier();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1367,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/JavaObjectData.java",
    "startLineNumber": 90,
    "lines": "catch (Exception e) {\n            throw Error.error(ErrorCode.X_22521, e.toString());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/JavaObjectData.java",
    "startLineNumber": 113,
    "lines": "catch (Exception e) {\n            throw Error.error(ErrorCode.X_22521, e.toString());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/JavaObjectData.java, /hsqldb/src/org/hsqldb/types/JavaObjectData.java",
  "id": 1368,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 549,
    "lines": "{\n                    return precision >= otherType.precision ? 0\n                                                            : -1;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 721,
    "lines": "{\n                    return precision >= otherType.precision ? 0\n                                                            : -1;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BinaryType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 1369,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Document.java",
    "startLineNumber": 184,
    "lines": "InputStreamReader isr = isEncoding(encoding)\n                    ? new InputStreamReader(is, encoding)\n                    : new InputStreamReader(is);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Document.java",
    "startLineNumber": 199,
    "lines": "InputStreamReader isr = isEncoding(encoding)\n                    ? new InputStreamReader(is, encoding)\n                    : new InputStreamReader(is);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Document.java",
    "startLineNumber": 191,
    "lines": "InputStreamReader isr = isEncoding(encoding)\n                    ? new InputStreamReader(is, encoding)\n                    : new InputStreamReader(is);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/preprocessor/Document.java, /hsqldb/src/org/hsqldb/util/preprocessor/Document.java & more ...",
  "id": 1370,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCPooledConnection.java",
    "startLineNumber": 153,
    "lines": "if (userConnection != null) {\n\n            // userConnection is already closed in normal use\n            try {\n                userConnection.close();\n            } catch (SQLException e) {\n\n                // check connection problems\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCPooledConnection.java",
    "startLineNumber": 179,
    "lines": "if (userConnection != null) {\n\n            // userConnection is already closed in normal use\n            try {\n                userConnection.close();\n            } catch (SQLException e) {\n\n                // check connection problems\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/pool/JDBCPooledConnection.java, /hsqldb/src/org/hsqldb/jdbc/pool/JDBCPooledConnection.java",
  "id": 1371,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLikePredicateOptimizations.java",
    "startLineNumber": 186,
    "lines": "rs  = stmt.executeQuery(sql);\n\n        rs.next();\n\n        expectedCount = rs.getInt(1);\n        sql           = \"select count(*) from test where name like '%'\";\n        pstmt         = conn.prepareStatement(sql);\n        rs            = pstmt.executeQuery();\n\n        rs.next();\n\n        actualCount = rs.getInt(1);\n\n        assertEquals(\"\\\"\" + sql + \"\\\"\", expectedCount, actualCount);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLikePredicateOptimizations.java",
    "startLineNumber": 236,
    "lines": "rs  = stmt.executeQuery(sql);\n\n        rs.next();\n\n        expectedCount = rs.getInt(1);\n        sql           = \"select count(*) from test where name like '%'\";\n        pstmt         = conn.prepareStatement(sql);\n        rs            = pstmt.executeQuery();\n\n        rs.next();\n\n        actualCount = rs.getInt(1);\n\n        assertEquals(\"\\\"\" + sql + \"\\\"\", expectedCount, actualCount);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLikePredicateOptimizations.java, /hsqldb/src/org/hsqldb/test/TestLikePredicateOptimizations.java",
  "id": 1372,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 160,
    "lines": "{\n                if (ArrayUtil.find(startTokens, token.tokenType) != -1) {\n                    break;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 191,
    "lines": "{\n                if (ArrayUtil.find(startTokens, token.tokenType) != -1) {\n                    break;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserBase.java, /hsqldb/src/org/hsqldb/ParserBase.java",
  "id": 1373,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
    "startLineNumber": 310,
    "lines": "if (!isInLimits(Long.MAX_VALUE, start - 1, 0)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
    "startLineNumber": 338,
    "lines": "if (!isInLimits(Long.MAX_VALUE, start - 1, 0)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java",
    "startLineNumber": 161,
    "lines": "if (!isInLimits(Long.MAX_VALUE, start - 1, 0)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java",
    "startLineNumber": 129,
    "lines": "if (!isInLimits(Long.MAX_VALUE, start - 1, 0)) {\n            throw JDBCUtil.outOfRangeArgument();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java & more ...",
  "id": 1374,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 121,
    "lines": "c.core.deleteAction\n                   == SchemaObject.ReferentialAction.SET_NULL"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 82,
    "lines": "c.core.deleteAction == SchemaObject\n                .ReferentialAction.SET_NULL"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 1375,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 126,
    "lines": "if (set) {\n                map[windex] = (word | mask);\n            } else {\n                mask        = ~mask;\n                map[windex] = (word & mask);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 139,
    "lines": "if (set) {\n            map[windex] = (word | mask);\n        } else {\n            mask        = ~mask;\n            map[windex] = (word & mask);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BitMap.java, /hsqldb/src/org/hsqldb/map/BitMap.java",
  "id": 1376,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7910,
    "lines": "//\n        Iterator it =\n            database.schemaManager.databaseObjectIterator(SchemaObject.TYPE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2715,
    "lines": "Iterator it =\n            database.schemaManager.databaseObjectIterator(SchemaObject.TYPE);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 1377,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 899,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] == null) {\n                continue;\n            }\n\n            nodes[i] = nodes[i].replaceAliasInOrderBy(session, columns,\n                    length);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 1000,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] == null) {\n                continue;\n            }\n\n            nodes[i] = nodes[i].replaceAliasInOrderBy(session, columns,\n                    length);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/ExpressionColumn.java",
  "id": 1378,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 727,
    "lines": "rs.close();\n\n            rs = st1.executeQuery(\"select sum(delta) from history\");\n\n            rs.next();\n\n            deltasum = rs.getInt(1);\n\n            rs.close();\n\n            rs = null;\n\n            st1.close();\n\n            st1 = null;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 816,
    "lines": "rs.close();\n\n            rs = st1.executeQuery(\"select sum(delta) from history\");\n\n            rs.next();\n\n            deltasum = rs.getInt(1);\n\n            rs.close();\n\n            rs = null;\n\n            st1.close();\n\n            st1 = null;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 1379,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 581,
    "lines": "if (pos < MIN_POS || pos > MAX_POS) {\n            throw JDBCUtil.outOfRangeArgument(\"pos: \" + pos);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
    "startLineNumber": 622,
    "lines": "if (pos < MIN_POS || pos > MAX_POS) {\n            throw JDBCUtil.outOfRangeArgument(\"pos: \" + pos);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
    "startLineNumber": 722,
    "lines": "if (pos < MIN_POS || pos > MAX_POS) {\n            throw JDBCUtil.outOfRangeArgument(\"pos: \" + pos);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClob.java & more ...",
  "id": 1380,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStressInsert.java",
    "startLineNumber": 168,
    "lines": "System.out.println(\"total inserted \" + MAX_SIZE + \" in \" + (t2 - t1));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStressInsert.java",
    "startLineNumber": 191,
    "lines": "System.out.println(\"total inserted \" + MAX_SIZE + \" in \" + (t2 - t1));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestStressInsert.java, /hsqldb/src/org/hsqldb/test/TestStressInsert.java",
  "id": 1381,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 608,
    "lines": "int position = ArraySort.searchFirst(table, 0, size, data, this);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 615,
    "lines": "int position = ArraySort.searchFirst(table, 0, size, data, this);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
  "id": 1382,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 100,
    "lines": "if (userTypeModifier == null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 136,
    "lines": "if (userTypeModifier == null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 109,
    "lines": "if (userTypeModifier == null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 145,
    "lines": "if (userTypeModifier == null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 161,
    "lines": "if (userTypeModifier == null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 82,
    "lines": "if (userTypeModifier == null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 118,
    "lines": "if (userTypeModifier == null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 91,
    "lines": "if (userTypeModifier == null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 127,
    "lines": "if (userTypeModifier == null) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/Type.java, /hsqldb/src/org/hsqldb/types/Type.java & more ...",
  "id": 1383,
  "numClones": 9,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 355,
    "lines": "Result result = this.newColumnResult(0, data.length);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 343,
    "lines": "Result result = this.newColumnResult(0, data.length);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
  "id": 1384,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 568,
    "lines": "int level = ((Integer) parameters[1]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 598,
    "lines": "int level = ((Integer) parameters[1]).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSession.java, /hsqldb/src/org/hsqldb/StatementSession.java",
  "id": 1385,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSet.java",
    "startLineNumber": 144,
    "lines": "for (int i = 0; i < subqueries.length; i++) {\n            subQueryArray[i].prepareTable();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementExpression.java",
    "startLineNumber": 110,
    "lines": "for (int i = 0; i < subqueries.length; i++) {\n            subQueryArray[i].prepareTable();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementProcedure.java",
    "startLineNumber": 309,
    "lines": "for (int i = 0; i < subqueries.length; i++) {\n            subQueryArray[i].prepareTable();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSet.java, /hsqldb/src/org/hsqldb/StatementExpression.java & more ...",
  "id": 1386,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCursor.java",
    "startLineNumber": 57,
    "lines": "(Result) data[data.length - 1]"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCursor.java",
    "startLineNumber": 91,
    "lines": "(Result) data[data.length - 1]"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCursor.java, /hsqldb/src/org/hsqldb/StatementCursor.java",
  "id": 1387,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 296,
    "lines": "if (!row.isInMemory()) {\n            row.keepInMemory(false);\n\n            throw Error.runtimeError(ErrorCode.U_S0500, \"NodeAVLDisk\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 340,
    "lines": "if (!row.isInMemory()) {\n            row.keepInMemory(false);\n\n            throw Error.runtimeError(ErrorCode.U_S0500, \"NodeAVLDisk\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java, /hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
  "id": 1388,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 172,
    "lines": "{\n            Class c = Class.forName(\"sun.security.action.GetPropertyAction\");\n            Constructor constructor = c.getConstructor(new Class[]{\n                String.class });\n            java.security.PrivilegedAction a =\n                (java.security.PrivilegedAction) constructor.newInstance(\n                    new Object[]{ \"user.home\" });\n\n            homedir = (String) java.security.AccessController.doPrivileged(a);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialogCommon.java",
    "startLineNumber": 315,
    "lines": "{\n                Class c =\n                    Class.forName(\"sun.security.action.GetPropertyAction\");\n                Constructor constructor = c.getConstructor(new Class[]{\n                    String.class });\n                java.security.PrivilegedAction a =\n                    (java.security.PrivilegedAction) constructor.newInstance(\n                        new Object[]{ \"user.home\" });\n\n                homedir =\n                    (String) java.security.AccessController.doPrivileged(a);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/ConnectionDialogCommon.java",
  "id": 1389,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 626,
    "lines": "int part = ((Number) nodes[0].valueData).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1277,
    "lines": "int     part = ((Number) nodes[0].valueData).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1040,
    "lines": "int           part = ((Number) nodes[0].valueData).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 956,
    "lines": "int           part = ((Number) nodes[0].valueData).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 1390,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1995,
    "lines": "{\n                        sb.append(' ').append(Tokens.T_USING).append(\n                            ' ').append(Tokens.T_OCTETS);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1812,
    "lines": "{\n                    sb.append(' ').append(Tokens.T_USING).append(' ').append(\n                        Tokens.T_OCTETS);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1949,
    "lines": "{\n                        sb.append(' ').append(Tokens.T_USING).append(\n                            ' ').append(Tokens.T_OCTETS);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 1391,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3587,
    "lines": "try {\n                    rs.close();\n                } catch (SQLException se) {\n                    // We already got what we want from it, or have/are\n                    // processing a more specific error.\n                } finally {\n                    rs = null;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3217,
    "lines": "try {\n                rs.close();\n            } catch (SQLException se) {\n                // Purposefully doing nothing\n            } finally {\n                rs = null;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1688,
    "lines": "try {\n                            rs.close();\n                        } catch (SQLException se) {\n                            // Purposefully empty\n                        } finally {\n                            rs = null;\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1392,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 236,
    "lines": "{\n                            set.add(baseTable.fkConstraints[i].getMain()\n                                .getName());\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 253,
    "lines": "{\n                                set.add(baseTable.fkConstraints[i].getMain()\n                                    .getName());\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 259,
    "lines": "{\n                            set.add(baseTable.fkConstraints[i].getMain()\n                                .getName());\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java & more ...",
  "id": 1393,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3746,
    "lines": "HsqlName hsqlName =\n            database.nameManager.newColumnHsqlName(table.getName(),\n                token.tokenString, isDelimitedIdentifier());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1029,
    "lines": "HsqlName hsqlName =\n                        database.nameManager.newColumnHsqlName(table.getName(),\n                            token.tokenString, isDelimitedIdentifier());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1394,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1387,
    "lines": "return result <= 0 ? Boolean.TRUE\n                                   : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1493,
    "lines": "return result <= 0 ? Boolean.TRUE\n                                   : Boolean.FALSE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1395,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 299,
    "lines": "public String getExpandedString(String... strings) {\n        return vrb.getExpandedString(this, strings);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 140,
    "lines": "public String getExpandedString(String... strings) {\n        return vrb.getExpandedString(this, strings);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java, /hsqldb/src/org/hsqldb/lib/tar/RB.java",
  "id": 1396,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Like.java",
    "startLineNumber": 443,
    "lines": "catch (CloneNotSupportedException ex) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Expression\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 2096,
    "lines": "catch (CloneNotSupportedException ex) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Expression\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Like.java, /hsqldb/src/org/hsqldb/Expression.java",
  "id": 1397,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2557,
    "lines": "shared.userVars.remove(vars[i]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2524,
    "lines": "shared.userVars.remove(vars[i]);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1398,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 886,
    "lines": "Object[] data    = getLobHeader(aID);\n        long     aLength = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();\n\n        data = getLobHeader(bID);\n\n        long    bLength    = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();\n        int[][] aAddresses = getBlockAddresses(aID, 0, Integer.MAX_VALUE);\n        int[][] bAddresses = getBlockAddresses(bID, 0, Integer.MAX_VALUE);\n        int     aIndex     = 0;\n        int     bIndex     = 0;\n        int     aOffset    = 0;\n        int     bOffset    = 0;\n\n        if (aLength == 0) {\n            return bLength == 0 ? 0\n                                : -1;\n        }\n\n        if (bLength == 0) {\n            return 1;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 954,
    "lines": "Object[] data    = getLobHeader(aID);\n        long     aLength = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();\n\n        data = getLobHeader(bID);\n\n        long    bLength    = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();\n        int[][] aAddresses = getBlockAddresses(aID, 0, Integer.MAX_VALUE);\n        int[][] bAddresses = getBlockAddresses(bID, 0, Integer.MAX_VALUE);\n        int     aIndex     = 0;\n        int     bIndex     = 0;\n        int     aOffset    = 0;\n        int     bOffset    = 0;\n\n        if (aLength == 0) {\n            return bLength == 0 ? 0\n                                : -1;\n        }\n\n        if (bLength == 0) {\n            return 1;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1399,
  "numClones": 2,
  "cloneSize": 17
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3532,
    "lines": "String token = Tokens.getSQLTSIString(\n                    ((Number) nodes[0].getValue(null)).intValue());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3542,
    "lines": "String token = Tokens.getSQLTSIString(\n                    ((Number) nodes[0].getValue(null)).intValue());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1400,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 232,
    "lines": "public Object convertToType(SessionInterface session, Object a,\n                                Type otherType) {\n        return castOrConvertToType(session, a, otherType, false);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 367,
    "lines": "public Object convertToType(SessionInterface session, Object a,\n                                Type otherType) {\n        return castOrConvertToType(session, a, otherType, false);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BitType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java",
  "id": 1401,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5425,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                readThis(Tokens.COMMA);\n            } else if (token.tokenType == Tokens.CLOSEBRACKET) {\n                readThis(Tokens.CLOSEBRACKET);\n\n                break;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5385,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                readThis(Tokens.COMMA);\n            } else if (token.tokenType == Tokens.CLOSEBRACKET) {\n                readThis(Tokens.CLOSEBRACKET);\n\n                break;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1402,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 507,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TextTable.java",
    "startLineNumber": 340,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Database.java",
    "startLineNumber": 717,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TextTable.java",
    "startLineNumber": 363,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 585,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 569,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 609,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/TextTable.java & more ...",
  "id": 1403,
  "numClones": 7,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 510,
    "lines": "for (int i = 0; i < map.size(); i++) {\n                Grantee g = (Grantee) map.get(i);\n\n                g.revokeDbObject(name);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java",
    "startLineNumber": 496,
    "lines": "for (int i = 0; i < map.size(); i++) {\n            Grantee g = (Grantee) map.get(i);\n\n            g.revokeDbObject(name);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/GranteeManager.java, /hsqldb/src/org/hsqldb/rights/GranteeManager.java",
  "id": 1404,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 1307,
    "lines": "if (!session.getGrantee().isFullyAccessibleByRole(\n                                table.getName())) {\n                            throw Error.error(ErrorCode.X_42501);\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 1344,
    "lines": "if (!session.getGrantee().isFullyAccessibleByRole(\n                                table.getName())) {\n                            throw Error.error(ErrorCode.X_42501);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchema.java, /hsqldb/src/org/hsqldb/StatementSchema.java",
  "id": 1405,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java",
    "startLineNumber": 630,
    "lines": "{\n            if (fis != null) {\n                try {\n                    fis.close();\n                } catch (IOException ioe) {\n\n                    // Intentional no-op\n                }\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LockFile.java",
    "startLineNumber": 1168,
    "lines": "{\n            if (fis != null) {\n                try {\n                    fis.close();\n                } catch (IOException ioe) {\n\n                    // ioe.printStackTrace();\n                }\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/FrameworkLogger.java, /hsqldb/src/org/hsqldb/persist/LockFile.java",
  "id": 1406,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 630,
    "lines": "if (holder != null && holder != session) {\n                session.tempSet.add(holder);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 600,
    "lines": "if (holder != null && holder != session) {\n                session.tempSet.add(holder);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java, /hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
  "id": 1407,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4327,
    "lines": "Object[] args    = new Object[] {\n            name, newName\n        };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3631,
    "lines": "Object[] args = new Object[] {\n            name, newName\n        };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1408,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 905,
    "lines": "Table      t = c.getMain();\n\n                    if (t != table) {\n                        tableSet.add(t);\n                    }\n\n                    t = c.getRef();\n\n                    if (t != table) {\n                        tableSet.add(t);\n                    }\n\n                    constraintNameSet.add(c.getMainName());\n                    constraintNameSet.add(c.getRefName());\n                    indexNameSet.add(c.getRefIndex().getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 950,
    "lines": "Table      t = c.getMain();\n\n            if (t != table) {\n                tableSet.add(t);\n            }\n\n            t = c.getRef();\n\n            if (t != table) {\n                tableSet.add(t);\n            }\n\n            constraintNameSet.add(c.getMainName());\n            constraintNameSet.add(c.getRefName());\n            indexNameSet.add(c.getRefIndex().getName());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 1409,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1593,
    "lines": "Object[] rowData =\n                        nodes[RIGHT].nodes[i].getRowValue(session);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1529,
    "lines": "Object[] rowData = nodes[RIGHT].nodes[i].getRowValue(session);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1410,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 160,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.FILE_IO_ERROR, t);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 530,
    "lines": "catch (Throwable t) {\n            throw Error.error(ErrorCode.FILE_IO_ERROR, t);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java, /hsqldb/src/org/hsqldb/persist/DataFileCache.java",
  "id": 1411,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1782,
    "lines": "opType == OpTypes.EQUAL || opType == OpTypes.IS_NULL"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1896,
    "lines": "opType == OpTypes.EQUAL || opType == OpTypes.IS_NULL"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1760,
    "lines": "opType == OpTypes.EQUAL || opType == OpTypes.IS_NULL"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariable.java & more ...",
  "id": 1412,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 918,
    "lines": "catch (Exception E) {\n                if (verbose) {\n                    System.out.println(\"Transaction failed: \"\n                                       + E.getMessage());\n                    E.printStackTrace();\n                }\n\n                incrementFailedTransactionCount();\n\n                try {\n                    Conn.rollback();\n                } catch (SQLException E1) {}\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 1032,
    "lines": "catch (Exception E) {\n                if (verbose) {\n                    System.out.println(\"Transaction failed: \"\n                                       + E.getMessage());\n                    E.printStackTrace();\n                }\n\n                incrementFailedTransactionCount();\n\n                try {\n                    Conn.rollback();\n                } catch (SQLException E1) {}\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/TestBench.java",
  "id": 1413,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1130,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] == null) {\n                continue;\n            }\n\n            unresolvedSet = nodes[i].getUnkeyedColumns(unresolvedSet);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 929,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] == null) {\n                continue;\n            }\n\n            unresolvedSet = nodes[i].getUnkeyedColumns(unresolvedSet);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/ExpressionColumn.java",
  "id": 1414,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1125,
    "lines": "if (otherType.isNumberType()) {\n            if (typeCode == Types.SQL_DATE) {\n                b = ((NumberType) otherType).floor(b);\n            }\n\n            b = Type.SQL_INTERVAL_SECOND_MAX_PRECISION.multiply(\n                IntervalSecondData.oneDay, b);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1075,
    "lines": "if (otherType.isNumberType()) {\n            if (typeCode == Types.SQL_DATE) {\n                b = ((NumberType) otherType).floor(b);\n            }\n\n            b = Type.SQL_INTERVAL_SECOND_MAX_PRECISION.multiply(\n                IntervalSecondData.oneDay, b);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 1415,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1982,
    "lines": "for (int j = 0; j < triggerLists[i].length; j++) {\n                triggerLists[i][j].terminate();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1996,
    "lines": "for (int j = 0; j < triggerLists[i].length; j++) {\n                triggerLists[i][j].terminate();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 1416,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/ScriptRunner.java",
    "startLineNumber": 271,
    "lines": "{\n\n            // stop processing on bad log line\n            String error = \"statement error processing log \" + databaseFile\n                           + \"line: \" + scr.getLineNumber();\n\n            database.logger.logSevereEvent(error, e);\n\n            if (fullReplay) {\n                throw Error.error(e, ErrorCode.ERROR_IN_SCRIPT_FILE, error);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/ScriptRunner.java",
    "startLineNumber": 290,
    "lines": "{\n\n            // stop processing on bad script line\n            String error = \"statement error processing log \" + databaseFile\n                           + \"line: \" + scr.getLineNumber();\n\n            database.logger.logSevereEvent(error, e);\n\n            if (fullReplay) {\n                throw Error.error(e, ErrorCode.ERROR_IN_SCRIPT_FILE, error);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/ScriptRunner.java, /hsqldb/src/org/hsqldb/persist/ScriptRunner.java",
  "id": 1417,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 610,
    "lines": "if (reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)) {\n                    System.out.println(\"Select \" + (i + 1) + \" : \"\n                                       + (sw.elapsedTime() + 1));\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 575,
    "lines": "if (reportProgress && (i + 1) % 10000 == 0\n                        || (slow && (i + 1) % 100 == 0)) {\n                    System.out.println(\"Select \" + (i + 1) + \" : \"\n                                       + (sw.elapsedTime() + 1));\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java",
  "id": 1418,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 367,
    "lines": "if (!getName().isReservedName()) {\n                    sb.append(Tokens.T_CONSTRAINT).append(' ');\n                    sb.append(getName().statementName).append(' ');\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 322,
    "lines": "if (!getName().isReservedName()) {\n                        sb.append(Tokens.T_CONSTRAINT).append(' ');\n                        sb.append(getName().statementName).append(' ');\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Constraint.java, /hsqldb/src/org/hsqldb/Constraint.java",
  "id": 1419,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2664,
    "lines": "read();\n                    readThis(Tokens.OPENBRACKET);\n\n                    String  spec    = readQuotedString();\n                    Scanner scanner = session.getScanner();\n\n                    scanner.reset(spec);\n                    scanner.scanNext();\n\n                    String schemaName =\n                        session.getSchemaName(scanner.token.namePrefix);\n                    NumberSequence sequence =\n                        database.schemaManager.getSequence(\n                            scanner.token.tokenString, schemaName, true);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2786,
    "lines": "read();\n        readThis(Tokens.OPENBRACKET);\n\n        String  spec    = readQuotedString();\n        Scanner scanner = session.getScanner();\n\n        scanner.reset(spec);\n        scanner.scanNext();\n\n        String schemaName = session.getSchemaName(scanner.token.namePrefix);\n        NumberSequence sequence =\n            database.schemaManager.getSequence(scanner.token.tokenString,\n                                               schemaName, true);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1420,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4156,
    "lines": "if (o instanceof String) {\n                        o = outType.convertToDefaultType(session, o);\n\n                        break;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 4176,
    "lines": "if (o instanceof String) {\n                        o = outType.convertToDefaultType(session, o);\n\n                        break;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
  "id": 1421,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 166,
    "lines": "System.out.println(\n            \"*********************************************************\");\n        System.out.println();\n        System.out.println(\"Driver: \" + DriverName);\n        System.out.println(\"URL:\" + DBUrl);\n        System.out.println();\n        System.out.println(\"Scale factor value: \" + tps);\n        System.out.println(\"Number of clients: \" + n_clients);\n        System.out.println(\"Number of transactions per client: \"\n                           + n_txn_per_client);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 158,
    "lines": "System.out.println(\n            \"*********************************************************\");\n        System.out.println();\n        System.out.println(\"Driver: \" + DriverName);\n        System.out.println(\"URL:\" + DBUrl);\n        System.out.println();\n        System.out.println(\"Scale factor value: \" + tps);\n        System.out.println(\"Number of clients: \" + n_clients);\n        System.out.println(\"Number of transactions per client: \"\n                           + n_txn_per_client);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 1422,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1500,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 24 * 60\n                        * 60;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1505,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 24 * 60\n                        * 60;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1510,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 24 * 60\n                        * 60;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1495,
    "lines": "limit = DTIType.precisionLimits[(int) precision] * 24 * 60\n                        * 60;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java & more ...",
  "id": 1423,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
    "startLineNumber": 174,
    "lines": "for (int i = 0; i < nullsList.length; i++) {\n            if (data[i] == null) {\n                nullsList[i] = true;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 106,
    "lines": "for (int i = 0; i < nullsList.length; i++) {\n            if (data[i] == null) {\n                nullsList[i] = true;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
  "id": 1424,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataChangeMemory.java",
    "startLineNumber": 212,
    "lines": "Object[] currentData = (Object[]) list.getSecondValueByIndex(lookup);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataChangeMemory.java",
    "startLineNumber": 168,
    "lines": "Object[] currentData =\n                (Object[]) list.getSecondValueByIndex(lookup);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataChangeMemory.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataChangeMemory.java",
  "id": 1425,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 715,
    "lines": "if (length < 0 || length > dlen - pos) {\n            throw JDBCUtil.outOfRangeArgument(\"length: \" + length);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 186,
    "lines": "if (length < 0 || length > dlen - pos) {\n            throw JDBCUtil.outOfRangeArgument(\"length: \" + length);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
    "startLineNumber": 201,
    "lines": "if (length < 0 || length > dlen - pos) {\n            throw JDBCUtil.outOfRangeArgument(\"length: \" + length);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java & more ...",
  "id": 1426,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 98,
    "lines": "java.util.HashMap uMap = new java.util.HashMap();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 139,
    "lines": "java.util.HashMap uMap = new java.util.HashMap();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 59,
    "lines": "java.util.HashMap uMap = new java.util.HashMap();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java, /hsqldb/src/org/hsqldb/test/TestHashStructures.java & more ...",
  "id": 1427,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1207,
    "lines": "token.tokenString = sqlString.substring(currentPosition,\n                        currentPosition + 2);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1591,
    "lines": "token.tokenString =\n                            sqlString.substring(currentPosition,\n                                                currentPosition + 2);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1562,
    "lines": "token.tokenString = sqlString.substring(currentPosition,\n                        currentPosition + 2);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1498,
    "lines": "token.tokenString = sqlString.substring(currentPosition,\n                        currentPosition + 2);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java & more ...",
  "id": 1428,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 340,
    "lines": "if (coeOverride != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_abort_continue_mutuallyexclusive.getString());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 354,
    "lines": "if (coeOverride != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_abort_continue_mutuallyexclusive.getString());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java",
    "startLineNumber": 347,
    "lines": "if (coeOverride != null) {\n                        throw new SqlToolException(SYNTAXERR_EXITVAL,\n                                SqltoolRB.SqlTool_abort_continue_mutuallyexclusive.getString());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlTool.java, /hsqldb/src/org/hsqldb/cmdline/SqlTool.java & more ...",
  "id": 1429,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1202,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                nodes[i].resolveTypes(session, this);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 379,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    if (nodes[i] != null) {\n                        nodes[i].resolveTypes(session, this);\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1159,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                nodes[i].resolveTypes(session, this);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionTable.java",
    "startLineNumber": 99,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                nodes[i].resolveTypes(session, this);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 255,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                nodes[i].resolveTypes(session, this);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2180,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                nodes[i].resolveTypes(session, this);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAggregate.java",
    "startLineNumber": 226,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                nodes[i].resolveTypes(session, this);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLike.java",
    "startLineNumber": 123,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                nodes[i].resolveTypes(session, this);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 79,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                nodes[i].resolveTypes(session, this);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 647,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] != null) {\n                nodes[i].resolveTypes(session, this);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/ExpressionOp.java & more ...",
  "id": 1430,
  "numClones": 10,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 707,
    "lines": "Object[] args = new Object[]{ mode };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 687,
    "lines": "Object[] args = new Object[]{ mode };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 1431,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1228,
    "lines": "precision == DTIType.defaultIntervalPrecision\n                        && fractionPrecision\n                           == DTIType.defaultIntervalFractionPrecision"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1262,
    "lines": "precision == DTIType.defaultIntervalPrecision\n                        && fractionPrecision\n                           == DTIType.defaultIntervalFractionPrecision"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1270,
    "lines": "precision == DTIType.defaultIntervalPrecision\n                        && fractionPrecision\n                           == DTIType.defaultIntervalFractionPrecision"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 1254,
    "lines": "precision == DTIType.defaultIntervalPrecision\n                        && fractionPrecision\n                           == DTIType.defaultIntervalFractionPrecision"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java & more ...",
  "id": 1432,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 693,
    "lines": "for (int i = 0; i < DatabaseManagerCommon.testDataSql.length;\n                    i++) {\n                addToRecent(DatabaseManagerCommon.testDataSql[i]);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 388,
    "lines": "for (int i = 0; i < DatabaseManagerCommon.testDataSql.length;\n                    i++) {\n                addToRecent(DatabaseManagerCommon.testDataSql[i]);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java",
  "id": 1433,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreMem.java",
    "startLineNumber": 90,
    "lines": "if (largeBlockIndex >= byteStoreList.size()) {\n                byteStoreList.add(new byte[largeBlockSize]);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobStoreMem.java",
    "startLineNumber": 118,
    "lines": "if (largeBlockIndex >= byteStoreList.size()) {\n                byteStoreList.add(new byte[largeBlockSize]);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobStoreMem.java, /hsqldb/src/org/hsqldb/persist/LobStoreMem.java",
  "id": 1434,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDbBackup.java",
    "startLineNumber": 309,
    "lines": "DbBackup.main(new String[] {\n            \"--extract\", baseDir.getAbsolutePath() + '/' + baseTarName,\n            destDir.getAbsolutePath()\n        });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDbBackup.java",
    "startLineNumber": 344,
    "lines": "DbBackup.main(new String[] {\n            \"--extract\", baseDir.getAbsolutePath() + '/' + baseTarName,\n            destDir.getAbsolutePath()\n        });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDbBackup.java, /hsqldb/src/org/hsqldb/test/TestDbBackup.java",
  "id": 1435,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlArrayList.java",
    "startLineNumber": 237,
    "lines": "if (index >= elementCount) {\n            throw new IndexOutOfBoundsException(\"Index out of bounds: \"\n                                                + index + \" >= \"\n                                                + elementCount);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlArrayList.java",
    "startLineNumber": 206,
    "lines": "if (index >= elementCount) {\n            throw new IndexOutOfBoundsException(\"Index out of bounds: \"\n                                                + index + \" >= \"\n                                                + elementCount);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlArrayList.java",
    "startLineNumber": 167,
    "lines": "if (index >= elementCount) {\n            throw new IndexOutOfBoundsException(\"Index out of bounds: \"\n                                                + index + \" >= \"\n                                                + elementCount);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlArrayList.java, /hsqldb/src/org/hsqldb/lib/HsqlArrayList.java & more ...",
  "id": 1436,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 770,
    "lines": "for (int i = 0; i < arra.length; i++) {\n            if (arrb[arra[i]]) {\n                continue;\n            }\n\n            return false;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 784,
    "lines": "for (int i = 0; i < arra.length; i++) {\n            if (arrb[arra[i]]) {\n                continue;\n            }\n\n            return false;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
  "id": 1437,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 2036,
    "lines": "if (condition == null) {\n                    condition = newCondition;\n                } else {\n                    condition = new ExpressionLogical(OpTypes.OR, condition,\n                                                      newCondition);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4990,
    "lines": "if (condition == null) {\n                    condition = newCondition;\n                } else {\n                    condition = new ExpressionLogical(OpTypes.OR, condition,\n                                                      newCondition);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1438,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1769,
    "lines": "params[GET_LOB_PART.LOB_ID]       = ValuePool.getLong(lobID);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2268,
    "lines": "params[GET_LOB_PART.LOB_ID] = ValuePool.getLong(lobID);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1948,
    "lines": "params[GET_LOB_PART.LOB_ID]       = ValuePool.getLong(lobID);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 1439,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5746,
    "lines": "addColumn(t, \"DATA_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"CHARACTER_MAXIMUM_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_OCTET_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_SET_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);          //\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);        //\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7840,
    "lines": "addColumn(t, \"DATA_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"CHARACTER_MAXIMUM_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_OCTET_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_SET_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 1440,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
    "startLineNumber": 263,
    "lines": "catch (SQLException e) {\n            System.out.println(e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 321,
    "lines": "catch (SQLException e) {\n            System.out.println(e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 274,
    "lines": "catch (SQLException e) {\n            System.out.println(e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 314,
    "lines": "catch (SQLException e) {\n            System.out.println(e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 582,
    "lines": "catch (SQLException e) {\n            System.out.println(e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
    "startLineNumber": 425,
    "lines": "catch (SQLException e) {\n            System.out.println(e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJavaFunctions.java",
    "startLineNumber": 130,
    "lines": "catch (SQLException e) {\n            System.out.println(e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBatchBug.java",
    "startLineNumber": 120,
    "lines": "catch (SQLException e) {    // Ignore Exception, because the table may not yet exist\n            System.out.println(e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
    "startLineNumber": 380,
    "lines": "catch (SQLException e) {\n            System.out.println(e.getMessage());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java, /hsqldb/src/org/hsqldb/test/TestAllTypes.java & more ...",
  "id": 1441,
  "numClones": 9,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSql.java",
    "startLineNumber": 370,
    "lines": "stmnt.execute(ddl1);\n\n            PreparedStatement ps = connection.prepareStatement(\n                \"INSERT INTO t1 (d,f,l,i,s,t,dt,ti,ts) VALUES (?,?,?,?,?,?,?,?,?)\");\n\n            ps.setString(1, \"0.2\");\n            ps.setDouble(2, 0.2);\n            ps.setLong(3, java.lang.Long.MAX_VALUE);\n            ps.setInt(4, Integer.MAX_VALUE);\n            ps.setInt(5, Short.MAX_VALUE);\n            ps.setInt(6, 0);\n            ps.setDate(7, new java.sql.Date(System.currentTimeMillis()));\n            ps.setTime(8, new java.sql.Time(System.currentTimeMillis()));\n            ps.setTimestamp(\n                9, new java.sql.Timestamp(System.currentTimeMillis()));\n            ps.execute();\n            ps.setInt(1, 0);\n            ps.setDouble(2, java.lang.Double.NaN);\n            ps.setLong(3, java.lang.Long.MIN_VALUE);\n            ps.setInt(4, Integer.MIN_VALUE);\n            ps.setInt(5, Short.MIN_VALUE);\n            ps.setInt(6, 0);\n\n            // allowed conversions\n            ps.setTimestamp(\n                7, new java.sql.Timestamp(System.currentTimeMillis() + 1));\n            ps.setTime(8, new java.sql.Time(System.currentTimeMillis() + 1));\n            ps.setDate(9, new java.sql.Date(System.currentTimeMillis() + 1));\n            ps.execute();\n\n            //\n            ps.setInt(1, 0);\n            ps.setDouble(2, java.lang.Double.POSITIVE_INFINITY);\n            ps.setInt(4, Integer.MIN_VALUE);\n\n            // test conversion\n            // ps.setObject(5, Boolean.TRUE); // no longer converts boolean to int\n            // ps.setBoolean(5, true);\n            ps.setObject(5, new Short((short) 2), Types.SMALLINT);\n            ps.setObject(6, new Integer(2), Types.TINYINT);\n\n            // allowed conversions\n            ps.setObject(7, new java.sql.Date(System.currentTimeMillis() + 2));\n            ps.setObject(8, new java.sql.Time(System.currentTimeMillis() + 2));\n            ps.setObject(9, new java.sql.Timestamp(System.currentTimeMillis()\n                                                   + 2));\n            ps.execute();\n            ps.setObject(1, new Float(0), Types.INTEGER);\n            ps.setObject(4, new Float(1), Types.INTEGER);\n            ps.setDouble(2, java.lang.Double.NEGATIVE_INFINITY);\n            ps.execute();\n\n            ResultSet rs =\n                stmnt.executeQuery(\"SELECT d, f, l, i, s*2, t FROM t1\");\n            boolean result = rs.next();\n\n            value = rs.getDouble(2);\n\n//            int smallintValue = rs.getShort(3);\n            int integerValue = rs.getInt(4);\n\n            if (rs.next()) {\n                value        = rs.getDouble(2);\n                wasEqual     = Double.isNaN(value);\n                integerValue = rs.getInt(4);\n\n                // tests for conversion\n                // getInt on DECIMAL\n                integerValue = rs.getInt(1);\n            }\n\n            if (rs.next()) {\n                value    = rs.getDouble(2);\n                wasEqual = wasEqual && value == Double.POSITIVE_INFINITY;\n            }\n\n            if (rs.next()) {\n                value    = rs.getDouble(2);\n                wasEqual = wasEqual && value == Double.NEGATIVE_INFINITY;\n            }\n\n            rs = stmnt.executeQuery(\"SELECT MAX(i) FROM t1\");\n\n            if (rs.next()) {\n                int max = rs.getInt(1);\n\n                System.out.println(\"Max value for i: \" + max);\n            }\n\n            try {\n\n                // cause errors\n                ps.setString(5, \"three\");\n                fail(\"update did not fail\");\n            } catch (SQLException e) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
    "startLineNumber": 445,
    "lines": "stmnt.execute(ddl1);\n\n            PreparedStatement ps = connection.prepareStatement(\n                \"INSERT INTO t1 (d,f,l,i,s,t,dt,ti,ts) VALUES (?,?,?,?,?,?,?,?,?)\");\n\n            ps.setString(1, \"0.2\");\n            ps.setDouble(2, 0.2);\n            ps.setLong(3, java.lang.Long.MAX_VALUE);\n            ps.setInt(4, Integer.MAX_VALUE);\n            ps.setInt(5, Short.MAX_VALUE);\n            ps.setInt(6, 0);\n            ps.setDate(7, new java.sql.Date(System.currentTimeMillis()));\n            ps.setTime(8, new java.sql.Time(System.currentTimeMillis()));\n            ps.setTimestamp(\n                9, new java.sql.Timestamp(System.currentTimeMillis()));\n            ps.execute();\n            ps.setInt(1, 0);\n            ps.setDouble(2, java.lang.Double.NaN);\n            ps.setLong(3, java.lang.Long.MIN_VALUE);\n            ps.setInt(4, Integer.MIN_VALUE);\n            ps.setInt(5, Short.MIN_VALUE);\n            ps.setInt(6, 0);\n\n            // allowed conversions\n            ps.setTimestamp(\n                7, new java.sql.Timestamp(System.currentTimeMillis() + 1));\n            ps.setTime(8, new java.sql.Time(System.currentTimeMillis() + 1));\n            ps.setDate(9, new java.sql.Date(System.currentTimeMillis() + 1));\n            ps.execute();\n\n            //\n            ps.setInt(1, 0);\n            ps.setDouble(2, java.lang.Double.POSITIVE_INFINITY);\n            ps.setInt(4, Integer.MIN_VALUE);\n\n            // test conversion\n            // ps.setObject(5, Boolean.TRUE); // no longer converts boolean to int\n            // ps.setBoolean(5, true);\n            ps.setObject(5, new Short((short) 2), Types.SMALLINT);\n            ps.setObject(6, new Integer(2), Types.TINYINT);\n\n            // allowed conversions\n            ps.setObject(7, new java.sql.Date(System.currentTimeMillis() + 2));\n            ps.setObject(8, new java.sql.Time(System.currentTimeMillis() + 2));\n            ps.setObject(9, new java.sql.Timestamp(System.currentTimeMillis()\n                                                   + 2));\n            ps.execute();\n            ps.setObject(1, new Float(0), Types.INTEGER);\n            ps.setObject(4, new Float(1), Types.INTEGER);\n            ps.setDouble(2, java.lang.Double.NEGATIVE_INFINITY);\n            ps.execute();\n\n            ResultSet rs =\n                stmnt.executeQuery(\"SELECT d, f, l, i, s*2, t FROM t1\");\n            boolean result = rs.next();\n\n            value = rs.getDouble(2);\n\n//            int smallintValue = rs.getShort(3);\n            int integerValue = rs.getInt(4);\n\n            if (rs.next()) {\n                value        = rs.getDouble(2);\n                wasEqual     = Double.isNaN(value);\n                integerValue = rs.getInt(4);\n\n                // tests for conversion\n                // getInt on DECIMAL\n                integerValue = rs.getInt(1);\n            }\n\n            if (rs.next()) {\n                value    = rs.getDouble(2);\n                wasEqual = wasEqual && value == Double.POSITIVE_INFINITY;\n            }\n\n            if (rs.next()) {\n                value    = rs.getDouble(2);\n                wasEqual = wasEqual && value == Double.NEGATIVE_INFINITY;\n            }\n\n            rs = stmnt.executeQuery(\"SELECT MAX(i) FROM t1\");\n\n            if (rs.next()) {\n                int max = rs.getInt(1);\n\n                System.out.println(\"Max value for i: \" + max);\n            }\n\n            try {\n\n                // cause errors\n                ps.setString(5, \"three\");\n                fail(\"update did not fail\");\n            } catch (SQLException e) {}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSql.java, /hsqldb/src/org/hsqldb/test/TestSqlPersistent.java",
  "id": 1442,
  "numClones": 2,
  "cloneSize": 67
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 439,
    "lines": "if (slen > precision) {\n                    if (getRightTrimSise((String) a, ' ') <= precision) {\n                        return ((String) a).substring(0, (int) precision);\n                    } else {\n                        throw Error.error(ErrorCode.X_22001);\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 418,
    "lines": "if (slen > precision) {\n                    if (getRightTrimSise((String) a, ' ') <= precision) {\n                        return ((String) a).substring(0, (int) precision);\n                    } else {\n                        throw Error.error(ErrorCode.X_22001);\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 1443,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java",
    "startLineNumber": 140,
    "lines": "if (store == null) {\n                    store = session.database.logger.newStore(session, this,\n                            table);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java",
    "startLineNumber": 169,
    "lines": "if (store == null) {\n                    store = session.database.logger.newStore(session, this,\n                            table);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java",
    "startLineNumber": 153,
    "lines": "if (store == null) {\n                    store = session.database.logger.newStore(session, this,\n                            table);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java",
    "startLineNumber": 129,
    "lines": "if (store == null) {\n                    store = session.database.logger.newStore(session, this,\n                            table);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java, /hsqldb/src/org/hsqldb/persist/PersistentStoreCollectionSession.java & more ...",
  "id": 1444,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDima.java",
    "startLineNumber": 123,
    "lines": "catch (Exception e) {\n            System.err.println(e.getMessage());\n            e.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDima.java",
    "startLineNumber": 205,
    "lines": "catch (Exception e) {\n            System.err.println(e.getMessage());\n            e.printStackTrace();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDima.java, /hsqldb/src/org/hsqldb/test/TestDima.java",
  "id": 1445,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2692,
    "lines": "if (token.tokenType == Tokens.OPENBRACKET) {\n                read();\n                readSequenceOptions(sequence, false, false, true);\n                readThis(Tokens.CLOSEBRACKET);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2588,
    "lines": "if (token.tokenType == Tokens.OPENBRACKET) {\n                            read();\n                            readSequenceOptions(sequence, false, false, true);\n                            readThis(Tokens.CLOSEBRACKET);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1446,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 406,
    "lines": "sb.append(left).append(' ').append(Tokens.T_IS).append(\n                    ' ')"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 398,
    "lines": "sb.append(left).append(' ').append(Tokens.T_IS).append(\n                    ' ')"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1447,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 984,
    "lines": "int[] cols =\n                        constraint.core.deleteAction\n                        == SchemaObject.ReferentialAction.CASCADE ? null\n                                                                  : constraint\n                                                                      .getRefColumns();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 952,
    "lines": "int[] cols =\n                        constraint.core.deleteAction\n                        == SchemaObject.ReferentialAction.CASCADE ? null\n                                                                  : constraint\n                                                                      .getRefColumns();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 1448,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1225,
    "lines": "{\n\n        readLock.lock();\n\n        try {\n            Schema schema = (Schema) schemaMap.get(schemaName);\n\n            if (schema != null) {\n                SchemaObject object = schema.typeLookup.getObject(name);\n\n                if (object != null) {\n                    return (Type) object;\n                }\n            }\n\n            if (raise) {\n                throw Error.error(ErrorCode.X_42501, name);\n            }\n\n            return null;\n        } finally {\n            readLock.unlock();\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1200,
    "lines": "{\n\n        readLock.lock();\n\n        try {\n            Schema schema = (Schema) schemaMap.get(schemaName);\n\n            if (schema != null) {\n                SchemaObject object = schema.typeLookup.getObject(name);\n\n                if (object != null) {\n                    return (Type) object;\n                }\n            }\n\n            if (raise) {\n                throw Error.error(ErrorCode.X_42501, name);\n            }\n\n            return null;\n        } finally {\n            readLock.unlock();\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 1449,
  "numClones": 2,
  "cloneSize": 18
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobType.java",
    "startLineNumber": 309,
    "lines": "public String convertToSQLString(Object a) {\n\n        if (a == null) {\n            return Tokens.T_NULL;\n        }\n\n        return convertToString(a);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobType.java",
    "startLineNumber": 179,
    "lines": "public String convertToSQLString(Object a) {\n\n        if (a == null) {\n            return Tokens.T_NULL;\n        }\n\n        return convertToString(a);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 1252,
    "lines": "public String convertToSQLString(Object a) {\n\n        if (a == null) {\n            return Tokens.T_NULL;\n        }\n\n        return convertToString(a);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BlobType.java, /hsqldb/src/org/hsqldb/types/ClobType.java & more ...",
  "id": 1450,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 401,
    "lines": "if (uMap.size() != hMap.size()) {\n                throw new Exception(\"HashMap size mismatch\");\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 265,
    "lines": "if (uMap.size() != hMap.size()) {\n                throw new Exception(\"HashMap size mismatch\");\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 281,
    "lines": "if (uMap.size() != hMap.size()) {\n                throw new Exception(\"HashMap size mismatch\");\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 377,
    "lines": "if (uMap.size() != hMap.size()) {\n                    throw new Exception(\"HashMap size mismatch\");\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 330,
    "lines": "if (uMap.size() != hMap.size()) {\n                throw new Exception(\"HashMap size mismatch\");\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 346,
    "lines": "if (uMap.size() != hMap.size()) {\n                throw new Exception(\"HashMap size mismatch\");\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java, /hsqldb/src/org/hsqldb/test/TestHashStructures.java & more ...",
  "id": 1451,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java",
    "startLineNumber": 119,
    "lines": "public void removeAll() {\n\n        destroy();\n        elementCount.set(0);\n        ArrayUtil.fillArray(accessorList, null);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 170,
    "lines": "public void removeAll() {\n\n        destroy();\n        elementCount.set(0);\n        ArrayUtil.fillArray(accessorList, null);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
  "id": 1452,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 974,
    "lines": "String       all   = txtCommand.getText();\n        StringBuffer b     = new StringBuffer();\n        long         total = 0;\n\n        for (int i = 0; i < all.length(); i++) {\n            char c = all.charAt(i);\n\n            if (c != '\\n') {\n                b.append(c);\n            }\n        }\n\n        all = b.toString();\n\n        String[] g = new String[4];\n\n        g[0] = \"ms\";\n        g[1] = \"count\";\n        g[2] = \"sql\";\n        g[3] = \"error\";\n\n        gResult.setHead(g);\n\n        int max = 1;\n\n        lTime = System.currentTimeMillis() - lTime;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1797,
    "lines": "String       all   = txtCommand.getText();\n        StringBuffer b     = new StringBuffer();\n        long         total = 0;\n\n        for (int i = 0; i < all.length(); i++) {\n            char c = all.charAt(i);\n\n            if (c != '\\n') {\n                b.append(c);\n            }\n        }\n\n        all = b.toString();\n\n        String[] g = new String[4];\n\n        g[0] = \"ms\";\n        g[1] = \"count\";\n        g[2] = \"sql\";\n        g[3] = \"error\";\n\n        gResult.setHead(g);\n\n        int max = 1;\n\n        lTime = System.currentTimeMillis() - lTime;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1453,
  "numClones": 2,
  "cloneSize": 18
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2137,
    "lines": "if (column != null) {\n                    DefaultMutableTreeNode childNode =\n                        (DefaultMutableTreeNode) treePath\n                            .getLastPathComponent();\n                    String  childName = null;\n                    boolean isChar;\n\n                    if (childNode.getChildCount() > 0) {\n                        childName = childNode.getFirstChild().toString();\n                        isChar    = childName.indexOf(\"CHAR\") >= 0;\n                        result    += \" WHERE \" + quoteObjectName(column);\n\n                        if (isChar) {\n                            result += \" LIKE \\'%%\\'\";\n                        } else {\n                            result += \" = \";\n                        }\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2175,
    "lines": "if (column != null) {\n                    DefaultMutableTreeNode childNode =\n                        (DefaultMutableTreeNode) treePath\n                            .getLastPathComponent();\n                    String  childName = null;\n                    boolean isChar;\n\n                    if (childNode.getChildCount() > 0) {\n                        childName = childNode.getFirstChild().toString();\n                        isChar    = childName.indexOf(\"CHAR\") >= 0;\n                        result    += \" WHERE \" + quoteObjectName(column);\n\n                        if (isChar) {\n                            result += \" LIKE \\'%%\\'\";\n                        } else {\n                            result += \" = \";\n                        }\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1454,
  "numClones": 2,
  "cloneSize": 17
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 477,
    "lines": "Table refT = database.schemaManager.getUserTable(session,\n                    c.core.refTable.getName());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 494,
    "lines": "Table refT = database.schemaManager.getUserTable(session,\n                    c.core.refTable.getName());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 1455,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 321,
    "lines": "String[] expected = new String[] {\n            \"large red delicious tree\", \"small red delicious tree\"\n        };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSubselect.java",
    "startLineNumber": 335,
    "lines": "String[] expected = new String[] {\n            \"large red delicious tree\", \"small red delicious tree\"\n        };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestSubselect.java, /hsqldb/src/org/hsqldb/test/TestSubselect.java",
  "id": 1456,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 538,
    "lines": "params[LOB_IDS.LOB_USAGE_COUNT] = ValuePool.INTEGER_0;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1085,
    "lines": "params[LOB_IDS.LOB_USAGE_COUNT] = ValuePool.INTEGER_0;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 513,
    "lines": "params[LOB_IDS.LOB_USAGE_COUNT] = ValuePool.INTEGER_0;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 1457,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 261,
    "lines": "nodes[RIGHT].nullability = SchemaObject.Nullability.NO_NULLS;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 245,
    "lines": "nodes[RIGHT].nullability =\n                        SchemaObject.Nullability.NO_NULLS;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1458,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Tokenizer.java",
    "startLineNumber": 168,
    "lines": "currentIndex < len &&\n                        cmd.charAt(currentIndex) == Token.ASSIGN"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Tokenizer.java",
    "startLineNumber": 154,
    "lines": "currentIndex < len &&\n                        cmd.charAt(currentIndex) == Token.ASSIGN"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/preprocessor/Tokenizer.java",
    "startLineNumber": 182,
    "lines": "currentIndex < len &&\n                        cmd.charAt(currentIndex) == Token.ASSIGN"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/preprocessor/Tokenizer.java, /hsqldb/src/org/hsqldb/util/preprocessor/Tokenizer.java & more ...",
  "id": 1459,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1751,
    "lines": "catch (SQLException se) {\n                    throw new BadSpecial(\n                            SqltoolRB.metadata_fetch_fail.getString(), se);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3578,
    "lines": "catch (SQLException se) {\n            throw new BadSpecial(SqltoolRB.metadata_fetch_fail.getString(), se);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1460,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 430,
    "lines": "if (nodes[LEFT].dataType == null || nodes[RIGHT].dataType == null) {\n            throw Error.error(ErrorCode.X_42567);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLike.java",
    "startLineNumber": 148,
    "lines": "if (nodes[LEFT].dataType == null || nodes[RIGHT].dataType == null) {\n            throw Error.error(ErrorCode.X_42567);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 900,
    "lines": "if (nodes[LEFT].dataType == null\n                    || nodes[RIGHT].dataType == null) {\n                throw Error.error(ErrorCode.X_42567);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionLike.java & more ...",
  "id": 1461,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 94,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    n_clients = Integer.parseInt(Args[i]);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 63,
    "lines": "{\n                if (i + 1 < Args.length) {\n                    i++;\n\n                    n_clients = Integer.parseInt(Args[i]);\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 1462,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4728,
    "lines": "list[i] = new Expression(OpTypes.ROW,\n                                         new Expression[]{ list[i] });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4578,
    "lines": "list[i] = new Expression(OpTypes.ROW,\n                                                 new Expression[]{ list[i] });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1463,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Tree.java",
    "startLineNumber": 159,
    "lines": "/**\n     * Method declaration\n     *\n     *\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     */\n\n// fredt@users 20011210 - patch 450412 by elise@users\n// with additional replacement of deprecated methods\n    public void setBounds(int x, int y, int w, int h) {\n\n        super.setBounds(x, y, w, h);\n\n        iSbHeight = sbHoriz.getPreferredSize().height;\n        iSbWidth  = sbVert.getPreferredSize().width;\n        iHeight   = h - iSbHeight;\n        iWidth    = w - iSbWidth;\n\n        sbHoriz.setBounds(0, iHeight, iWidth, iSbHeight);\n        sbVert.setBounds(iWidth, 0, iSbWidth, iHeight);\n        adjustScroll();\n\n        iImage = null;\n\n        repaint();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Grid.java",
    "startLineNumber": 178,
    "lines": "/**\n     * Method declaration\n     *\n     *\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     */\n    public void setBounds(int x, int y, int w, int h) {\n\n        // fredt@users 20011210 - patch 450412 by elise@users\n        super.setBounds(x, y, w, h);\n\n        iSbHeight = sbHoriz.getPreferredSize().height;\n        iSbWidth  = sbVert.getPreferredSize().width;\n        iHeight   = h - iSbHeight;\n        iWidth    = w - iSbWidth;\n\n        sbHoriz.setBounds(0, iHeight, iWidth, iSbHeight);\n        sbVert.setBounds(iWidth, 0, iSbWidth, iHeight);\n        adjustScroll();\n\n        iImage = null;\n\n        repaint();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Tree.java, /hsqldb/src/org/hsqldb/util/Grid.java",
  "id": 1464,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 704,
    "lines": "parseList = new short[] {\n                    Tokens.OPENBRACKET, Tokens.X_KEYSET, 10,\n                    Tokens.SQL_TSI_FRAC_SECOND, Tokens.SQL_TSI_MILLI_SECOND,\n                    Tokens.SQL_TSI_SECOND, Tokens.SQL_TSI_MINUTE,\n                    Tokens.SQL_TSI_HOUR, Tokens.SQL_TSI_DAY,\n                    Tokens.SQL_TSI_WEEK, Tokens.SQL_TSI_MONTH,\n                    Tokens.SQL_TSI_QUARTER, Tokens.SQL_TSI_YEAR, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.COMMA, Tokens.QUESTION,\n                    Tokens.CLOSEBRACKET\n                };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 690,
    "lines": "parseList = new short[] {\n                    Tokens.OPENBRACKET, Tokens.X_KEYSET, 10,\n                    Tokens.SQL_TSI_FRAC_SECOND, Tokens.SQL_TSI_MILLI_SECOND,\n                    Tokens.SQL_TSI_SECOND, Tokens.SQL_TSI_MINUTE,\n                    Tokens.SQL_TSI_HOUR, Tokens.SQL_TSI_DAY,\n                    Tokens.SQL_TSI_WEEK, Tokens.SQL_TSI_MONTH,\n                    Tokens.SQL_TSI_QUARTER, Tokens.SQL_TSI_YEAR, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.COMMA, Tokens.QUESTION,\n                    Tokens.CLOSEBRACKET\n                };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1465,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java",
    "startLineNumber": 255,
    "lines": "// (ulrivo): full size on screen with less than 640 width\n        if (d.width >= 640) {\n            setLocation((d.width - size.width) / 2,\n                        (d.height - size.height) / 2);\n        } else {\n            setLocation(0, 0);\n            setSize(d);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
    "startLineNumber": 256,
    "lines": "// (ulrivo): full size on screen with less than 640 width\n        if (d.width >= 640) {\n            setLocation((d.width - size.width) / 2,\n                        (d.height - size.height) / 2);\n        } else {\n            setLocation(0, 0);\n            setSize(d);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java, /hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
  "id": 1466,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 923,
    "lines": "{\n                    if (session.database.sqlEnforceTypes) {\n                        throw Error.error(ErrorCode.X_42562);\n                    }\n\n                    if (nodes[RIGHT].dataType.canConvertFrom(\n                            nodes[LEFT].dataType)) {\n                        nodes[LEFT] = ExpressionOp.getCastExpression(session,\n                                nodes[LEFT], nodes[RIGHT].dataType);\n                    }\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 943,
    "lines": "{\n                    if (session.database.sqlEnforceTypes) {\n                        throw Error.error(ErrorCode.X_42562);\n                    }\n\n                    if (nodes[RIGHT].dataType.canConvertFrom(\n                            nodes[LEFT].dataType)) {\n                        nodes[LEFT] = ExpressionOp.getCastExpression(session,\n                                nodes[LEFT], nodes[RIGHT].dataType);\n                    }\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1467,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 173,
    "lines": "if (arra.length > arrb.length) {\n            return 1;\n        } else if (arra.length < arrb.length) {\n            return -1;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 147,
    "lines": "if (arra.length > arrb.length) {\n            return 1;\n        } else if (arra.length < arrb.length) {\n            return -1;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ArrayType.java, /hsqldb/src/org/hsqldb/types/RowType.java",
  "id": 1468,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 4486,
    "lines": "resultMetaData.colIndexes[columnIndex - 1] > 0\n                        && resultMetaData.columns[columnIndex - 1]\n                            .isWriteable()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 4424,
    "lines": "resultMetaData.colIndexes[columnIndex - 1] > 0\n                        && resultMetaData.columns[columnIndex - 1]\n                            .isWriteable()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 1469,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
    "startLineNumber": 288,
    "lines": "/**\n     * Sets the size of this stream's accumulated data. <p>\n     *\n     * @param   newSize the new size\n     * @throws  ArrayIndexOutOfBoundsException if new size is negative\n     */\n    public synchronized void setSize(int newSize) {\n\n        if (newSize < 0) {\n            throw new ArrayIndexOutOfBoundsException(newSize);\n        } else if (newSize > buf.length) {\n            buf = copyOf(buf, Math.max(buf.length << 1, newSize));\n        }\n\n        count = newSize;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
    "startLineNumber": 323,
    "lines": "/**\n     * Sets the size of this writer's accumulated character data. <p>\n     *\n     * @param   newSize the new size of this writer's accumulated data\n     * @throws  ArrayIndexOutOfBoundsException if new size is negative\n     */\n    public synchronized void setSize(int newSize) {\n\n        if (newSize < 0) {\n            throw new ArrayIndexOutOfBoundsException(newSize);\n        } else if (newSize > buf.length) {\n            buf = copyOf(buf, Math.max(buf.length << 1, newSize));\n        }\n\n        count = newSize;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java, /hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
  "id": 1470,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2952,
    "lines": "if (varName.indexOf(':') > -1)\n            throw new BadSpecial(SqltoolRB.plvar_nocolon.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2579,
    "lines": "if (varName.indexOf(':') > -1)\n                throw new BadSpecial(SqltoolRB.plvar_nocolon.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2879,
    "lines": "if (varName.indexOf(':') > -1)\n                throw new BadSpecial(SqltoolRB.plvar_nocolon.getString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1471,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 146,
    "lines": "public String getString(int i1) {\n        return vrb.getString(this, i1);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 311,
    "lines": "public String getString(int i1) {\n        return vrb.getString(this, i1);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/RB.java, /hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
  "id": 1472,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 167,
    "lines": "HsqlList conditionSet = condition.resolveColumnReferences(session,\n            rangeGroup, rangeCount, rangeGroups, null, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQLInvoked.java",
    "startLineNumber": 72,
    "lines": "HsqlList conditionSet = condition.resolveColumnReferences(session,\n            rangeGroup, rangeCount, rangeGroups, null, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java, /hsqldb/src/org/hsqldb/FunctionSQLInvoked.java",
  "id": 1473,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1234,
    "lines": "nodes[0].dataType.isCharacterType()\n                        && nodes[1].dataType.isCharacterType()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1644,
    "lines": "nodes[0].dataType.isCharacterType()\n                        && nodes[1].dataType.isCharacterType()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 1474,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 610,
    "lines": "System.out.println(\"\\t\" + (naccounts * tps)\n                               + \"\\t records inserted\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 703,
    "lines": "System.out.println(\"\\t\" + (naccounts * tps)\n                               + \"\\t records inserted\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 1475,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1407,
    "lines": "c.core.mainTable.getUniqueConstraintForColumns(c.core.mainCols)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 154,
    "lines": "c.core.mainTable.getUniqueConstraintForColumns(c.core.mainCols)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 193,
    "lines": "c.core.mainTable.getUniqueConstraintForColumns(c.core.mainCols)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 377,
    "lines": "c.core.mainTable.getUniqueConstraintForColumns(\n                            c.core.mainCols)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/TableWorks.java & more ...",
  "id": 1476,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3659,
    "lines": "Object[] args = new Object[] {\n            StatementTypes.ADD_CONSTRAINT, table, c\n        };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3693,
    "lines": "Object[] args = new Object[] {\n            StatementTypes.ADD_CONSTRAINT, table, c\n        };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1477,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 123,
    "lines": "public CachedObject get(CachedObject object, boolean keep) {\n\n        object = cache.get(object, this, keep);\n\n        return object;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
    "startLineNumber": 82,
    "lines": "public CachedObject get(CachedObject object, boolean keep) {\n\n        object = cache.get(object, this, keep);\n\n        return object;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDiskData.java",
  "id": 1478,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4897,
    "lines": "Collation collation = database.schemaManager.getCollation(session,\n                token.tokenString, token.namePrefix);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2923,
    "lines": "Collation collation =\n                    database.schemaManager.getCollation(session,\n                        token.tokenString, token.namePrefix);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1479,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java",
    "startLineNumber": 114,
    "lines": "{\n\n        int i = 0;\n\n        for (; i < array.length; i++) {\n            if (i >= size() || get(i) != array[i]) {\n                break;\n            }\n        }\n\n        return i;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java",
    "startLineNumber": 114,
    "lines": "{\n\n        int i = 0;\n\n        for (; i < array.length; i++) {\n            if (i >= size() || get(i) != array[i]) {\n                break;\n            }\n        }\n\n        return i;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java, /hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java",
  "id": 1480,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 245,
    "lines": "if (firstindex == list.length) {\n                firstindex = 0;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 284,
    "lines": "if (firstindex == list.length) {\n                firstindex = 0;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 106,
    "lines": "if (firstindex == list.length) {\n            firstindex = 0;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 234,
    "lines": "if (firstindex == list.length) {\n                firstindex = 0;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 149,
    "lines": "if (firstindex == list.length) {\n            firstindex = 0;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 273,
    "lines": "if (firstindex == list.length) {\n                firstindex = 0;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongDeque.java, /hsqldb/src/org/hsqldb/lib/HsqlDeque.java & more ...",
  "id": 1481,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 609,
    "lines": "return o == null ? (float) 0.0\n                         : ((Number) o).floatValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 671,
    "lines": "return o == null ? (float) 0.0\n                         : ((Number) o).floatValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 1482,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
    "startLineNumber": 511,
    "lines": "if (pos < MIN_POS || pos > 1L + (Integer.MAX_VALUE - len)) {\n            throw JDBCUtil.outOfRangeArgument(\"pos: \" + pos);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 478,
    "lines": "if (pos < MIN_POS || pos > 1L + (Integer.MAX_VALUE - len)) {\n            throw JDBCUtil.outOfRangeArgument(\"pos: \" + pos);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
  "id": 1483,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 611,
    "lines": "if (database.databaseProperties.isPropertyTrue(\n                HsqlDatabaseProperties.hsqldb_files_readonly)) {\n            database.setFilesReadOnly();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 446,
    "lines": "if (database.databaseProperties.isPropertyTrue(\n                HsqlDatabaseProperties.hsqldb_files_readonly)) {\n            database.setFilesReadOnly();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Logger.java, /hsqldb/src/org/hsqldb/persist/Logger.java",
  "id": 1484,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 637,
    "lines": "data[colIndex] =\n                        targetTable.colDefaults[colIndex].getValue(session);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 605,
    "lines": "data[colIndex] =\n                            targetTable.colDefaults[colIndex].getValue(\n                                session);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 1485,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1161,
    "lines": "long length = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1554,
    "lines": "long length = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 679,
    "lines": "long length = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1623,
    "lines": "long length = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1699,
    "lines": "long length     = ((Long) data[LOB_IDS.LOB_LENGTH]).longValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java & more ...",
  "id": 1486,
  "numClones": 5,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3511,
    "lines": "if (rs == null)\n                        throw new BadSpecial(\n                            SqltoolRB.metadata_fetch_fail.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3473,
    "lines": "if (rs == null)\n                        throw new BadSpecial(\n                            SqltoolRB.metadata_fetch_fail.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3462,
    "lines": "if (rs == null)\n                        throw new BadSpecial(\n                            SqltoolRB.metadata_fetch_fail.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3550,
    "lines": "if (rs == null)\n                throw new BadSpecial(SqltoolRB.metadata_fetch_fail.getString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1487,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 820,
    "lines": "nanos = ((java.sql.Timestamp) a).getNanos();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 771,
    "lines": "nanos = ((java.sql.Timestamp) a).getNanos();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 1488,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 725,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] == null) {\n                continue;\n            }\n\n            nodes[i] = nodes[i].replaceColumnReferences(range, list);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 1082,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n            if (nodes[i] == null) {\n                continue;\n            }\n\n            nodes[i] = nodes[i].replaceColumnReferences(range, list);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/ExpressionColumn.java",
  "id": 1489,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2656,
    "lines": "{\n                                argType = nodes[0].dataType =\n                                    Type.SQL_VARCHAR_DEFAULT;\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2638,
    "lines": "{\n                        argType = nodes[0].dataType = Type.SQL_VARCHAR_DEFAULT;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1490,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 446,
    "lines": "if (isIntValue) {\n            intValueTable[lookup] = (int) longValue;\n        } else if (isLongValue) {\n            longValueTable[lookup] = longValue;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 641,
    "lines": "if (isIntValue) {\n            intValueTable[lookup] = (int) longValue;\n        } else if (isLongValue) {\n            longValueTable[lookup] = longValue;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 396,
    "lines": "if (isIntValue) {\n                intValueTable[lookup] = (int) longValue;\n            } else if (isLongValue) {\n                longValueTable[lookup] = longValue;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java & more ...",
  "id": 1491,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 193,
    "lines": "Row row = (Row) store.getNewCachedObject(session, data, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2783,
    "lines": "Row row = (Row) store.getNewCachedObject(session, data, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1383,
    "lines": "Row row = (Row) store.getNewCachedObject(session, data, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TextTable.java",
    "startLineNumber": 324,
    "lines": "Row row = (Row) store.getNewCachedObject(session, data, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionTable.java",
    "startLineNumber": 224,
    "lines": "Row row = (Row) store.getNewCachedObject(session, data, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionTable.java",
    "startLineNumber": 265,
    "lines": "Row row = (Row) store.getNewCachedObject(session, data, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2772,
    "lines": "Row row = (Row) store.getNewCachedObject(session, data, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java, /hsqldb/src/org/hsqldb/Table.java & more ...",
  "id": 1492,
  "numClones": 7,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 210,
    "lines": "return other.typeCode == Types.SQL_CLOB ? 4\n                                                        : 2;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 214,
    "lines": "return other.typeCode == Types.SQL_CLOB ? 4\n                                                        : 2;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 1493,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 504,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ')"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 491,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ')"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 479,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ')"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 497,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ')"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 485,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ')"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 473,
    "lines": "sb.append(left).append(' ').append(Tokens.T_MATCH).append(\n                    ' ')"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java & more ...",
  "id": 1494,
  "numClones": 6,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2581,
    "lines": "if (!varPattern.matcher(varName).matches())\n                errprintln(SqltoolRB.varname_warning.getString(varName));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 4826,
    "lines": "if (!varPattern.matcher(varName).matches())\n            errprintln(SqltoolRB.varname_warning.getString(varName));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2954,
    "lines": "if (!varPattern.matcher(varName).matches())\n            errprintln(SqltoolRB.varname_warning.getString(varName));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1495,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 547,
    "lines": "if (j > 0) {\n                j = table[j];\n            } else {\n                table[i] = 0;\n\n                i++;\n\n                j = 0;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 509,
    "lines": "if (j > 0) {\n                j = table[j];\n            } else {\n                table[i] = 0;\n\n                i++;\n\n                j = 0;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 473,
    "lines": "if (j > 0) {\n                j = table[j];\n            } else {\n                table[i] = 0;\n\n                i++;\n\n                j = 0;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java, /hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java & more ...",
  "id": 1496,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1378,
    "lines": "return result > 0 ? Boolean.TRUE\n                                  : Boolean.FALSE;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1476,
    "lines": "return result > 0 ? Boolean.TRUE\n                                  : Boolean.FALSE;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1497,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1555,
    "lines": "for (int i = 0; i < ba1.length; i++) {\n            assertEquals(\"Byte \" + i + \" wrong (1)\", expectedBytes[i], ba1[i]);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1607,
    "lines": "for (int i = 0; i < ba1.length; i++) {\n            assertEquals(\"Byte \" + i + \" wrong (1)\", expectedBytes[i], ba1[i]);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 1498,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/Server.java",
    "startLineNumber": 1882,
    "lines": "printError(\"Database [index=\" + i + \", db=\" + dbType[i]\n                           + dbPath[i] + \", alias=\" + dbAlias[i]\n                           + \"] did not open: \" + e.toString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/Server.java",
    "startLineNumber": 1830,
    "lines": "printError(\"Database [index=\" + i + \", db=\" + dbType[i]\n                       + dbPath[i] + \", alias=\" + dbAlias[i]\n                       + \"] did not open: \" + e.toString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/Server.java, /hsqldb/src/org/hsqldb/server/Server.java",
  "id": 1499,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 1004,
    "lines": "{\n            return ((Grantee) name.schema.owner).ownerRights;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 996,
    "lines": "{\n            return ((Grantee) name.schema.owner).ownerRights;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/Grantee.java, /hsqldb/src/org/hsqldb/rights/Grantee.java",
  "id": 1500,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 1118,
    "lines": "if (generateKeys == ResultConstants\n                        .RETURN_GENERATED_KEYS_COL_NAMES || generateKeys == ResultConstants\n                        .RETURN_GENERATED_KEYS_COL_INDEXES) {\n                    generatedMetaData.write(rowOut);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 1094,
    "lines": "if (generateKeys == ResultConstants\n                        .RETURN_GENERATED_KEYS_COL_NAMES || generateKeys == ResultConstants\n                        .RETURN_GENERATED_KEYS_COL_INDEXES) {\n                    generatedMetaData.write(rowOut);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/Result.java, /hsqldb/src/org/hsqldb/result/Result.java",
  "id": 1501,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1352,
    "lines": "ps.setInt(1, 3);\n            ps.setTimestamp(2, aTimestamp);\n            assertEquals(1, ps.executeUpdate());\n            ps.setInt(1, 4);\n            assertEquals(1, ps.executeUpdate());\n            ps.close();\n            netConn.commit();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1181,
    "lines": "ps.setInt(1, 3);\n            ps.setString(2, \"xy\");\n            assertEquals(1, ps.executeUpdate());\n            ps.setInt(1, 4);\n            assertEquals(1, ps.executeUpdate());\n            ps.close();\n            netConn.commit();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1141,
    "lines": "ps.setInt(1, 3);\n            ps.setString(2, \"xy\");\n            assertEquals(1, ps.executeUpdate());\n            ps.setInt(1, 4);\n            assertEquals(1, ps.executeUpdate());\n            ps.close();\n            netConn.commit();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1574,
    "lines": "ps.setInt(1, 3);\n            ps.setBytes(2, expectedBytes);\n            assertEquals(1, ps.executeUpdate());\n            ps.setInt(1, 4);\n            assertEquals(1, ps.executeUpdate());\n            ps.close();\n            netConn.commit();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1522,
    "lines": "ps.setInt(1, 3);\n            ps.setBytes(2, expectedBytes);\n            assertEquals(1, ps.executeUpdate());\n            ps.setInt(1, 4);\n            assertEquals(1, ps.executeUpdate());\n            ps.close();\n            netConn.commit();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1394,
    "lines": "ps.setInt(1, 3);\n            ps.setTimestamp(2, aTimestamp);\n            assertEquals(1, ps.executeUpdate());\n            ps.setInt(1, 4);\n            assertEquals(1, ps.executeUpdate());\n            ps.close();\n            netConn.commit();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java & more ...",
  "id": 1502,
  "numClones": 6,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 492,
    "lines": "StatementSet cs = new StatementSet(session, targets, expression,\n                                           columnMap, compileContext);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 429,
    "lines": "StatementSet cs = new StatementSet(session, targets, expression,\n                                           columnMap, compileContext);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java",
  "id": 1503,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 508,
    "lines": "for (int i = 0; i < rangeVariables.length; i++) {\n            rangeVariables[i].resolveRangeTableTypes(session,\n                    RangeVariable.emptyArray);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 627,
    "lines": "for (int i = 0; i < rangeVariables.length; i++) {\n            rangeVariables[i].resolveRangeTableTypes(session,\n                    RangeVariable.emptyArray);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDML.java",
  "id": 1504,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
    "startLineNumber": 297,
    "lines": "if (atom.op != null)\n                throw new IllegalStateException(\n                        \"Value expected but got operation \" + atom.op);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
    "startLineNumber": 279,
    "lines": "if (atom.op != null)\n            throw new IllegalStateException(\n                    \"Value expected but got operation \" + atom.op);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java, /hsqldb/src/org/hsqldb/cmdline/sqltool/Calculator.java",
  "id": 1505,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 964,
    "lines": "{\n            result = Result.newErrorResult(\n                Error.error(e, ErrorCode.X_46000, getName().name), null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 970,
    "lines": "{\n            result = Result.newErrorResult(\n                Error.error(e, ErrorCode.X_46000, getName().name), null);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 967,
    "lines": "{\n            result = Result.newErrorResult(\n                Error.error(e, ErrorCode.X_46000, getName().name), null);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Routine.java & more ...",
  "id": 1506,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java",
    "startLineNumber": 206,
    "lines": "/**\n     * Returns the current capacity of this stream's data buffer.\n     *\n     * @return  the length of the internal data array\n     * @throws java.io.IOException if an I/O error occurs.\n     *      In particular, an <tt>IOException</tt> may be thrown\n     *      if this output stream has been {@link #free() freed}.\n     */\n    public synchronized int capacity() throws IOException {\n\n        checkFreed();\n\n        return buf.length;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
    "startLineNumber": 243,
    "lines": "/**\n     * Returns the current capacity of this writer's data buffer.\n     *\n     * @return  the current capacity (the length of the internal\n     *          data array)\n     * @throws java.io.IOException if an I/O error occurs.\n     *      In particular, an <tt>IOException</tt> may be thrown\n     *      if this writer has been {@link #free() freed}.\n     */\n    public synchronized int capacity() throws IOException {\n\n        checkFreed();\n\n        return buf.length;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ClosableByteArrayOutputStream.java, /hsqldb/src/org/hsqldb/lib/ClosableCharArrayWriter.java",
  "id": 1507,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSet.java",
    "startLineNumber": 329,
    "lines": "for (int i = 0; i < rangeVariables.length; i++) {\n            Table    rangeTable = rangeVariables[i].rangeTable;\n            HsqlName name       = rangeTable.getName();\n\n            if (rangeTable.isDataReadOnly() || rangeTable.isTemp()) {\n                continue;\n            }\n\n            if (name.schema == SqlInvariants.SYSTEM_SCHEMA_HSQLNAME) {\n                continue;\n            }\n\n            set.add(name);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 279,
    "lines": "for (int i = 0; i < rangeVariables.length; i++) {\n            Table    rangeTable = rangeVariables[i].rangeTable;\n            HsqlName name       = rangeTable.getName();\n\n            if (rangeTable.isDataReadOnly() || rangeTable.isTemp()) {\n                continue;\n            }\n\n            if (name.schema == SqlInvariants.SYSTEM_SCHEMA_HSQLNAME) {\n                continue;\n            }\n\n            set.add(name);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSet.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 1508,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2963,
    "lines": "if (!nodes[1].dataType.isExactNumberType()) {\n                    throw Error.error(ErrorCode.X_42561);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3003,
    "lines": "if (!nodes[1].dataType.isExactNumberType()) {\n                    throw Error.error(ErrorCode.X_42561);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1509,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 322,
    "lines": "{\n                    byte[] data = b.getBytes(session, 0, bytePrecision);\n\n                    b = new BinaryData(data, precision);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 340,
    "lines": "{\n                    byte[] data = b.getBytes(session, 0, bytePrecision);\n\n                    b = new BinaryData(data, precision);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BitType.java, /hsqldb/src/org/hsqldb/types/BitType.java",
  "id": 1510,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 593,
    "lines": "out.buffer[out.count++] = (byte) (0x80 | ((c >> 0) & 0x3F));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 597,
    "lines": "out.buffer[out.count++] = (byte) (0x80 | ((c >> 0) & 0x3F));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/StringConverter.java, /hsqldb/src/org/hsqldb/lib/StringConverter.java",
  "id": 1511,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 731,
    "lines": "for (; i < array.length; i++) {\n                        if (array[i] == escapeChar) {\n                            if (wasEscape) {\n                                escapeCount++;\n\n                                newArray[j++] = array[i];\n                                wasEscape     = false;\n\n                                continue;\n                            }\n\n                            wasEscape = true;\n\n                            if (i == array.length - 1) {\n                                throw Error.error(ErrorCode.X_22025);\n                            }\n\n                            continue;\n                        }\n\n                        if (array[i] == '_' || array[i] == '%') {\n                            if (wasEscape) {\n                                escapeCount++;\n\n                                newArray[j++] = array[i];\n                                wasEscape     = false;\n\n                                continue;\n                            }\n\n                            break;\n                        }\n\n                        if (wasEscape) {\n                            throw Error.error(ErrorCode.X_22025);\n                        }\n\n                        newArray[j++] = array[i];\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 653,
    "lines": "for (; i < array.length; i++) {\n                        if (array[i] == escapeChar) {\n                            if (wasEscape) {\n                                escapeCount++;\n\n                                newArray[j++] = array[i];\n                                wasEscape     = false;\n\n                                continue;\n                            }\n\n                            wasEscape = true;\n\n                            if (i == array.length - 1) {\n                                throw Error.error(ErrorCode.X_22025);\n                            }\n\n                            continue;\n                        }\n\n                        if (array[i] == '_' || array[i] == '%') {\n                            if (wasEscape) {\n                                escapeCount++;\n\n                                newArray[j++] = array[i];\n                                wasEscape     = false;\n\n                                continue;\n                            }\n\n                            break;\n                        }\n\n                        if (wasEscape) {\n                            throw Error.error(ErrorCode.X_22025);\n                        }\n\n                        newArray[j++] = array[i];\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionOp.java, /hsqldb/src/org/hsqldb/ExpressionOp.java",
  "id": 1512,
  "numClones": 2,
  "cloneSize": 28
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 473,
    "lines": "/**\n     * Returns a string representation in the form <code>ARRAY[..., ...]</code>\n     */\n    public String toString() {\n\n        if (arrayType == null) {\n            arrayType = Type.getDefaultArrayType(elementType.typeCode);\n        }\n\n        return arrayType.convertToString(data);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 461,
    "lines": "/**\n     * Returns a string representation in the form <code>ARRAY[..., ...]</code>\n     */\n    public String toString() {\n\n        if (arrayType == null) {\n            arrayType = Type.getDefaultArrayType(elementType.typeCode);\n        }\n\n        return arrayType.convertToString(data);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
  "id": 1513,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2462,
    "lines": "final int table_catalog = 3;\n        final int table_schema  = 4;\n        final int table_name    = 5;\n        final int column_name   = 6;\n\n        // intermediate holders\n        int      columnCount;\n        Iterator tables;\n        Table    table;\n        Object[] row;\n        Type     type;\n        HsqlName tableName;\n\n        // Initialization\n        tables = allTables();\n\n        Grantee grantee = session.getGrantee();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2344,
    "lines": "final int table_catalog  = 3;\n        final int table_schema   = 4;\n        final int table_name     = 5;\n        final int column_name    = 6;\n\n        // intermediate holders\n        int      columnCount;\n        Iterator tables;\n        Table    table;\n        Object[] row;\n        Type     type;\n        HsqlName tableName;\n\n        // Initialization\n        tables = allTables();\n\n        Grantee grantee = session.getGrantee();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 1514,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1950,
    "lines": "nodes[LEFT].opType == OpTypes.COLUMN\n                       && nodes[LEFT].isIndexable(rangeVar)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1992,
    "lines": "nodes[LEFT].opType == OpTypes.COLUMN\n                        && nodes[LEFT].isIndexable(rangeVar)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1515,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 616,
    "lines": "if (memory) {\n                rowSet = new RowSetNavigatorData(session, this);\n            } else {\n                rowSet = new RowSetNavigatorDataTable(session, this);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 601,
    "lines": "if (memory) {\n                rowSet = new RowSetNavigatorData(session, this);\n            } else {\n                rowSet = new RowSetNavigatorDataTable(session, this);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QueryExpression.java, /hsqldb/src/org/hsqldb/QueryExpression.java",
  "id": 1516,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1802,
    "lines": "fullIndex = resultTable.createAndAddIndexStructure(session, null,\n                fullCols, null, null, false, false, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QueryExpression.java",
    "startLineNumber": 965,
    "lines": "fullIndex = resultTable.createAndAddIndexStructure(session, null,\n                fullCols, null, null, false, false, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QuerySpecification.java, /hsqldb/src/org/hsqldb/QueryExpression.java",
  "id": 1517,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestKarl.java",
    "startLineNumber": 144,
    "lines": "{\n                try {\n                    c.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHTTPKeepAlive.java",
    "startLineNumber": 130,
    "lines": "{\n\t\t\t\ttry {\n\t\t\t\t\tc.close();\n\t\t\t\t} catch (SQLException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestKarl.java, /hsqldb/src/org/hsqldb/test/TestHTTPKeepAlive.java",
  "id": 1518,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 282,
    "lines": "fa.removeElement(fileName + Logger.backupFileExtension\n                         + Logger.newFileExtension);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Log.java",
    "startLineNumber": 336,
    "lines": "fa.removeElement(fileName + Logger.backupFileExtension\n                         + Logger.newFileExtension);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Log.java, /hsqldb/src/org/hsqldb/persist/Log.java",
  "id": 1519,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 784,
    "lines": "System.out.println(\"update time with random id \" + i + \" rows  -- \"\n                           + time + \" ms -- \" + rate + \" tps\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 830,
    "lines": "System.out.println(\"update time with random id \" + i + \" rows  -- \"\n                           + time + \" ms -- \" + rate + \" tps\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java",
  "id": 1520,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1826,
    "lines": "Object[]   args           = new Object[]{ type };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1801,
    "lines": "Object[]   args           = new Object[]{ type };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1521,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 184,
    "lines": "row = (Row) action.store.get(action.getPos(), false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 266,
    "lines": "row = (Row) action.store.get(action.getPos(), false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 161,
    "lines": "row = (Row) action.store.get(action.getPos(), false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 293,
    "lines": "row = (Row) action.store.get(action.getPos(), false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerCommon.java",
    "startLineNumber": 209,
    "lines": "row = (Row) action.store.get(action.getPos(), false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java, /hsqldb/src/org/hsqldb/TransactionManagerCommon.java & more ...",
  "id": 1522,
  "numClones": 5,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 229,
    "lines": "return other.precision >= precision ? other\n                                                        : getBinaryType(\n                                                        other.typeCode,\n                                                        precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 235,
    "lines": "return other.precision >= precision ? other\n                                                    : getBinaryType(\n                                                    other.typeCode, precision);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BinaryType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java",
  "id": 1523,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 508,
    "lines": "assertEquals(java.sql.Date.class, rs.getObject(\"d\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1273,
    "lines": "assertEquals(java.sql.Date.class, rs.getObject(\"d\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 1524,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 204,
    "lines": "offset\n                       < database.schemaManager.getTableIndex(\n                           c.core.mainTable)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 384,
    "lines": "offset\n                               < database.schemaManager.getTableIndex(\n                                   c.core.mainTable)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 1525,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 156,
    "lines": "System.arraycopy(array, 0, newArray, 0, array.length);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java",
    "startLineNumber": 152,
    "lines": "System.arraycopy(array, 0, newArray, 0, array.length);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionAccessor.java, /hsqldb/src/org/hsqldb/ExpressionAccessor.java",
  "id": 1526,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Constraint.java",
    "startLineNumber": 351,
    "lines": "sb.append(Tokens.T_ALTER).append(' ').append(\n                        Tokens.T_TABLE)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/NumberSequence.java",
    "startLineNumber": 294,
    "lines": "sb.append(Tokens.T_ALTER).append(' ').append(Tokens.T_TABLE)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Constraint.java, /hsqldb/src/org/hsqldb/NumberSequence.java",
  "id": 1527,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2769,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_DOUBLE;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2795,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_DOUBLE;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1447,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_DOUBLE;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1423,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_DOUBLE;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2782,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_DOUBLE;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3310,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_DOUBLE;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3330,
    "lines": "if (nodes[0].dataType == null) {\n                    nodes[0].dataType = Type.SQL_DOUBLE;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java & more ...",
  "id": 1528,
  "numClones": 7,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3587,
    "lines": "//\n        // intermediate holders\n        int            columnCount;\n        Iterator       tables;\n        Table          table;\n        Object[]       row;\n        OrderedHashSet columnList;\n        Type           type;\n\n        // Initialization\n        tables = allTables();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2644,
    "lines": "//\n        // intermediate holders\n        int            columnCount;\n        Iterator       tables;\n        Table          table;\n        Object[]       row;\n        OrderedHashSet columnList;\n        Type           type;\n\n        // Initialization\n        tables = allTables();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 1529,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 559,
    "lines": "expr = expr.nodes[RIGHT].nodes[RIGHT];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 586,
    "lines": "expr = expr.nodes[RIGHT].nodes[RIGHT];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionOp.java",
    "startLineNumber": 604,
    "lines": "expr = expr.nodes[RIGHT].nodes[RIGHT];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionOp.java, /hsqldb/src/org/hsqldb/ExpressionOp.java & more ...",
  "id": 1530,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 950,
    "lines": "if (offset + count > source.navigator.getSize()) {\n            count = source.navigator.getSize() - offset;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 972,
    "lines": "if (offset + count > source.navigator.getSize()) {\n            count = source.navigator.getSize() - offset;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/Result.java, /hsqldb/src/org/hsqldb/result/Result.java",
  "id": 1531,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3495,
    "lines": "(matcher.group(2).length() > 0)\n                                    ? matcher.group(2) : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3430,
    "lines": "(matcher.group(2).length() > 0)\n                                        ? matcher.group(2) : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3537,
    "lines": "(matcher.group(2).length() > 0)\n                                ? matcher.group(2) : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3328,
    "lines": "(matcher.group(2).length() > 0)\n                                        ? matcher.group(2) : null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1532,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalSecondData.java",
    "startLineNumber": 134,
    "lines": "if (seconds >= type.getIntervalValueLimit()) {\n            throw Error.error(ErrorCode.X_22015);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalSecondData.java",
    "startLineNumber": 84,
    "lines": "if (seconds >= type.getIntervalValueLimit()) {\n            throw Error.error(ErrorCode.X_22015);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalSecondData.java, /hsqldb/src/org/hsqldb/types/IntervalSecondData.java",
  "id": 1533,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 1241,
    "lines": "if (database.lobManager.getLobCount() > 0) {\n            throw Error.error(ErrorCode.DATA_FILE_IN_USE);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Logger.java",
    "startLineNumber": 1268,
    "lines": "if (database.lobManager.getLobCount() > 0) {\n            throw Error.error(ErrorCode.DATA_FILE_IN_USE);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Logger.java, /hsqldb/src/org/hsqldb/persist/Logger.java",
  "id": 1534,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 957,
    "lines": "result.navigator = new RowSetNavigatorClient(source.navigator, offset,\n                count);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/result/Result.java",
    "startLineNumber": 980,
    "lines": "result.navigator = new RowSetNavigatorClient(source.navigator, offset,\n                count);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/result/Result.java, /hsqldb/src/org/hsqldb/result/Result.java",
  "id": 1535,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 482,
    "lines": "int shift     = pos & 0x07;\n        int mask      = (source & 0xff) >>> shift;\n        int innermask = 0xff >> shift;\n        int index     = pos / 8;\n\n        if (count < 8) {\n            innermask = innermask >>> (8 - count);\n            innermask = innermask << (8 - count);\n        }\n\n        mask      &= innermask;\n        innermask = ~innermask;\n\n        if (index >= map.length) {\n            return;\n        }\n\n        byte b = map[index];"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 557,
    "lines": "int shift     = pos & 0x07;\n        int mask      = (source & 0xff) >>> shift;\n        int innermask = 0xff >> shift;\n        int index     = pos / 8;\n\n        if (count < 8) {\n            innermask = innermask >>> (8 - count);\n            innermask = innermask << (8 - count);\n        }\n\n        mask      &= innermask;\n        innermask = ~innermask;\n\n        if (index >= map.length) {\n            return;\n        }\n\n        byte b = map[index];"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BitMap.java, /hsqldb/src/org/hsqldb/map/BitMap.java",
  "id": 1536,
  "numClones": 2,
  "cloneSize": 14
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1621,
    "lines": "{\n                        data[i] = exprColumns[i].getValue(session);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1542,
    "lines": "{\n                    data[i] = exprColumns[i].getValue(session);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/QuerySpecification.java",
    "startLineNumber": 1642,
    "lines": "{\n                        data[i] = exprColumns[i].getValue(session);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/QuerySpecification.java, /hsqldb/src/org/hsqldb/QuerySpecification.java & more ...",
  "id": 1537,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 335,
    "lines": "if (!row.keepInMemory(true)) {\n            row  = (RowAVLDisk) store.get(this.row, true);\n            node = (NodeAVLDisk) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 385,
    "lines": "if (!row.keepInMemory(true)) {\n            row  = (RowAVLDisk) store.get(this.row, true);\n            node = (NodeAVLDisk) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 410,
    "lines": "if (!row.keepInMemory(true)) {\n            row  = (RowAVLDisk) store.get(this.row, true);\n            node = (NodeAVLDisk) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 362,
    "lines": "if (!row.keepInMemory(true)) {\n            row  = (RowAVLDisk) store.get(this.row, true);\n            node = (NodeAVLDisk) row.getNode(iId);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDisk.java & more ...",
  "id": 1538,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 1508,
    "lines": "if (name.schema == null) {\n            name.schema = schemaName == null\n                          ? session.getCurrentSchemaHsqlName()\n                          : schemaName;\n        } else {\n            name.schema = session.getSchemaHsqlName(name.schema.name);\n\n            if (name.schema == null) {\n                throw Error.error(ErrorCode.X_42505);\n            }\n\n            if (isSchemaDefinition && schemaName != name.schema) {\n                throw Error.error(ErrorCode.X_42505);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 1537,
    "lines": "if (name.schema == null) {\n            name.schema = schemaName == null\n                          ? session.getCurrentSchemaHsqlName()\n                          : schemaName;\n        } else {\n            name.schema = session.getSchemaHsqlName(name.schema.name);\n\n            if (name.schema == null) {\n                throw Error.error(ErrorCode.X_42505);\n            }\n\n            if (isSchemaDefinition && schemaName != name.schema) {\n                throw Error.error(ErrorCode.X_42505);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSchema.java, /hsqldb/src/org/hsqldb/StatementSchema.java",
  "id": 1539,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2080,
    "lines": "RoutineSchema routine =\n                        (RoutineSchema) set.getObject(name.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2301,
    "lines": "RoutineSchema routine =\n                        (RoutineSchema) set.getObject(name.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2317,
    "lines": "RoutineSchema routine =\n                        (RoutineSchema) set.getObject(name.name);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java & more ...",
  "id": 1540,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1636,
    "lines": "{\n                ResultSet rs = sStatement.getResultSet();\n\n                try {\n                    formatResultSet(rs);\n                } catch (Throwable t) {\n                    g[0] = \"Error displaying the ResultSet\";\n\n                    gResult.setHead(g);\n\n                    String s = t.getMessage();\n\n                    g[0] = s;\n\n                    gResult.addRow(g);\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 856,
    "lines": "{\n                ResultSet rs = sStatement.getResultSet();\n\n                try {\n                    formatResultSet(rs);\n                } catch (Throwable t) {\n                    g[0] = \"Error displaying the ResultSet\";\n\n                    gResult.setHead(g);\n\n                    String s = t.getMessage();\n\n                    g[0] = s;\n\n                    gResult.addRow(g);\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java",
  "id": 1541,
  "numClones": 2,
  "cloneSize": 12
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Type.java",
    "startLineNumber": 176,
    "lines": "catch (CloneNotSupportedException e) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 1039,
    "lines": "catch (CloneNotSupportedException e) {\n            throw Error.runtimeError(ErrorCode.U_S0500, \"Type\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/Type.java, /hsqldb/src/org/hsqldb/Routine.java",
  "id": 1542,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java",
    "startLineNumber": 142,
    "lines": "public abstract CachedObject getNewCachedObject(Session session,\n            Object object, boolean tx);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/PersistentStore.java",
    "startLineNumber": 94,
    "lines": "CachedObject getNewCachedObject(Session session, Object object,\n                                    boolean tx);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVL.java, /hsqldb/src/org/hsqldb/persist/PersistentStore.java",
  "id": 1543,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1383,
    "lines": "if (!nodes[0].dataType.isNumberType()\n                        || !nodes[1].dataType.isNumberType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1409,
    "lines": "if (!nodes[0].dataType.isNumberType()\n                        || !nodes[1].dataType.isNumberType()) {\n                    throw Error.error(ErrorCode.X_42563);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 1544,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 981,
    "lines": "long aLimit =\n                aLength\n                - ((long) aAddresses[aIndex][LOBS.BLOCK_OFFSET] + aOffset)\n                  * lobBlockSize / 2;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 811,
    "lines": "long aLimit =\n                    aLength\n                    - ((long) aAddresses[aIndex][LOBS.BLOCK_OFFSET] + aOffset)\n                      * lobBlockSize / 2;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1545,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 376,
    "lines": "sb.append(getContextSQL(nodes[LEFT].nodes[LEFT])).append(\n                        ' ').append(Tokens.T_IS).append(' ')"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 384,
    "lines": "sb.append(getContextSQL(nodes[LEFT].nodes[LEFT])).append(\n                        ' ').append(Tokens.T_IS).append(' ')"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1546,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAVL.java",
    "startLineNumber": 187,
    "lines": "while (n != null) {\n            n.delete();\n\n            n = n.nNext;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RowAVL.java",
    "startLineNumber": 176,
    "lines": "while (n != null) {\n            n.delete();\n\n            n = n.nNext;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RowAVL.java, /hsqldb/src/org/hsqldb/RowAVL.java",
  "id": 1547,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedHashSet.java",
    "startLineNumber": 68,
    "lines": "if (index < 0 || index > size()) {\n            throw new IndexOutOfBoundsException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMappedList.java",
    "startLineNumber": 119,
    "lines": "if (index < 0 || index > size()) {\n            throw new IndexOutOfBoundsException();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/OrderedHashSet.java, /hsqldb/src/org/hsqldb/lib/HashMappedList.java",
  "id": 1548,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 636,
    "lines": "long seconds =\n                            HsqlDateTime.convertToNormalisedTime(\n                                ts.getSeconds() * 1000) / 1000;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 587,
    "lines": "long seconds =\n                            HsqlDateTime.convertToNormalisedTime(\n                                ts.getSeconds() * 1000) / 1000;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 1549,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/InputStreamWrapper.java",
    "startLineNumber": 84,
    "lines": "if (limitSize >= 0 && limitSize - fetchedSize < length) {\n            length = (int) (limitSize - fetchedSize);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAShadowFile.java",
    "startLineNumber": 286,
    "lines": "if (limitSize >= 0 && limitSize - fetchedSize < length) {\n                length = (int) (limitSize - fetchedSize);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/InputStreamWrapper.java, /hsqldb/src/org/hsqldb/persist/RAShadowFile.java",
  "id": 1550,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 3902,
    "lines": "if (rootWarning == null) {\n                    rootWarning = w;\n                } else {\n                    rootWarning.setNextWarning(w);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatementBase.java",
    "startLineNumber": 184,
    "lines": "if (rootWarning == null) {\n                    rootWarning = w;\n                } else {\n                    rootWarning.setNextWarning(w);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 3746,
    "lines": "if (rootWarning == null) {\n                rootWarning = w;\n            } else {\n                rootWarning.setNextWarning(w);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCStatementBase.java & more ...",
  "id": 1551,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionColumn.java",
    "startLineNumber": 938,
    "lines": "{\n            if (unresolvedSet == null) {\n                unresolvedSet = new OrderedHashSet();\n            }\n\n            unresolvedSet.add(this);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1144,
    "lines": "{\n                    if (unresolvedSet == null) {\n                        unresolvedSet = new OrderedHashSet();\n                    }\n\n                    unresolvedSet.add(this);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionColumn.java, /hsqldb/src/org/hsqldb/Expression.java",
  "id": 1552,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 2143,
    "lines": "nodes[LEFT].nodes[LEFT].opType == OpTypes.COLUMN"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 1956,
    "lines": "nodes[LEFT].nodes[LEFT].opType == OpTypes.COLUMN"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1553,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ColumnSchema.java",
    "startLineNumber": 202,
    "lines": "{\n        nullability = other.nullability;\n        dataType    = other.dataType;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ColumnBase.java",
    "startLineNumber": 103,
    "lines": "{\n        nullability = other.nullability;\n        dataType    = other.dataType;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ColumnSchema.java, /hsqldb/src/org/hsqldb/ColumnBase.java",
  "id": 1554,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2159,
    "lines": "if (JDBCDatabaseMetaData.JDBC_MAJOR >= 4) {\n                sp.connection = null;\n                sp.name       = null;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
    "startLineNumber": 2248,
    "lines": "if (JDBCDatabaseMetaData.JDBC_MAJOR >= 4) {\n                sp.connection = null;\n                sp.name       = null;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java, /hsqldb/src/org/hsqldb/jdbc/JDBCConnection.java",
  "id": 1555,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDataStructures.java",
    "startLineNumber": 399,
    "lines": "for (int i = 0; i < d.size(); i++) {\n            System.out.println(d.get(i));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDataStructures.java",
    "startLineNumber": 411,
    "lines": "for (int i = 0; i < d.size(); i++) {\n            System.out.println(d.get(i));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDataStructures.java, /hsqldb/src/org/hsqldb/test/TestDataStructures.java",
  "id": 1556,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java",
    "startLineNumber": 103,
    "lines": "while (it.hasNext()) {\n            array[i] = it.next();\n\n            i++;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java",
    "startLineNumber": 88,
    "lines": "while (it.hasNext()) {\n            array[i] = it.next();\n\n            i++;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMap.java",
    "startLineNumber": 101,
    "lines": "while (it.hasNext()) {\n            array[i] = it.next();\n\n            i++;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HashMap.java",
    "startLineNumber": 113,
    "lines": "while (it.hasNext()) {\n            array[i] = it.next();\n\n            i++;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/OrderedIntKeyHashMap.java, /hsqldb/src/org/hsqldb/lib/IntKeyHashMap.java & more ...",
  "id": 1557,
  "numClones": 4,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputBinary.java",
    "startLineNumber": 293,
    "lines": "if (out != null) {\n            out.reset(rowsize);\n\n            buffer = out.getBuffer();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputBinary.java",
    "startLineNumber": 309,
    "lines": "if (out != null) {\n            out.reset(rowsize);\n\n            buffer = out.getBuffer();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowInputBinary.java, /hsqldb/src/org/hsqldb/rowio/RowInputBinary.java",
  "id": 1558,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 154,
    "lines": "catch (IllegalBlockSizeException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/Crypto.java",
    "startLineNumber": 177,
    "lines": "catch (IllegalBlockSizeException e) {\n            throw Error.error(ErrorCode.X_S0531, e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/Crypto.java, /hsqldb/src/org/hsqldb/persist/Crypto.java",
  "id": 1559,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1827,
    "lines": "{\n                set.add(((ColumnSchema) columnList.get(i)).getName());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1837,
    "lines": "{\n            set.add(((ColumnSchema) columnList.get(i)).getName());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1804,
    "lines": "{\n            set.add(((ColumnSchema) columnList.get(i)).getName());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java & more ...",
  "id": 1560,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 70,
    "lines": "{\n\n        if (elementCount == 0) {\n            throw new NoSuchElementException();\n        }\n\n        return list[firstindex];\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 66,
    "lines": "{\n\n        if (elementCount == 0) {\n            throw new NoSuchElementException();\n        }\n\n        return list[firstindex];\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java, /hsqldb/src/org/hsqldb/lib/LongDeque.java",
  "id": 1561,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 3033,
    "lines": "if (tmpString != null) {\n                    showSchemas = Boolean.valueOf(tmpString).booleanValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2975,
    "lines": "if (tmpString != null) {\n                    showSchemas = Boolean.valueOf(tmpString).booleanValue();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1562,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1545,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    row[i] = nodes[i].getValue(session);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
    "startLineNumber": 280,
    "lines": "for (int i = 0; i < nodes.length; i++) {\n                    row[i] = nodes[i].getValue(session);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Expression.java, /hsqldb/src/org/hsqldb/ExpressionArrayAggregate.java",
  "id": 1563,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1461,
    "lines": "if (in.isData()) {\n\n                // FIXME:  we don't have what it takes yet\n                // to differentiate between things like\n                // stored procedure calls to methods with\n                // void return type and select statements with\n                // a single row/column containg null\n                updateCounts[count++] = ResultConstants.SUCCESS_NO_INFO;\n            } else if (in.mode == ResultConstants.CALL_RESPONSE) {\n                updateCounts[count++] = ResultConstants.SUCCESS_NO_INFO;\n            } else if (in.mode == ResultConstants.ERROR) {\n                updateCounts = ArrayUtil.arraySlice(updateCounts, 0, count);\n                error        = in;\n\n                break;\n            } else {\n                throw Error.runtimeError(ErrorCode.U_S0500, \"Session\");\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1521,
    "lines": "if (in.isData()) {\n\n                // FIXME:  we don't have what it takes yet\n                // to differentiate between things like\n                // stored procedure calls to methods with\n                // void return type and select statements with\n                // a single row/column containg null\n                updateCounts[count++] = ResultConstants.SUCCESS_NO_INFO;\n            } else if (in.mode == ResultConstants.CALL_RESPONSE) {\n                updateCounts[count++] = ResultConstants.SUCCESS_NO_INFO;\n            } else if (in.mode == ResultConstants.ERROR) {\n                updateCounts = ArrayUtil.arraySlice(updateCounts, 0, count);\n                error        = in;\n\n                break;\n            } else {\n                throw Error.runtimeError(ErrorCode.U_S0500, \"Session\");\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 1564,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/DbBackup.java",
    "startLineNumber": 105,
    "lines": "boolean overWrite = sa.length > 1\n                                    && sa[1].equals(\"--overwrite\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/DbBackup.java",
    "startLineNumber": 138,
    "lines": "boolean overWrite = sa.length > 1\n                                    && sa[1].equals(\"--overwrite\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/DbBackup.java, /hsqldb/src/org/hsqldb/lib/tar/DbBackup.java",
  "id": 1565,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/integration/extAuthWithSpring/src/org/hsqldb/sample/SpringExtAuth.java",
    "startLineNumber": 157,
    "lines": "{\n            if (st != null) try {\n                st.close();\n            } catch (SQLException se) {\n                log.error(\"Failed to close emulation database setup Connection\",\n                        se);\n            } finally {\n                st = null;  // Encourage GC\n            }\n            if (c != null) try {\n                c.close();\n            } catch (SQLException se) {\n                log.error(\"Failed to close emulation database setup Connection\",\n                        se);\n            } finally {\n                c = null;  // Encourage GC\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/integration/extAuthWithSpring/src/org/hsqldb/sample/SpringExtAuth.java",
    "startLineNumber": 122,
    "lines": "{\n            if (st != null) try {\n                st.close();\n            } catch (SQLException se) {\n                log.error(\"Failed to close emulation database setup Connection\",\n                        se);\n            } finally {\n                st = null;  // Encourage GC\n            }\n            if (c != null) try {\n                c.close();\n            } catch (SQLException se) {\n                log.error(\"Failed to close emulation database setup Connection\",\n                        se);\n            } finally {\n                c = null;  // Encourage GC\n            }\n        }"
   }
  ],
  "title": "/hsqldb/integration/extAuthWithSpring/src/org/hsqldb/sample/SpringExtAuth.java, /hsqldb/integration/extAuthWithSpring/src/org/hsqldb/sample/SpringExtAuth.java",
  "id": 1566,
  "numClones": 2,
  "cloneSize": 18
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4588,
    "lines": "e = new Expression(OpTypes.VALUELIST, new Expression[]{ e });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4631,
    "lines": "e = new Expression(OpTypes.VALUELIST, new Expression[]{ e });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1567,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1971,
    "lines": "Table table = (Table) schema.tableList.get(tableName.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1956,
    "lines": "Table table = (Table) schema.tableList.get(tableName.name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1944,
    "lines": "Table table = (Table) schema.tableList.get(tableName.name);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java & more ...",
  "id": 1568,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
    "startLineNumber": 98,
    "lines": "{\n            Class.forName(\"org.hsqldb.jdbc.JDBCDriver\");\n\n            con = java.sql.DriverManager.getConnection(url, \"sa\", \"\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedStatements.java",
    "startLineNumber": 137,
    "lines": "{\n            Class.forName(\"org.hsqldb.jdbc.JDBCDriver\");\n\n            con = java.sql.DriverManager.getConnection(url, \"sa\", \"\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java, /hsqldb/src/org/hsqldb/test/TestPreparedStatements.java",
  "id": 1569,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3701,
    "lines": "if (statement != null) try {\n                statement.close();\n            } catch (SQLException sen) {\n                // Intentionally empty.  See preceding comment\n            } finally {\n                statement = null;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3692,
    "lines": "if (statement != null) try {\n                statement.close();\n            } catch (SQLException sen) {\n                // Intentionally empty.  See preceding comment\n            } finally {\n                statement = null;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1570,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputText.java",
    "startLineNumber": 291,
    "lines": "{\n\n        String s = readString();\n\n        if (s == null) {\n            return null;\n        }\n\n        s = s.trim();\n\n        if (s.length() == 0) {\n            return null;\n        }\n\n        return ValuePool.getInt(Integer.parseInt(s));\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputText.java",
    "startLineNumber": 274,
    "lines": "{\n\n        String s = readString();\n\n        if (s == null) {\n            return null;\n        }\n\n        s = s.trim();\n\n        if (s.length() == 0) {\n            return null;\n        }\n\n        return ValuePool.getInt(Integer.parseInt(s));\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowInputText.java, /hsqldb/src/org/hsqldb/rowio/RowInputText.java",
  "id": 1571,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 140,
    "lines": "if (table == null) {\n            table = computeTable(pattern);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 411,
    "lines": "//\n        if (table == null) {\n            table = computeTable(pattern);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 347,
    "lines": "//\n        if (table == null) {\n            table = computeTable(pattern);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 209,
    "lines": "if (table == null) {\n            table = computeTable(pattern);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java",
    "startLineNumber": 277,
    "lines": "//\n        if (table == null) {\n            table = computeTable(pattern);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java, /hsqldb/src/org/hsqldb/lib/KMPSearchAlgorithm.java & more ...",
  "id": 1572,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 1360,
    "lines": "{\n                            if (rowData[i] == null) {\n                                /*\n                                server.printWithThread(\"R\" + rowNum + \"C\"\n                                    + (i+1) + \" => [null]\");\n                                */\n                                outPacket.writeInt(-1);\n                            } else {\n                                dataString =\n                                    pgTypes[i].valueString(rowData[i]);\n\n                                outPacket.writeSized(dataString);\n\n                                if (server.isTrace()) {\n                                    server.printWithThread(\n                                        \"R\" + rowNum + \"C\" + (i + 1) + \" => (\"\n                                        + rowData[i].getClass().getName()\n                                        + \") [\" + dataString + ']');\n                                }\n                            }\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 844,
    "lines": "{\n                                if (rowData[i] == null) {\n                                    /*\n                                    server.printWithThread(\"R\" + rowNum + \"C\"\n                                        + (i+1) + \" => [null]\");\n                                    */\n                                    outPacket.writeInt(-1);\n                                } else {\n                                    dataString =\n                                        pgTypes[i].valueString(rowData[i]);\n\n                                    outPacket.writeSized(dataString);\n\n                                    if (server.isTrace()) {\n                                        server.printWithThread(\n                                            \"R\" + rowNum + \"C\" + (i + 1)\n                                            + \" => (\"\n                                            + rowData[i].getClass().getName()\n                                            + \") [\" + dataString + ']');\n                                    }\n                                }\n                            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/ServerConnection.java, /hsqldb/src/org/hsqldb/server/ServerConnection.java",
  "id": 1573,
  "numClones": 2,
  "cloneSize": 18
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1406,
    "lines": "Constraint uniqueConstraint =\n            c.core.mainTable.getUniqueConstraintForColumns(c.core.mainCols);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 192,
    "lines": "Constraint uniqueConstraint =\n            c.core.mainTable.getUniqueConstraintForColumns(c.core.mainCols);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 376,
    "lines": "Constraint uniqueConstraint =\n                        c.core.mainTable.getUniqueConstraintForColumns(\n                            c.core.mainCols);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/TableWorks.java & more ...",
  "id": 1574,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 813,
    "lines": "millis = ((java.util.Date) a).getTime();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 764,
    "lines": "millis      = ((java.util.Date) a).getTime();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 1575,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 425,
    "lines": "// type dependent block\n        if (isObjectKey) {\n            objectKeyTable[lookup] = objectKey;\n        } else if (isIntKey) {\n            intKeyTable[lookup] = (int) longKey;\n\n            if (longKey == 0) {\n                hasZeroKey   = true;\n                zeroKeyIndex = lookup;\n            }\n        } else if (isLongKey) {\n            longKeyTable[lookup] = longKey;\n\n            if (longKey == 0) {\n                hasZeroKey   = true;\n                zeroKeyIndex = lookup;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 620,
    "lines": "// type dependent block\n        if (isObjectKey) {\n            objectKeyTable[lookup] = objectKey;\n        } else if (isIntKey) {\n            intKeyTable[lookup] = (int) longKey;\n\n            if (longKey == 0) {\n                hasZeroKey   = true;\n                zeroKeyIndex = lookup;\n            }\n        } else if (isLongKey) {\n            longKeyTable[lookup] = longKey;\n\n            if (longKey == 0) {\n                hasZeroKey   = true;\n                zeroKeyIndex = lookup;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java",
  "id": 1576,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 316,
    "lines": "{\n            nodes[LEFT].dataType  = Type.SQL_INTEGER;\n            nodes[RIGHT].dataType = Type.SQL_INTEGER;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 321,
    "lines": "{\n            nodes[LEFT].dataType  = Type.SQL_INTEGER;\n            nodes[RIGHT].dataType = Type.SQL_INTEGER;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
  "id": 1577,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 760,
    "lines": "newNodes[0] =\n                    new ExpressionValue(ValuePool.getInt(extractSpec),\n                                        Type.SQL_INTEGER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 771,
    "lines": "newNodes[0] =\n                    new ExpressionValue(ValuePool.getInt(extractSpec),\n                                        Type.SQL_INTEGER);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1578,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 322,
    "lines": "catch (Exception e) {\n            try {\n                assertTrue(msg, false);\n            } catch (Exception e2) {}\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 272,
    "lines": "catch (Exception e) {\n            try {\n                assertTrue(msg, false);\n            } catch (Exception e2) {}\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java, /hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
  "id": 1579,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1599,
    "lines": "if (compareRow(session, data, nodeData) == 0) {\n                row = c.getRow(store);\n\n                session.database.txManager.setTransactionInfo(store, row);\n\n                if (session.database.txManager.canRead(\n                        session, store, row, TransactionManager.ACTION_DUP,\n                        null)) {\n                    return true;\n                }\n\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1573,
    "lines": "if (compareRow(session, data, nodeData) == 0) {\n                row = c.getRow(store);\n\n                session.database.txManager.setTransactionInfo(store, row);\n\n                if (session.database.txManager.canRead(\n                        session, store, row, TransactionManager.ACTION_DUP,\n                        null)) {\n                    return true;\n                }\n\n                continue;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java",
  "id": 1580,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 238,
    "lines": "System.arraycopy(list, firstindex, list, firstindex + 1,\n                             target - firstindex);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 277,
    "lines": "System.arraycopy(list, firstindex, list, firstindex + 1,\n                             target - firstindex);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongDeque.java, /hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
  "id": 1581,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 954,
    "lines": "try {\n            if (Charset.isSupported(csn)) {\n                return Charset.forName(csn);\n            }\n        } catch (IllegalCharsetNameException x) {}"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
    "startLineNumber": 752,
    "lines": "try {\n            if (Charset.isSupported(csn)) {\n                return Charset.forName(csn);\n            }\n        } catch (IllegalCharsetNameException x) {\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
  "id": 1582,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 436,
    "lines": "((TimestampData) a).getNanos()\n                           - ((TimestampData) b).getNanos()"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 918,
    "lines": "((TimestampData) a).getNanos()\n                                 - ((TimestampData) b).getNanos()"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/IntervalType.java",
  "id": 1583,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4936,
    "lines": "{\n                    r.nodes = (Expression[]) ArrayUtil.resizeArray(r.nodes,\n                            r.nodes.length + 1);\n                    r.nodes[r.nodes.length - 1] = e;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4696,
    "lines": "{\n                r.nodes = (Expression[]) ArrayUtil.resizeArray(r.nodes,\n                        r.nodes.length + 1);\n                r.nodes[r.nodes.length - 1] = e;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1584,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7250,
    "lines": "/**\n     * Internal wasNull tracker.\n     *\n     * @param o the Object to track\n     * @return boolean\n     */\n    protected boolean trackNull(Object o) {\n        return (wasNullValue = (o == null));\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 4943,
    "lines": "private boolean trackNull(Object o) {\n        return (wasNullValue = (o == null));\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
  "id": 1585,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1013,
    "lines": "try {\n                                    if (statement != null) statement.close();\n                                } catch (SQLException nse) {\n                                    // Purposefully doing nothing\n                                } finally {\n                                    statement = null;\n                                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 961,
    "lines": "try {\n                                        if (statement != null)\n                                            statement.close();\n                                    } catch (SQLException nse) {\n                                        // Purposefully doing nothing\n                                    } finally {\n                                        statement = null;\n                                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2477,
    "lines": "try {\n                    if (statement != null) statement.close();\n                } catch (SQLException nse) {\n                    // Purposefully doing nothing\n                } finally {\n                    statement = null;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1586,
  "numClones": 3,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1127,
    "lines": "for (int i = 0; i < width; i++) {\n            for (int l = 0; l < size[i]; l++) {\n                b.append('-');\n            }\n\n            b.append(' ');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1914,
    "lines": "for (int i = 0; i < width; i++) {\n            for (int l = 0; l < size[i]; l++) {\n                b.append('-');\n            }\n\n            b.append(' ');\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1587,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 151,
    "lines": "if (destDb.helper.needTransferTransaction()) {\n            try {\n                destDb.setAutoCommit(false);\n            } catch (Exception e) {}\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 310,
    "lines": "if (destDb.helper.needTransferTransaction()) {\n            try {\n                destDb.setAutoCommit(false);\n            } catch (Exception e) {}\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 366,
    "lines": "if (destDb.helper.needTransferTransaction()) {\n            try {\n                destDb.setAutoCommit(false);\n            } catch (Exception e) {}\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferTable.java",
    "startLineNumber": 318,
    "lines": "if (destDb.helper.needTransferTransaction()) {\n                    try {\n                        destDb.setAutoCommit(false);\n                    } catch (Exception e) {}\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferTable.java, /hsqldb/src/org/hsqldb/util/TransferTable.java & more ...",
  "id": 1588,
  "numClones": 4,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestKarl.java",
    "startLineNumber": 240,
    "lines": "while (rs.next()) {\n            for (int i = 1; i <= col_count; i++) {\n                System.out.print(rs.getObject(i));\n                System.out.print(\"\\t\");\n            }\n\n            System.out.println(\"\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestKarl.java",
    "startLineNumber": 275,
    "lines": "while (rs.next()) {\n            for (int i = 1; i <= col_count; i++) {\n                System.out.print(rs.getObject(i));\n                System.out.print(\"\\t\");\n            }\n\n            System.out.println(\"\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestKarl.java, /hsqldb/src/org/hsqldb/test/TestKarl.java",
  "id": 1589,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java",
    "startLineNumber": 195,
    "lines": "boolean isLeft(NodeAVL n) {\n\n        if (n == null) {\n            return iLeft == NO_POS;\n        }\n\n        return iLeft == n.getPos();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 151,
    "lines": "boolean isLeft(NodeAVL n) {\n\n        if (n == null) {\n            return iLeft == NO_POS;\n        }\n\n        return iLeft == n.getPos();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDisk.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
  "id": 1590,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1500,
    "lines": "Object[] data = (Object[]) nav.getNext();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterBase.java",
    "startLineNumber": 368,
    "lines": "Object[] data = (Object[]) nav.getNext();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2663,
    "lines": "Object[] data = (Object[]) nav.getNext();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2711,
    "lines": "Object[] data = (Object[]) nav.getNext();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/scriptio/ScriptWriterBase.java & more ...",
  "id": 1591,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 1348,
    "lines": "{\n            Calendar calendar = cal == null ? session.getCalendar()\n                    : cal;\n\n            millis = HsqlDateTime.convertMillisToCalendar(calendar, millis);\n            millis = HsqlDateTime.getNormalisedTime(millis);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 4821,
    "lines": "{\n            Calendar calendar = cal == null ? session.getCalendar()\n                    : cal;\n\n            millis = HsqlDateTime.convertMillisToCalendar(calendar, millis);\n            millis = HsqlDateTime.getNormalisedTime(millis);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 1592,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1188,
    "lines": "{\n                return new TimestampData(millis / 1000, 0,\n                                         ((TimestampData) a).getZone());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 1220,
    "lines": "{\n                return new TimestampData(millis / 1000, 0,\n                                         ((TimestampData) a).getZone());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 1593,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java",
    "startLineNumber": 251,
    "lines": "public void rollbackSavepoint(Session session, int index) {\n\n        long timestamp = session.sessionContext.savepointTimestamps.get(index);\n        Integer oi = (Integer) session.sessionContext.savepoints.get(index);\n        int     start  = oi.intValue();\n\n        while (session.sessionContext.savepoints.size() > index + 1) {\n            session.sessionContext.savepoints.remove(\n                session.sessionContext.savepoints.size() - 1);\n            session.sessionContext.savepointTimestamps.removeLast();\n        }\n\n        rollbackPartial(session, start, timestamp);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManager2PL.java",
    "startLineNumber": 139,
    "lines": "public void rollbackSavepoint(Session session, int index) {\n\n        long timestamp = session.sessionContext.savepointTimestamps.get(index);\n        Integer oi = (Integer) session.sessionContext.savepoints.get(index);\n        int     start  = oi.intValue();\n\n        while (session.sessionContext.savepoints.size() > index + 1) {\n            session.sessionContext.savepoints.remove(\n                session.sessionContext.savepoints.size() - 1);\n            session.sessionContext.savepointTimestamps.removeLast();\n        }\n\n        rollbackPartial(session, start, timestamp);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TransactionManagerMV2PL.java",
    "startLineNumber": 189,
    "lines": "public void rollbackSavepoint(Session session, int index) {\n\n        long timestamp = session.sessionContext.savepointTimestamps.get(index);\n        Integer oi = (Integer) session.sessionContext.savepoints.get(index);\n        int     start  = oi.intValue();\n\n        while (session.sessionContext.savepoints.size() > index + 1) {\n            session.sessionContext.savepoints.remove(\n                session.sessionContext.savepoints.size() - 1);\n            session.sessionContext.savepointTimestamps.removeLast();\n        }\n\n        rollbackPartial(session, start, timestamp);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TransactionManagerMVCC.java, /hsqldb/src/org/hsqldb/TransactionManager2PL.java & more ...",
  "id": 1594,
  "numClones": 3,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 635,
    "lines": "int    length      = a.length > b.length ? a.length\n                                                 : b.length;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 612,
    "lines": "int    length      = a.length > b.length ? a.length\n                                                 : b.length;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BitMap.java",
    "startLineNumber": 597,
    "lines": "int    length      = a.length > b.length ? a.length\n                                                 : b.length;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BitMap.java, /hsqldb/src/org/hsqldb/map/BitMap.java & more ...",
  "id": 1595,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1113,
    "lines": "assertEquals(Boolean.class, rs.getObject(\"b\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 361,
    "lines": "assertEquals(Boolean.class, rs.getObject(\"b\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 1596,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 507,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE).append(\n                ' ');"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TextTable.java",
    "startLineNumber": 340,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE).append(' ');"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TextTable.java",
    "startLineNumber": 363,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE).append(' ');"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 585,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE).append(' ');"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 569,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE).append(' ');"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 609,
    "lines": "sb.append(Tokens.T_SET).append(' ').append(Tokens.T_TABLE).append(' ');"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/TextTable.java & more ...",
  "id": 1597,
  "numClones": 6,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 371,
    "lines": "Schema schema = ((Schema) schemaMap.get(name));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 397,
    "lines": "Schema schema = ((Schema) schemaMap.get(name));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 1598,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1291,
    "lines": "(remark != null) && !remark.trim().equals(\"\")"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2558,
    "lines": "(remark != null) && !remark.trim().equals(\"\")"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1599,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/Server.java",
    "startLineNumber": 2475,
    "lines": "System.out.println(\"no value for argument:\" + errors[0]);"
   },
   {
    "fileName": "/hsqldb/doc/verbatim/src/org/hsqldb/server/WebServer.java",
    "startLineNumber": 149,
    "lines": "System.out.println(\"no value for argument:\" + errors[0]);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/Server.java, /hsqldb/doc/verbatim/src/org/hsqldb/server/WebServer.java",
  "id": 1600,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Routine.java",
    "startLineNumber": 670,
    "lines": "Routine routine =\n                    (Routine) session.database.schemaManager.getSchemaObject(\n                        name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1860,
    "lines": "Routine routine =\n                        (Routine) session.database.schemaManager\n                            .getSchemaObject(name);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Routine.java, /hsqldb/src/org/hsqldb/Expression.java",
  "id": 1601,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 196,
    "lines": "boolean isResult = cs.execute();\n\n        assertFalse(isResult);\n        cs.getMoreResults();\n\n        ResultSet rs = cs.getResultSet();\n\n        rs.next();\n        assertEquals(rs.getString(1), \"SYSTEM_LOBS\");\n        assertEquals(rs.getString(2), \"LOB_IDS\");\n        rs.close();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 221,
    "lines": "boolean isResult = cs.execute();\n\n        assertFalse(isResult);\n        cs.getMoreResults();\n\n        ResultSet rs = cs.getResultSet();\n\n        rs.next();\n        assertEquals(rs.getString(1), \"SYSTEM_LOBS\");\n        assertEquals(rs.getString(2), \"LOB_IDS\");\n        rs.close();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 221,
    "lines": "boolean isResult = cs.execute();\n\n        assertFalse(isResult);\n        cs.getMoreResults();\n\n        ResultSet rs = cs.getResultSet();\n\n        rs.next();\n        assertEquals(rs.getString(1), \"SYSTEM_LOBS\");\n        assertEquals(rs.getString(2), \"LOB_IDS\");\n        rs.close();\n\n        if (cs.getMoreResults()) {\n            rs = cs.getResultSet();\n\n            rs.next();\n            assertEquals(rs.getString(1), \"SYSTEM_LOBS\");\n            assertEquals(rs.getString(2), \"LOBS\");\n            rs.close();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 257,
    "lines": "boolean isResult = cs.execute();\n\n        assertFalse(isResult);\n        cs.getMoreResults();\n\n        ResultSet rs = cs.getResultSet();\n\n        rs.next();\n        assertEquals(rs.getString(1), \"SYSTEM_LOBS\");\n        assertEquals(rs.getString(2), \"LOB_IDS\");\n        rs.close();\n\n        if (cs.getMoreResults()) {\n            rs = cs.getResultSet();\n\n            rs.next();\n            assertEquals(rs.getString(1), \"SYSTEM_LOBS\");\n            assertEquals(rs.getString(2), \"LOBS\");\n            rs.close();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java",
    "startLineNumber": 257,
    "lines": "boolean isResult = cs.execute();\n\n        assertFalse(isResult);\n        cs.getMoreResults();\n\n        ResultSet rs = cs.getResultSet();\n\n        rs.next();\n        assertEquals(rs.getString(1), \"SYSTEM_LOBS\");\n        assertEquals(rs.getString(2), \"LOB_IDS\");\n        rs.close();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestStoredProcedure.java, /hsqldb/src/org/hsqldb/test/TestStoredProcedure.java & more ...",
  "id": 1602,
  "numClones": 5,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 150,
    "lines": "assertEquals(Integer.class, rs.getObject(\"i\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 867,
    "lines": "assertEquals(Integer.class, rs.getObject(\"i\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 1603,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 122,
    "lines": "if (maxCardinality != defaultArrayCardinality) {\n            sb.append('[').append(maxCardinality).append(']');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 136,
    "lines": "if (maxCardinality != defaultArrayCardinality) {\n            sb.append('[').append(maxCardinality).append(']');\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 108,
    "lines": "if (maxCardinality != defaultArrayCardinality) {\n            sb.append('[').append(maxCardinality).append(']');\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ArrayType.java, /hsqldb/src/org/hsqldb/types/ArrayType.java & more ...",
  "id": 1604,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 301,
    "lines": "private int getInternalIndex(int i) throws IndexOutOfBoundsException {\n\n        if (i < 0 || i >= elementCount) {\n            throw new IndexOutOfBoundsException();\n        }\n\n        int index = firstindex + i;\n\n        if (index >= list.length) {\n            index -= list.length;\n        }\n\n        return index;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 309,
    "lines": "private int getInternalIndex(int i) throws IndexOutOfBoundsException {\n\n        if (i < 0 || i >= elementCount) {\n            throw new IndexOutOfBoundsException();\n        }\n\n        int index = firstindex + i;\n\n        if (index >= list.length) {\n            index -= list.length;\n        }\n\n        return index;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongDeque.java, /hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
  "id": 1605,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 867,
    "lines": "String result = ((ClobData) data).getSubString(session, 0,\n                (int) ((ClobData) data).length(session));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 889,
    "lines": "String result = ((ClobData) data).getSubString(session, 0,\n                (int) ((ClobData) data).length(session));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/CharacterType.java, /hsqldb/src/org/hsqldb/types/CharacterType.java",
  "id": 1606,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1153,
    "lines": "assertEquals(String.class, rs.getObject(\"c\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 390,
    "lines": "assertEquals(String.class, rs.getObject(\"c\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 1607,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java",
    "startLineNumber": 97,
    "lines": "isSimpleAggregate    = select.isAggregated && !select.isGrouped;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
    "startLineNumber": 95,
    "lines": "isSimpleAggregate = select.isAggregated && !select.isGrouped;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/navigator/RowSetNavigatorData.java, /hsqldb/src/org/hsqldb/navigator/RowSetNavigatorDataTable.java",
  "id": 1608,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java",
    "startLineNumber": 76,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return intValueTable[lookup];\n        }\n\n        return defaultValue;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 69,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            return intValueTable[lookup];\n        }\n\n        return defaultValue;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongKeyIntValueHashMap.java, /hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
  "id": 1609,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowInputText.java",
    "startLineNumber": 108,
    "lines": "if (longvarSep.endsWith(\"\\n\")) {\n            longvarSepEnd = true;\n            longvarSep    = longvarSep.substring(0, longvarSep.length() - 1);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rowio/RowOutputText.java",
    "startLineNumber": 98,
    "lines": "if (longvarSep.endsWith(\"\\n\")) {\n            longvarSepEnd = true;\n            longvarSep    = longvarSep.substring(0, longvarSep.length() - 1);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rowio/RowInputText.java, /hsqldb/src/org/hsqldb/rowio/RowOutputText.java",
  "id": 1610,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobDataID.java",
    "startLineNumber": 246,
    "lines": "static boolean isInLimits(long fullLength, long pos, long len) {\n        return pos >= 0 && len >= 0 && pos + len <= fullLength;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java",
    "startLineNumber": 392,
    "lines": "static boolean isInLimits(long fullLength, long pos, long len) {\n        return pos >= 0 && len >= 0 && pos + len <= fullLength;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobInputStream.java",
    "startLineNumber": 153,
    "lines": "static boolean isInLimits(long fullLength, long pos, long len) {\n        return pos >= 0 && len >= 0 && pos + len <= fullLength;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryData.java",
    "startLineNumber": 281,
    "lines": "//---\n    static boolean isInLimits(long fullLength, long pos, long len) {\n        return pos >= 0 && len >= 0 && pos + len <= fullLength;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobInputStream.java",
    "startLineNumber": 170,
    "lines": "static boolean isInLimits(long fullLength, long pos, long len) {\n        return pos >= 0 && len >= 0 && pos + len <= fullLength;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ClobDataID.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlobClient.java & more ...",
  "id": 1611,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2332,
    "lines": "shared.userVars.put(mathMatcher.group(1), Long.toString(\n                            Calculator.reassignValue(mathMatcher.group(1),\n                            shared.userVars, mathMatcher.group(2),\n                            (mathMatcher.groupCount() < 3)\n                            ? null : mathMatcher.group(3))));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2373,
    "lines": "shared.userVars.put(\n                                    mathMatcher.group(1), Long.toString(\n                                    Calculator.reassignValue(\n                                    mathMatcher.group(1),\n                                    shared.userVars, mathMatcher.group(2),\n                                    (mathMatcher.groupCount() < 3)\n                                    ? null : mathMatcher.group(3))));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2745,
    "lines": "shared.userVars.put(mathMatcher.group(1), Long.toString(\n                    Calculator.reassignValue(mathMatcher.group(1),\n                    shared.userVars, mathMatcher.group(2),\n                    (mathMatcher.groupCount() < 3)\n                    ? null : mathMatcher.group(3))));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1612,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 1193,
    "lines": "assertEquals(String.class, rs.getObject(\"cv\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 419,
    "lines": "assertEquals(String.class, rs.getObject(\"cv\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 1613,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1662,
    "lines": "nodes[0].dataType.precision\n                                                  + nodes[1].dataType\n                                                      .precision"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1676,
    "lines": "nodes[0].dataType.precision\n                            + nodes[1].dataType.precision"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1653,
    "lines": "nodes[0].dataType.precision\n                                                  + nodes[1].dataType\n                                                      .precision"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1681,
    "lines": "nodes[0].dataType.precision\n                            + nodes[1].dataType.precision"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 1614,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/View.java",
    "startLineNumber": 278,
    "lines": "ParserDQL p = new ParserDQL(session, new Scanner(),\n                                    session.parser.compileContext);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableDerived.java",
    "startLineNumber": 152,
    "lines": "ParserDQL p = new ParserDQL(session, new Scanner(),\n                                        session.parser.compileContext);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/View.java, /hsqldb/src/org/hsqldb/TableDerived.java",
  "id": 1615,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 62,
    "lines": "populateBySerialIntKeys(uMap, hMap, testSize);\n            compareByUIterator(uMap, hMap);\n            compareByHIterator(uMap, hMap);\n\n            // -\n            populateByRandomIntKeys(uMap, hMap, testSize);\n            compareByUIterator(uMap, hMap);\n            compareByHIterator(uMap, hMap);\n\n            //\n            depopulateRandomly(uMap, hMap, 20);\n            compareByUIterator(uMap, hMap);\n            compareByHIterator(uMap, hMap);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java",
    "startLineNumber": 142,
    "lines": "populateBySerialIntKeys(uMap, hMap, testSize);\n            compareByUIterator(uMap, hMap);\n            compareByHIterator(uMap, hMap);\n            populateByRandomIntKeys(uMap, hMap, testSize);\n            compareByUIterator(uMap, hMap);\n            compareByHIterator(uMap, hMap);\n            depopulateRandomly(uMap, hMap, 20);\n            compareByUIterator(uMap, hMap);\n            compareByHIterator(uMap, hMap);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestHashStructures.java, /hsqldb/src/org/hsqldb/test/TestHashStructures.java",
  "id": 1616,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 899,
    "lines": "Schema schema = (Schema) schemaMap.get(table.getSchemaName().name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 907,
    "lines": "Schema schema    = (Schema) schemaMap.get(table.getSchemaName().name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1021,
    "lines": "Schema schema = (Schema) schemaMap.get(table.getSchemaName().name);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1041,
    "lines": "Schema schema = (Schema) schemaMap.get(table.getSchemaName().name);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java & more ...",
  "id": 1617,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 719,
    "lines": "{\n            int i = colTypes[j].compare(session, a[colIndex[j]],\n                                        b[rowColMap[j]]);\n\n            if (i != 0) {\n                return i;\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 704,
    "lines": "{\n            int i = colTypes[j].compare(session, a[colIndex[j]],\n                                        b[rowColMap[j]]);\n\n            if (i != 0) {\n                return i;\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java",
  "id": 1618,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/DbBackup.java",
    "startLineNumber": 388,
    "lines": "boolean exists = componentStreams[i] != null\n                             || componentFiles[i].exists();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/DbBackup.java",
    "startLineNumber": 307,
    "lines": "boolean exists = componentStreams[i] != null\n                             || componentFiles[i].exists();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/DbBackup.java, /hsqldb/src/org/hsqldb/lib/tar/DbBackup.java",
  "id": 1619,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2773,
    "lines": "if (!nodes[0].dataType.isNumberType()) {\n                    throw Error.error(ErrorCode.X_42561);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2786,
    "lines": "if (!nodes[0].dataType.isNumberType()) {\n                    throw Error.error(ErrorCode.X_42561);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1620,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 2244,
    "lines": "if (currentPart == lastPart) {\n                    endOfPart = true;\n                } else {\n                    throw Error.error(ErrorCode.X_22006);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 2222,
    "lines": "if (currentPart == lastPart) {\n                    endOfPart = true;\n                } else {\n                    throw Error.error(ErrorCode.X_22006);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java",
  "id": 1621,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1029,
    "lines": "if (currentTable instanceof TableDerived) {\n                currentTable = ((TableDerived) currentTable).view;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1258,
    "lines": "if (currentTable instanceof TableDerived) {\n                currentTable = ((TableDerived) currentTable).view;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 1622,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 895,
    "lines": "//check that update count != -1\n            if (aStatement.getUpdateCount() != -1) {\n                throw new Exception(\n                    \"Expected a ResultSet, but got an update count of \"\n                    + aStatement.getUpdateCount());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 1217,
    "lines": "//check that update count != -1\n            if (aStatement.getUpdateCount() != -1) {\n                throw new Exception(\n                    \"Expected a ResultSet, but got an update count of \"\n                    + aStatement.getUpdateCount());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 733,
    "lines": "//check that update count != -1\n            if (aStatement.getUpdateCount() != -1) {\n                throw new Exception(\n                    \"Expected a ResultSet, but got an update count of \"\n                    + aStatement.getUpdateCount());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUtil.java, /hsqldb/src/org/hsqldb/test/TestUtil.java & more ...",
  "id": 1623,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BitType.java",
    "startLineNumber": 227,
    "lines": "public Object castToType(SessionInterface session, Object a,\n                             Type otherType) {\n        return castOrConvertToType(session, a, otherType, true);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 362,
    "lines": "public Object castToType(SessionInterface session, Object a,\n                             Type otherType) {\n        return castOrConvertToType(session, a, otherType, true);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BitType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java",
  "id": 1624,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 1453,
    "lines": "// order: COLUMN_NAME\n            // added for unique: TABLE_NAME, TABLE_SCHEM, TABLE_CAT\n            // false PK, as  TABLE_SCHEM and/or TABLE_CAT may be null\n            HsqlName name = HsqlNameManager.newInfoSchemaObjectName(\n                sysTableHsqlNames[SYSTEM_PRIMARYKEYS].name, false,\n                SchemaObject.INDEX);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 1910,
    "lines": "HsqlName name = HsqlNameManager.newInfoSchemaObjectName(\n                sysTableHsqlNames[SYSTEM_PRIMARYKEYS].name, false,\n                SchemaObject.INDEX);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 1625,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 102,
    "lines": "if (i < 0 || i >= count) {\n            throw new IndexOutOfBoundsException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 79,
    "lines": "if (i < 0 || i >= count) {\n            throw new IndexOutOfBoundsException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 88,
    "lines": "if (i < 0 || i >= count) {\n            throw new IndexOutOfBoundsException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 120,
    "lines": "if (i < 0 || i >= count) {\n            throw new IndexOutOfBoundsException();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java, /hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java & more ...",
  "id": 1626,
  "numClones": 4,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2199,
    "lines": "{\n\n        if (!database.isReferentialIntegrity()) {\n            return;\n        }\n\n        TriggerDef[] trigVec = triggerLists[trigVecIndex];\n\n        for (int i = 0, size = trigVec.length; i < size; i++) {\n            TriggerDef td         = trigVec[i];\n            boolean    sqlTrigger = td instanceof TriggerDefSQL;\n\n            if (td.hasOldTable()) {\n\n                //\n            }\n\n            td.pushPair(session, null, null);\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 2221,
    "lines": "{\n\n        if (!database.isReferentialIntegrity()) {\n            return;\n        }\n\n        TriggerDef[] trigVec = triggerLists[trigVecIndex];\n\n        for (int i = 0, size = trigVec.length; i < size; i++) {\n            TriggerDef td         = trigVec[i];\n            boolean    sqlTrigger = td instanceof TriggerDefSQL;\n\n            if (td.hasOldTable()) {\n\n                //\n            }\n\n            td.pushPair(session, null, null);\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 1627,
  "numClones": 2,
  "cloneSize": 13
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDriver.java",
    "startLineNumber": 395,
    "lines": "url.regionMatches(true, 0, DatabaseURL.S_URL_INTERNAL, 0,\n                              DatabaseURL.S_URL_INTERNAL.length())"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDriver.java",
    "startLineNumber": 249,
    "lines": "url.regionMatches(true, 0, DatabaseURL.S_URL_INTERNAL, 0,\n                              DatabaseURL.S_URL_INTERNAL.length())"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCDriver.java, /hsqldb/src/org/hsqldb/jdbc/JDBCDriver.java",
  "id": 1628,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1148,
    "lines": "if (table.isView()) {\n                    table = ((View) table).newDerivedTable(session);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1980,
    "lines": "if (table.isView()) {\n                    table = ((View) table).newDerivedTable(session);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1629,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 124,
    "lines": "statement.execute(\"drop table t1 if exists\");\n            statement.execute(\n                \"create table t1 (i int primary key, c varchar(10), t varbinary(3))\");\n\n            String            insert = \"insert into t1 values(?,?,?)\";\n            String            select = \"select i, c, t from t1\";\n            PreparedStatement ps     = connection.prepareStatement(insert);\n\n            for (int i = 0; i < 10; i++) {\n                ps.setInt(1, i);\n                ps.setString(2, String.valueOf(i) + \" s\");\n                ps.setBytes(3, new byte[] {\n                    (byte) i, ' ', (byte) i\n                });\n                ps.execute();\n            }\n\n            connection.setAutoCommit(false);\n\n            ResultSet rs = statement.executeQuery(select);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
    "startLineNumber": 67,
    "lines": "statement.execute(\"drop table t1 if exists\");\n            statement.execute(\n                \"create table t1 (i int primary key, c varchar(10), t varbinary(3))\");\n\n            String            insert = \"insert into t1 values(?,?,?)\";\n            String            select = \"select i, c, t from t1\";\n            PreparedStatement ps     = connection.prepareStatement(insert);\n\n            for (int i = 0; i < 10; i++) {\n                ps.setInt(1, i);\n                ps.setString(2, String.valueOf(i) + \" s\");\n                ps.setBytes(3, new byte[] {\n                    (byte) i, ' ', (byte) i\n                });\n                ps.execute();\n            }\n\n            connection.setAutoCommit(false);\n\n            ResultSet rs = statement.executeQuery(select);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java, /hsqldb/src/org/hsqldb/test/TestUpdatableResultSets.java",
  "id": 1630,
  "numClones": 2,
  "cloneSize": 16
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 446,
    "lines": "name = (String) expressions[0].getValue(session);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 360,
    "lines": "name = (String) expressions[0].getValue(session);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSession.java",
    "startLineNumber": 484,
    "lines": "name = (String) expressions[0].getValue(session);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementSession.java, /hsqldb/src/org/hsqldb/StatementSession.java & more ...",
  "id": 1631,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 678,
    "lines": "if (l != null && !p.equals(l.getParent(store))) {\n            System.out.print(\"broken index - no parent\");\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
    "startLineNumber": 164,
    "lines": "if (l != null && !p.equals(l.getParent(store))) {\n            System.out.print(\"broken index - no parent\");\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVLMemory.java",
  "id": 1632,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 274,
    "lines": "do result[j++] = value; while (--count > 0);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 228,
    "lines": "do result[j++] = value; while (--count > 0);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java",
    "startLineNumber": 125,
    "lines": "do result[j++] = value; while (--count > 0);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java, /hsqldb/src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java & more ...",
  "id": 1633,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Charset.java",
    "startLineNumber": 263,
    "lines": "if (ch < ranges[i][0]) {\n                return false;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Charset.java",
    "startLineNumber": 241,
    "lines": "if (ch < ranges[i][0]) {\n                    return false;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/Charset.java, /hsqldb/src/org/hsqldb/types/Charset.java",
  "id": 1634,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/tar/RB.java",
    "startLineNumber": 164,
    "lines": "public String getString(int i1, String s2, int i3) {\n        return vrb.getString(this, i1, s2, i3);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
    "startLineNumber": 329,
    "lines": "public String getString(int i1, String s2, int i3) {\n        return vrb.getString(this, i1, s2, i3);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/tar/RB.java, /hsqldb/src/org/hsqldb/cmdline/SqltoolRB.java",
  "id": 1635,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3535,
    "lines": "addColumn(t, \"DATA_TYPE\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_MAXIMUM_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_OCTET_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_SET_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3360,
    "lines": "addColumn(t, \"DATA_TYPE\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_MAXIMUM_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_OCTET_LENGTH\", CARDINAL_NUMBER);\n            addColumn(t, \"CHARACTER_SET_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"CHARACTER_SET_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"COLLATION_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"DATETIME_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"INTERVAL_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"INTERVAL_PRECISION\", CARDINAL_NUMBER);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 1636,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 773,
    "lines": "if (!targets.add(target)) {\n                    ColumnSchema col = target.getColumn();\n\n                    throw Error.error(ErrorCode.X_42579, col.getName().name);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 669,
    "lines": "if (!targets.add(target)) {\n                ColumnSchema col = target.getColumn();\n\n                throw Error.error(ErrorCode.X_42579, col.getName().name);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 851,
    "lines": "if (!targets.add(target)) {\n                ColumnSchema col = target.getColumn();\n\n                throw Error.error(ErrorCode.X_42579, col.getName().name);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDML.java, /hsqldb/src/org/hsqldb/ParserDQL.java & more ...",
  "id": 1637,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ClobInputStream.java",
    "startLineNumber": 81,
    "lines": "if (buffer == null\n                || currentPosition >= bufferOffset + buffer.length) {\n            try {\n                checkClosed();\n                readIntoBuffer();\n            } catch (Exception e) {\n                throw JavaSystem.toIOException(e);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BlobInputStream.java",
    "startLineNumber": 81,
    "lines": "if (buffer == null\n                || currentPosition >= bufferOffset + buffer.length) {\n            try {\n                checkClosed();\n                readIntoBuffer();\n            } catch (Exception e) {\n                throw JavaSystem.toIOException(e);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ClobInputStream.java, /hsqldb/src/org/hsqldb/types/BlobInputStream.java",
  "id": 1638,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1560,
    "lines": "Object[]        pvals     = (Object[]) cmd.valueData;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 977,
    "lines": "Object[] pvals = (Object[]) cmd.valueData;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 1639,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 930,
    "lines": "value = Type.SQL_BIGINT.convertToType(session, data[2],\n                                                          nodes[2].dataType);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1019,
    "lines": "value = Type.SQL_BIGINT.convertToType(session, data[2],\n                                                      nodes[2].dataType);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1116,
    "lines": "value = Type.SQL_BIGINT.convertToType(session, data[2],\n                                                      nodes[2].dataType);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1060,
    "lines": "value = Type.SQL_BIGINT.convertToType(session, data[2],\n                                                          nodes[2].dataType);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 1640,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 692,
    "lines": "{\n                        TimeData ti = (TimeData) a;\n                        long seconds = session.getCurrentDate().getSeconds()\n                                       + ti.getSeconds()\n                                       - session.getZoneSeconds();\n\n                        return new TimestampData(seconds,\n                                                 scaleNanos(ti.getNanos()),\n                                                 session.getZoneSeconds());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/DateTimeType.java",
    "startLineNumber": 658,
    "lines": "{\n                        TimeData ti = (TimeData) a;\n                        long seconds = session.getCurrentDate().getSeconds()\n                                       + ti.getSeconds()\n                                       - session.getZoneSeconds();\n\n                        return new TimestampData(seconds,\n                                                 scaleNanos(ti.getNanos()),\n                                                 session.getZoneSeconds());\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/DateTimeType.java, /hsqldb/src/org/hsqldb/types/DateTimeType.java",
  "id": 1641,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java",
    "startLineNumber": 82,
    "lines": "for (int i = 0; i < array.length; i++) {\n                add(array[i]);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java",
    "startLineNumber": 82,
    "lines": "for (int i = 0; i < array.length; i++) {\n                add(array[i]);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/OrderedIntHashSet.java, /hsqldb/src/org/hsqldb/lib/OrderedLongHashSet.java",
  "id": 1642,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 792,
    "lines": "if (shadowFile != null) {\n                shadowFile.close();\n\n                shadowFile = null;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java",
    "startLineNumber": 663,
    "lines": "if (shadowFile != null) {\n                shadowFile.close();\n\n                shadowFile = null;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/DataFileCache.java, /hsqldb/src/org/hsqldb/persist/DataFileCache.java",
  "id": 1643,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 399,
    "lines": "if (schema == null) {\n                throw Error.error(ErrorCode.X_3F000, name);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 318,
    "lines": "if (schema == null) {\n                throw Error.error(ErrorCode.X_3F000, name);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 1644,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 693,
    "lines": "Type type = translateType(resultMetaData.columnTypes[--column]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 318,
    "lines": "Type type = translateType(resultMetaData.columnTypes[--column]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 398,
    "lines": "Type type = translateType(resultMetaData.columnTypes[--column]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 674,
    "lines": "Type type = translateType(resultMetaData.columnTypes[--column]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 814,
    "lines": "Type type = translateType(resultMetaData.columnTypes[--column]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 583,
    "lines": "Type type = translateType(resultMetaData.columnTypes[--column]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 551,
    "lines": "// type in columnTypes overrides column type\n        Type type      = translateType(resultMetaData.columnTypes[--column]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 192,
    "lines": "Type type = translateType(resultMetaData.columnTypes[--column]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java",
    "startLineNumber": 252,
    "lines": "Type type = translateType(resultMetaData.columnTypes[--column]);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSetMetaData.java & more ...",
  "id": 1645,
  "numClones": 9,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1765,
    "lines": "h[i - 1] = m.getColumnLabel(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 947,
    "lines": "h[i - 1] = m.getColumnLabel(i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManager.java",
  "id": 1646,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
    "startLineNumber": 282,
    "lines": "return (position == -1) ? -1\n                                : position + 1;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
    "startLineNumber": 341,
    "lines": "return (position == -1) ? -1\n                                : position + 1;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClob.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClob.java",
  "id": 1647,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1470,
    "lines": "{\n                HsqlName name = c.getName();\n\n                throw Error.error(ErrorCode.X_42533,\n                                  name.getSchemaQualifiedStatementName());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Table.java",
    "startLineNumber": 1340,
    "lines": "{\n                HsqlName name = c.getName();\n\n                throw Error.error(ErrorCode.X_42533,\n                                  name.getSchemaQualifiedStatementName());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Table.java, /hsqldb/src/org/hsqldb/Table.java",
  "id": 1648,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 609,
    "lines": "new short[] {\n                    Tokens.OPENBRACKET, Tokens.QUESTION, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.X_OPTION, 2, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.CLOSEBRACKET\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 399,
    "lines": "new short[] {\n                    Tokens.OPENBRACKET, Tokens.QUESTION, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.X_OPTION, 2, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.CLOSEBRACKET\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 632,
    "lines": "new short[] {\n                    Tokens.OPENBRACKET, Tokens.QUESTION, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.X_OPTION, 2, Tokens.COMMA,\n                    Tokens.QUESTION, Tokens.CLOSEBRACKET\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 1649,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryData.java",
    "startLineNumber": 150,
    "lines": "if (!isInLimits(data.length, pos, length)) {\n            throw new IndexOutOfBoundsException();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryData.java",
    "startLineNumber": 172,
    "lines": "if (!isInLimits(data.length, pos, length)) {\n            throw new IndexOutOfBoundsException();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BinaryData.java, /hsqldb/src/org/hsqldb/types/BinaryData.java",
  "id": 1650,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 360,
    "lines": "if (n != null && !n.isInMemory()) {\n            n = findNode(store, n.getPos());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 307,
    "lines": "if (n != null && !n.isInMemory()) {\n            n = findNode(store, n.getPos());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 390,
    "lines": "if (n != null && !n.isInMemory()) {\n            n = findNode(store, n.getPos());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java & more ...",
  "id": 1651,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementInsert.java",
    "startLineNumber": 141,
    "lines": "baseTable.triggerLists[Trigger.INSERT_AFTER].length > 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 892,
    "lines": "baseTable.triggerLists[Trigger.INSERT_AFTER].length > 0"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 772,
    "lines": "baseTable.triggerLists[Trigger.INSERT_AFTER].length > 0"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementInsert.java, /hsqldb/src/org/hsqldb/StatementDML.java & more ...",
  "id": 1652,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
    "startLineNumber": 172,
    "lines": "Object[] data = ((Row) object).getData();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
    "startLineNumber": 104,
    "lines": "Object[] data = ((Row) object).getData();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLHybridExtended.java",
  "id": 1653,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerAcl.java",
    "startLineNumber": 448,
    "lines": "{\n                    throw new AclFormatException(\"Syntax error at ACL file '\"\n                                                 + aclFile.getAbsolutePath()\n                                                 + \"', line \" + linenum);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerAcl.java",
    "startLineNumber": 444,
    "lines": "{\n                    throw new AclFormatException(\"Syntax error at ACL file '\"\n                                                 + aclFile.getAbsolutePath()\n                                                 + \"', line \" + linenum);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/ServerAcl.java, /hsqldb/src/org/hsqldb/server/ServerAcl.java",
  "id": 1654,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 4931,
    "lines": "String msg = \"from SQL type \" + sourceType.getNameString()\n                             + \" to \" + targetType.getJDBCClassName()\n                             + \", value: \" + stringValue;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7308,
    "lines": "String msg = \"from SQL type \" + sourceType.getNameString()\n                             + \" to \" + targetType.getJDBCClassName()\n                             + \", value: \" + stringValue;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 1655,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 922,
    "lines": "/*\n                         * A real problem in this block is that the Scanner\n                         * has already displayed the next prompt at this\n                         * point.  We handle this specially within this\n                         * block, but if we throw, the handler will not\n                         * know that the prompt has to be re-displayed.\n                         * I.e., KNOWN ISSUE:  For some errors caught during\n                         * raw command execution, interactive users will not\n                         * get a prompt to tell them to proceed.\n                         */\n                        if (token.val == null) token.val = \"\";"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1004,
    "lines": "if (token.val == null) token.val = \"\";"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1656,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 938,
    "lines": "if (table.getSpaceID()\n                            != DataSpaceManager.tableIdDefault) {\n                        return Result.updateZeroResult;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementCommand.java",
    "startLineNumber": 885,
    "lines": "if (table.getSpaceID()\n                            != DataSpaceManager.tableIdDefault) {\n                        return Result.updateZeroResult;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementCommand.java, /hsqldb/src/org/hsqldb/StatementCommand.java",
  "id": 1657,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFile.java",
    "startLineNumber": 245,
    "lines": "if (seekPosition < bufferOffset\n                    || seekPosition >= bufferOffset + buffer.length) {\n                readIntoBuffer();\n            } else {\n                cacheHit++;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RAFile.java",
    "startLineNumber": 299,
    "lines": "if (seekPosition < bufferOffset\n                    || seekPosition >= bufferOffset + buffer.length) {\n                readIntoBuffer();\n            } else {\n                cacheHit++;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RAFile.java, /hsqldb/src/org/hsqldb/persist/RAFile.java",
  "id": 1658,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 938,
    "lines": "if (existing == null) {\n                existing = add.duplicate();\n\n                fullRightsMap.put(key, existing);\n            } else {\n                existing.add(add);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/rights/Grantee.java",
    "startLineNumber": 973,
    "lines": "if (existing == null) {\n                    existing = add.duplicate();\n\n                    fullRightsMap.put(key, existing);\n                } else {\n                    existing.add(add);\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/rights/Grantee.java, /hsqldb/src/org/hsqldb/rights/Grantee.java",
  "id": 1659,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariableJoined.java",
    "startLineNumber": 348,
    "lines": "if (isLeftJoin) {\n            temp = \"LEFT OUTER\";\n\n            if (isRightJoin) {\n                temp = \"FULL\";\n            }\n        } else if (isRightJoin) {\n            temp = \"RIGHT OUTER\";\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 934,
    "lines": "if (isLeftJoin) {\n            temp = \"LEFT OUTER\";\n\n            if (isRightJoin) {\n                temp = \"FULL\";\n            }\n        } else if (isRightJoin) {\n            temp = \"RIGHT OUTER\";\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariableJoined.java, /hsqldb/src/org/hsqldb/RangeVariable.java",
  "id": 1660,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java",
    "startLineNumber": 770,
    "lines": "protected final void checkIsFile(boolean checkExists) throws SQLException {\n\n        boolean exists = false;\n        boolean isFile = false;\n\n        try {\n            exists = m_file.exists();\n        } catch (Exception ex) {\n            throw JDBCUtil.sqlException(ex);\n        }\n\n        if (exists) {\n            try {\n                isFile = m_file.isFile();\n            } catch (Exception ex) {\n                throw JDBCUtil.sqlException(ex);\n            }\n        }\n\n        if (exists) {\n            if (!isFile) {\n                throw JDBCUtil.invalidArgument(\"Is not a file: \" + m_file);\n            }\n        } else if (checkExists) {\n            throw JDBCUtil.invalidArgument(\"Does not exist: \" + m_file);\n        }\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
    "startLineNumber": 963,
    "lines": "protected final void checkIsFile(boolean checkExists) throws SQLException {\n\n        boolean exists = false;\n        boolean isFile = false;\n\n        try {\n            exists = m_file.exists();\n        } catch (Exception ex) {\n            throw JDBCUtil.sqlException(ex);\n        }\n\n        if (exists) {\n            try {\n                isFile = m_file.isFile();\n            } catch (Exception ex) {\n                throw JDBCUtil.sqlException(ex);\n            }\n        }\n\n        if (exists) {\n            if (!isFile) {\n                throw JDBCUtil.invalidArgument(\"Is not a file: \" + m_file);\n            }\n        } else if (checkExists) {\n            throw JDBCUtil.invalidArgument(\"Does not exist: \" + m_file);\n        }\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlobFile.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClobFile.java",
  "id": 1661,
  "numClones": 2,
  "cloneSize": 23
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/auth/AuthUtils.java",
    "startLineNumber": 89,
    "lines": "{\n            if (rs != null) try {\n                rs.close();\n            } catch (SQLException se) {\n                logger.error(\n                        \"Failed to close ResultSet for retrieving db name\");\n            }\n            rs = null;  // Encourage GC\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/auth/AuthBeanMultiplexer.java",
    "startLineNumber": 112,
    "lines": "{\n            if (rs != null) try {\n                rs.close();\n            } catch (SQLException se) {\n                logger.error(\n                        \"Failed to close ResultSet for retrieving db name\");\n            }\n            rs = null;  // Encourage GC\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/auth/AuthUtils.java, /hsqldb/src/org/hsqldb/auth/AuthBeanMultiplexer.java",
  "id": 1662,
  "numClones": 2,
  "cloneSize": 9
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1853,
    "lines": "params[ALLOC_BLOCKS.BLOCK_OFFSET] = ValuePool.getInt(offset);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1836,
    "lines": "params[ALLOC_BLOCKS.BLOCK_OFFSET] = ValuePool.getInt(offset);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1663,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2057,
    "lines": "return aParts.length > bParts.length ? 1\n                                             : -1;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 2091,
    "lines": "return aParts.length > bParts.length ? 1\n                                             : -1;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1664,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Tree.java",
    "startLineNumber": 354,
    "lines": "for (; ci > 0; ci--) {\n                if (key.startsWith(root[ci])) {\n                    break;\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Tree.java",
    "startLineNumber": 484,
    "lines": "for (; ci > 0; ci--) {\n                if (key.startsWith(root[ci])) {\n                    break;\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/Tree.java, /hsqldb/src/org/hsqldb/util/Tree.java",
  "id": 1665,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2981,
    "lines": "if (tmpString != null) {\n                    resultGrid = Boolean.valueOf(tmpString).booleanValue();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 3039,
    "lines": "if (tmpString != null) {\n                    resultGrid = Boolean.valueOf(tmpString).booleanValue();\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1666,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4739,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5198,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n            }, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 1667,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1943,
    "lines": "if (token.dataType == null\n                    || token.dataType.typeCode != Types.SQL_INTEGER) {\n                throw Error.error(errorCode);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1911,
    "lines": "if (token.dataType == null\n                        || token.dataType.typeCode != Types.SQL_INTEGER) {\n                    throw Error.error(errorCode);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1895,
    "lines": "if (token.dataType == null\n                    || token.dataType.typeCode != Types.SQL_INTEGER) {\n                throw Error.error(errorCode);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java & more ...",
  "id": 1668,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java",
    "startLineNumber": 109,
    "lines": "RowAction action = new RowAction(session, table,\n                                             RowAction.ACTION_INSERT, row,\n                                             null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 145,
    "lines": "RowAction action = new RowAction(session, table,\n                                             RowAction.ACTION_INSERT, row,\n                                             null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLMemory.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
  "id": 1669,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3534,
    "lines": "Object[]   args           = new Object[]{ name };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 362,
    "lines": "Object[] args = new Object[]{ name };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 567,
    "lines": "Object[] args = new Object[]{ name };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1851,
    "lines": "Object[] args = new Object[]{ name };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1364,
    "lines": "Object[] args = new Object[]{ name };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 540,
    "lines": "Object[] args = new Object[]{ name };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1836,
    "lines": "Object[] args = new Object[]{ name };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserCommand.java & more ...",
  "id": 1670,
  "numClones": 7,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestViewAsterisks.java",
    "startLineNumber": 539,
    "lines": "new Object[][] {\n            new Object[] {\n                new Integer(1), \"first A\"\n            }, new Object[] {\n                new Integer(1), \"first B\"\n            }, new Object[] {\n                new Integer(2), \"second A\"\n            }, new Object[] {\n                new Integer(2), \"second B\"\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestViewAsterisks.java",
    "startLineNumber": 554,
    "lines": "new Object[][] {\n            new Object[] {\n                new Integer(1), \"first A\"\n            }, new Object[] {\n                new Integer(1), \"first B\"\n            }, new Object[] {\n                new Integer(2), \"second A\"\n            }, new Object[] {\n                new Integer(2), \"second B\"\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestViewAsterisks.java, /hsqldb/src/org/hsqldb/test/TestViewAsterisks.java",
  "id": 1671,
  "numClones": 2,
  "cloneSize": 11
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedStatements.java",
    "startLineNumber": 178,
    "lines": "{\n                        int r = ps.executeUpdate();\n\n                        System.out.println(\" ***** ps.executeUpdate gave me \"\n                                           + r);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
    "startLineNumber": 137,
    "lines": "{\n                        int r = ps.executeUpdate();\n\n                        System.out.println(\" ***** ps.executeUpdate gave me \"\n                                           + r);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestPreparedStatements.java, /hsqldb/src/org/hsqldb/test/TestPreparedSubQueries.java",
  "id": 1672,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 751,
    "lines": "rangeGroups = (RangeGroup[]) ArrayUtil.toAdjustedArray(rangeGroups,\n                rangeGroup, rangeGroups.length, 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1040,
    "lines": "rangeGroups =\n                        (RangeGroup[]) ArrayUtil.toAdjustedArray(rangeGroups,\n                            rangeGroup, rangeGroups.length, 1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Expression.java",
    "startLineNumber": 1088,
    "lines": "rangeGroups =\n                    (RangeGroup[]) ArrayUtil.toAdjustedArray(rangeGroups,\n                        rangeGroup, rangeGroups.length, 1);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/Expression.java & more ...",
  "id": 1673,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 1986,
    "lines": "{\n            HsqlName objectName = (HsqlName) set.get(0);\n\n            throw Error.error(ErrorCode.X_42502,\n                              objectName.getSchemaQualifiedStatementName());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 2209,
    "lines": "{\n                        HsqlName objectName = (HsqlName) set.get(0);\n\n                        throw Error.error(\n                            ErrorCode.X_42502,\n                            objectName.getSchemaQualifiedStatementName());\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementSchema.java",
    "startLineNumber": 1389,
    "lines": "{\n            HsqlName objectName = (HsqlName) set.get(0);\n\n            throw Error.error(ErrorCode.X_42502,\n                              objectName.getSchemaQualifiedStatementName());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java & more ...",
  "id": 1674,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1297,
    "lines": "Row             row          = navigator.getCurrentRow();\n                Object[]        data = navigator.getCurrentChangedData();\n                Table           currentTable = ((Table) row.getTable());\n                int[] changedColumns = navigator.getCurrentChangedColumns();\n                PersistentStore store = currentTable.getRowStore(session);\n\n                if (data == null) {\n                    continue;\n                }\n\n                Row newRow = currentTable.insertSingleRow(session, store,\n                    data, changedColumns);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1059,
    "lines": "Row             row          = navigator.getCurrentRow();\n            Object[]        data         = navigator.getCurrentChangedData();\n            Table           currentTable = ((Table) row.getTable());\n            int[] changedColumns = navigator.getCurrentChangedColumns();\n            PersistentStore store        = currentTable.getRowStore(session);\n\n            if (data == null) {\n                continue;\n            }\n\n            Row newRow = currentTable.insertSingleRow(session, store, data,\n                changedColumns);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java",
  "id": 1675,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1927,
    "lines": "for (int i = 0; i < updateCounts.length; i++) {\n            Object[] data = (Object[]) navigator.getNext();\n\n            updateCounts[i] = ((Integer) data[0]).intValue();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
    "startLineNumber": 1100,
    "lines": "for (int i = 0; i < updateCounts.length; i++) {\n            Object[] data = (Object[]) navigator.getNext();\n\n            updateCounts[i] = ((Integer) data[0]).intValue();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCStatement.java",
  "id": 1676,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHSQLDB.java",
    "startLineNumber": 85,
    "lines": "{\n            System.err.println(e.getClass().getName() + \": \"\n                               + e.getMessage());\n            e.printStackTrace(System.err);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestHSQLDB.java",
    "startLineNumber": 81,
    "lines": "{\n            System.err.println(e.getClass().getName() + \": \"\n                               + e.getMessage());\n            e.printStackTrace(System.err);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestHSQLDB.java, /hsqldb/src/org/hsqldb/test/TestHSQLDB.java",
  "id": 1677,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 899,
    "lines": "return new StatementCommand(StatementTypes.SET_TABLE_READONLY,\n                                            args, null,\n                                            new HsqlName[]{ table.getName() });"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 886,
    "lines": "return new StatementCommand(StatementTypes.SET_TABLE_READONLY,\n                                            args, null,\n                                            new HsqlName[]{ table.getName() });"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserCommand.java, /hsqldb/src/org/hsqldb/ParserCommand.java",
  "id": 1678,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1520,
    "lines": "System.arraycopy(refRow.getData(), 0, refData, 0,\n                                         refData.length);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1533,
    "lines": "System.arraycopy(refRow.getData(), 0, refData, 0,\n                                         refData.length);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/StatementDML.java",
    "startLineNumber": 1545,
    "lines": "System.arraycopy(refRow.getData(), 0, refData, 0,\n                                         refData.length);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/StatementDML.java, /hsqldb/src/org/hsqldb/StatementDML.java & more ...",
  "id": 1679,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 482,
    "lines": "(d.height - size.height) / 2"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/Transfer.java",
    "startLineNumber": 417,
    "lines": "(d.height - size.height) / 2"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialog.java",
    "startLineNumber": 259,
    "lines": "(d.height - size.height) / 2"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/ConnectionDialogSwing.java",
    "startLineNumber": 258,
    "lines": "(d.height - size.height) / 2"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/CommonSwing.java",
    "startLineNumber": 158,
    "lines": "(d.height - size.height) / 2"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/Transfer.java & more ...",
  "id": 1680,
  "numClones": 5,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 682,
    "lines": "ps.executeUpdate();\n\n            String dq1   = \"select CHARACTER_LENGTH(clobfield) from clobtest;\";\n            ResultSet rs = statement.executeQuery(dq1);\n\n            rs.next();\n\n            int length = rs.getInt(1);\n\n            assertTrue(value.length() == length);\n            rs.close();\n\n            String dq3 = \"delete from clobtest;\";\n\n            statement.execute(dq3);\n\n            char[] testChars = new char[11111];\n\n            for (int i = 0, j = 32; i < testChars.length; i++, j++) {\n                if (j > 255) {\n                    j = 32;\n                }\n\n                testChars[i] = (char) j;\n            }\n\n            ps.setCharacterStream(1, new CharArrayReader(testChars),\n                                  testChars.length);\n            ps.executeUpdate();\n\n            String dq2 = \"select clobfield from clobtest;\";\n\n            rs = statement.executeQuery(dq2);\n\n            rs.next();\n\n            Reader reader   = rs.getCharacterStream(1);\n            char[] newChars = new char[testChars.length];\n\n            try {\n                reader.read(newChars);\n            } catch (IOException e) {\n                fail(\"test failure\");\n            }\n\n            for (int i = 0; i < testChars.length; i++) {\n                if (testChars[i] != newChars[i]) {\n                    fail(\"test failure\");\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 759,
    "lines": "ps.executeUpdate();\n\n            String dq1   = \"select CHARACTER_LENGTH(clobfield) from clobtest;\";\n            ResultSet rs = statement.executeQuery(dq1);\n\n            rs.next();\n\n            int length = rs.getInt(1);\n\n            assertTrue(value.length() == length);\n            rs.close();\n\n            String dq3 = \"delete from clobtest;\";\n\n            statement.execute(dq3);\n\n            char[] testChars = new char[11111];\n\n            for (int i = 0, j = 32; i < testChars.length; i++, j++) {\n                if (j > 255) {\n                    j = 32;\n                }\n\n                testChars[i] = (char) j;\n            }\n\n            ps.setCharacterStream(1, new CharArrayReader(testChars),\n                                  testChars.length);\n            ps.executeUpdate();\n\n            String dq2 = \"select clobfield from clobtest;\";\n\n            rs = statement.executeQuery(dq2);\n\n            rs.next();\n\n            Reader reader   = rs.getCharacterStream(1);\n            char[] newChars = new char[testChars.length];\n\n            try {\n                reader.read(newChars);\n            } catch (IOException e) {\n                fail(\"test failure\");\n            }\n\n            for (int i = 0; i < testChars.length; i++) {\n                if (testChars[i] != newChars[i]) {\n                    fail(\"test failure\");\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLobs.java, /hsqldb/src/org/hsqldb/test/TestLobs.java",
  "id": 1681,
  "numClones": 2,
  "cloneSize": 34
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1555,
    "lines": "offset = ((Number) data[1]).intValue();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 1214,
    "lines": "offset = ((Number) data[1]).intValue();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1682,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 2005,
    "lines": "StatementCompound result = new StatementCompound(StatementTypes.IF,\n            null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1958,
    "lines": "StatementCompound result = new StatementCompound(StatementTypes.IF,\n            null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java",
  "id": 1683,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java",
    "startLineNumber": 207,
    "lines": "condlVal = ((matcher.groupCount() > 1) ? matcher.group(2) : null);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java",
    "startLineNumber": 254,
    "lines": "condlVal = ((matcher.groupCount() > 1) ? matcher.group(2) : null);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java, /hsqldb/src/org/hsqldb/lib/RefCapablePropertyResourceBundle.java",
  "id": 1684,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java",
    "startLineNumber": 77,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            value[0] = longValueTable[lookup];\n\n            return true;\n        }\n\n        return false;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
    "startLineNumber": 87,
    "lines": "{\n\n        int lookup = getLookup(key);\n\n        if (lookup != -1) {\n            value[0] = longValueTable[lookup];\n\n            return true;\n        }\n\n        return false;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java, /hsqldb/src/org/hsqldb/lib/LongKeyLongValueHashMap.java",
  "id": 1685,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 2346,
    "lines": "{\n            PersistentStore store = rangeVar.rangeTable.getRowStore(session);\n\n            cost = store.elementCount();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 2352,
    "lines": "{\n            PersistentStore store = rangeVar.rangeTable.getRowStore(session);\n\n            cost = store.elementCount();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1686,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1204,
    "lines": "return new IndexRowIterator(session, store, this, node, 0, false,\n                                    false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1249,
    "lines": "return new IndexRowIterator(session, store, this, node, 0, false,\n                                    false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/IndexAVL.java",
    "startLineNumber": 1229,
    "lines": "return new IndexRowIterator(session, store, this, node, 0, false,\n                                    false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/IndexAVL.java, /hsqldb/src/org/hsqldb/index/IndexAVL.java & more ...",
  "id": 1687,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3086,
    "lines": "if (constName == null) {\n                        constName = database.nameManager.newAutoName(\"CT\",\n                                table.getSchemaName(), table.getName(),\n                                SchemaObject.CONSTRAINT);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3120,
    "lines": "if (constName == null) {\n                        constName = database.nameManager.newAutoName(\"CT\",\n                                table.getSchemaName(), table.getName(),\n                                SchemaObject.CONSTRAINT);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3160,
    "lines": "if (constName == null) {\n                        constName = database.nameManager.newAutoName(\"CT\",\n                                table.getSchemaName(), table.getName(),\n                                SchemaObject.CONSTRAINT);\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 1688,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java",
    "startLineNumber": 87,
    "lines": "if (set.next()) {\n            System.out.println(\"pstmt res=\" + set.getInt(1));\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java",
    "startLineNumber": 98,
    "lines": "if (set.next()) {\n            System.out.println(\"pstmt res=\" + set.getInt(1));\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java, /hsqldb/src/org/hsqldb/test/TestDatetimeSimple.java",
  "id": 1689,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 175,
    "lines": "catch (Exception E) {\n            System.out.println(E.toString());\n            E.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 939,
    "lines": "catch (Exception E) {\n                    System.out.println(E.toString());\n                    E.printStackTrace();\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 761,
    "lines": "catch (Exception E) {\n            System.out.println(E.toString());\n            E.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 777,
    "lines": "catch (Exception E) {\n            System.out.println(E.toString());\n            E.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 900,
    "lines": "catch (Exception E) {\n                System.out.println(E.toString());\n                E.printStackTrace();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 224,
    "lines": "catch (Exception E) {\n            System.out.println(E.toString());\n            E.printStackTrace();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 712,
    "lines": "catch (Exception E) {\n            System.out.println(E.toString());\n            E.printStackTrace();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/JDBCBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java & more ...",
  "id": 1690,
  "numClones": 7,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2559,
    "lines": "addColumn(t, \"UDT_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_NAME\", SQL_IDENTIFIER);              //30\n            addColumn(t, \"MAXIMUM_CARDINALITY\", CARDINAL_NUMBER);    // (only for array tyes)\n            addColumn(t, \"DTD_IDENTIFIER\", SQL_IDENTIFIER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3550,
    "lines": "addColumn(t, \"UDT_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"MAXIMUM_CARDINALITY\", CARDINAL_NUMBER);\n            addColumn(t, \"DTD_IDENTIFIER\", SQL_IDENTIFIER);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4277,
    "lines": "addColumn(t, \"UDT_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"UDT_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SCOPE_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"MAXIMUM_CARDINALITY\", CARDINAL_NUMBER);\n            addColumn(t, \"DTD_IDENTIFIER\", SQL_IDENTIFIER);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1691,
  "numClones": 3,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 884,
    "lines": "lTime = System.currentTimeMillis() - lTime;\n            g[0]  = \"SQL Error\";\n\n            gResult.setHead(g);\n\n            String s = e.getMessage();\n\n            s    += \" / Error Code: \" + e.getErrorCode();\n            s    += \" / State: \" + e.getSQLState();\n            g[0] = s;\n\n            gResult.addRow(g);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1671,
    "lines": "lTime = System.currentTimeMillis() - lTime;\n            g[0]  = \"SQL Error\";\n\n            gResult.setHead(g);\n\n            String s = e.getMessage();\n\n            s    += \" / Error Code: \" + e.getErrorCode();\n            s    += \" / State: \" + e.getSQLState();\n            g[0] = s;\n\n            gResult.addRow(g);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1692,
  "numClones": 2,
  "cloneSize": 8
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5123,
    "lines": "row[table_name]       = refName.parent.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6844,
    "lines": "row[table_name]      = refName.parent.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8120,
    "lines": "row[table_name]    = refName.parent.name;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1693,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RoutineSchema.java",
    "startLineNumber": 236,
    "lines": "types[0].precedenceDegree(\n                        routines[i].parameterTypes[0])"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RoutineSchema.java",
    "startLineNumber": 246,
    "lines": "types[0].precedenceDegree(\n                            routines[i].parameterTypes[0])"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RoutineSchema.java, /hsqldb/src/org/hsqldb/RoutineSchema.java",
  "id": 1694,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 861,
    "lines": "{\n            mitem = jmenu.getItem(i);\n\n            if (mitem != null) {\n                localActionList.add(mitem);\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 762,
    "lines": "{\n            mitem = jmenu.getItem(i);\n\n            if (mitem != null) {\n                localActionList.add(mitem);\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1695,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2409,
    "lines": "catch (Exception e) {\n                throw new BadSpecial(SqltoolRB.pl_block_fail.getString(), e);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2680,
    "lines": "catch (Exception e) {\n                    throw new BadSpecial(\n                        SqltoolRB.pl_block_fail.getString(), e);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2715,
    "lines": "catch (Exception e) {\n                    throw new BadSpecial(\n                            SqltoolRB.pl_block_fail.getString(), e);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2615,
    "lines": "catch (Exception e) {\n                throw new BadSpecial(SqltoolRB.pl_block_fail.getString(), e);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2551,
    "lines": "catch (Exception e) {\n                throw new BadSpecial(SqltoolRB.pl_block_fail.getString(), e);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java & more ...",
  "id": 1696,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2616,
    "lines": "nodes[1] = new ExpressionValue(format, Type.SQL_VARCHAR);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 3394,
    "lines": "nodes[1] = new ExpressionValue(format, Type.SQL_VARCHAR);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionCustom.java, /hsqldb/src/org/hsqldb/FunctionCustom.java",
  "id": 1697,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 257,
    "lines": "if (dataTypes.length != otherTypes.length) {\n            return false;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 282,
    "lines": "if (dataTypes.length != otherTypes.length) {\n            return false;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/RowType.java, /hsqldb/src/org/hsqldb/types/RowType.java",
  "id": 1698,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2357,
    "lines": "HsqlName[] writeLockNames = new HsqlName[] {\n                    database.getCatalogName(), table.getName()\n                };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 273,
    "lines": "HsqlName[] writeLockNames = new HsqlName[] {\n                    database.getCatalogName(), table.getName()\n                };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4309,
    "lines": "HsqlName[] writeLockNames = new HsqlName[] {\n            database.getCatalogName(), table.getName()\n        };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3728,
    "lines": "HsqlName[] writeLockNames = new HsqlName[] {\n            database.getCatalogName(), table.getName()\n        };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4280,
    "lines": "HsqlName[] writeLockNames = new HsqlName[] {\n            database.getCatalogName(), table.getName()\n        };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 1699,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 376,
    "lines": "if (!row.keepInMemory(true)) {\n            row  = (RowAVLDisk) store.get(this.row, true);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 346,
    "lines": "if (!row.keepInMemory(true)) {\n            row  = (RowAVLDisk) store.get(this.row, true);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 291,
    "lines": "if (!row.keepInMemory(true)) {\n            row  = (RowAVLDisk) store.get(this.row, true);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 323,
    "lines": "if (!row.keepInMemory(true)) {\n            row  = (RowAVLDisk) store.get(this.row, true);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java",
    "startLineNumber": 423,
    "lines": "if (!row.keepInMemory(true)) {\n            row  = (RowAVLDisk) store.get(this.row, true);\n            node = (NodeAVLDiskLarge) row.getNode(iId);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java, /hsqldb/src/org/hsqldb/index/NodeAVLDiskLarge.java & more ...",
  "id": 1700,
  "numClones": 5,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3063,
    "lines": "database.nameManager.newAutoName(\"PK\",\n                                table.getSchemaName(), table.getName(),\n                                SchemaObject.CONSTRAINT)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2710,
    "lines": "database.nameManager.newAutoName(\"PK\",\n                table.getSchemaName(), table.getName(),\n                SchemaObject.CONSTRAINT)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1701,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 744,
    "lines": "if (index < 0) {\n            throw Error.error(ErrorCode.X_3B001, name);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 701,
    "lines": "if (index < 0) {\n            throw Error.error(ErrorCode.X_3B001, name);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 1702,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 988,
    "lines": "assertEquals(Long.class, rs.getObject(\"bi\").getClass());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
    "startLineNumber": 239,
    "lines": "assertEquals(Long.class, rs.getObject(\"bi\").getClass());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestOdbcTypes.java, /hsqldb/src/org/hsqldb/test/TestOdbcTypes.java",
  "id": 1703,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2778,
    "lines": "String[] tokens = m.group(1).split(\"\\\\s+\", -1);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2309,
    "lines": "String[] tokens = m.group(1).split(\"\\\\s+\", -1);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1704,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 190,
    "lines": "{\n            row = (Row) get(row, true);\n\n            super.indexRow(session, row);\n            row.keepInMemory(false);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
    "startLineNumber": 222,
    "lines": "{\n            row = (Row) get(row, true);\n\n            super.indexRow(session, row);\n            row.keepInMemory(false);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
  "id": 1705,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
    "startLineNumber": 139,
    "lines": "final ByteBuffer bb = (m_byteBuffer.capacity() < len)\n                                      ? ByteBuffer.allocate(len)\n                                      : m_byteBuffer;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
    "startLineNumber": 405,
    "lines": "final ByteBuffer bb = (m_byteBuffer.capacity() < len)\n                                      ? ByteBuffer.allocate(len)\n                                      : m_byteBuffer;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java, /hsqldb/src/org/hsqldb/jdbc/JDBCClobClient.java",
  "id": 1706,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java",
    "startLineNumber": 532,
    "lines": "ColumnBase column = new ColumnBase(\"\", \"\", \"\", \"\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
    "startLineNumber": 574,
    "lines": "ColumnBase column = new ColumnBase(\"\", \"\", \"\", \"\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCArrayBasic.java, /hsqldb/src/org/hsqldb/jdbc/JDBCArray.java",
  "id": 1707,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 944,
    "lines": "{\n\n            System.out.println(number_of_txns);\n\n            ntrans = number_of_txns;\n            Conn   = connect(url, user, password);\n\n            if (Conn == null) {\n                return;\n            }\n\n            try {\n                Conn.setAutoCommit(false);\n                Conn.setTransactionIsolation(transactionMode);\n                prepareStatements();\n            } catch (Exception E) {\n                System.out.println(E.getMessage());\n                E.printStackTrace();\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 773,
    "lines": "{\n\n            System.out.println(number_of_txns);\n\n            ntrans = number_of_txns;\n            Conn   = connect(url, user, password);\n\n            if (Conn == null) {\n                return;\n            }\n\n            try {\n                Conn.setAutoCommit(false);\n                Conn.setTransactionIsolation(transactionMode);\n                prepareStatements();\n            } catch (Exception E) {\n                System.out.println(E.getMessage());\n                E.printStackTrace();\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/TestBench.java",
  "id": 1708,
  "numClones": 2,
  "cloneSize": 16
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 769,
    "lines": "TimestampData t = (TimestampData) getColumnInType(parameterIndex,\n            Type.SQL_DATE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 1284,
    "lines": "TimestampData t = (TimestampData) getColumnInType(parameterIndex,\n            Type.SQL_DATE);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
  "id": 1709,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDbBackup.java",
    "startLineNumber": 339,
    "lines": "if (!destDir.mkdir()) {\n            throw new IOException(\"Failed to make new dir. to restore to: \"\n                                  + destDir.getAbsolutePath());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestDbBackup.java",
    "startLineNumber": 304,
    "lines": "if (!destDir.mkdir()) {\n            throw new IOException(\"Failed to make new dir. to restore to: \"\n                                  + destDir.getAbsolutePath());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestDbBackup.java, /hsqldb/src/org/hsqldb/test/TestDbBackup.java",
  "id": 1710,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1128,
    "lines": "// (ulrivo): set default directory if set from command line\n            if (defDirectory != null) {\n                f.setCurrentDirectory(new File(defDirectory));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1186,
    "lines": "// (ulrivo): set default directory if set from command line\n            if (defDirectory != null) {\n                f.setCurrentDirectory(new File(defDirectory));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1206,
    "lines": "// (ulrivo): set default directory if set from command line\n            if (defDirectory != null) {\n                f.setCurrentDirectory(new File(defDirectory));\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java & more ...",
  "id": 1711,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1925,
    "lines": "row = (Object[]) data.elementAt(i);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 1889,
    "lines": "row = (Object[]) data.elementAt(i);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1712,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4879,
    "lines": "StatementSchema cs = new StatementSchema(sql, type, args, null,\n            writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4981,
    "lines": "StatementSchema cs = new StatementSchema(sql, type, args, null,\n            writeLockNames);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1713,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 4494,
    "lines": "if (o instanceof Clob) {\n            return (Clob) o;\n        } else if (o instanceof String) {\n            return new JDBCClob((String) o);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 7645,
    "lines": "if (o instanceof Clob) {\n                return (Clob) o;\n            } else if (o instanceof String) {\n                return new JDBCClob((String) o);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 1714,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/ArrayType.java",
    "startLineNumber": 293,
    "lines": "public Object convertToDefaultType(SessionInterface sessionInterface,\n                                       Object o) {\n        return o;\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/RowType.java",
    "startLineNumber": 204,
    "lines": "public Object convertToDefaultType(SessionInterface sessionInterface,\n                                       Object o) {\n        return o;\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/ArrayType.java, /hsqldb/src/org/hsqldb/types/RowType.java",
  "id": 1715,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 379,
    "lines": "if (count > arra.length || count > arrb.length) {\n            return false;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 400,
    "lines": "if (count > arra.length || count > arrb.length) {\n            return false;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java",
    "startLineNumber": 349,
    "lines": "if (count > arra.length || count > arrb.length) {\n            return false;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ArrayUtil.java, /hsqldb/src/org/hsqldb/lib/ArrayUtil.java & more ...",
  "id": 1716,
  "numClones": 3,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 544,
    "lines": "if (otherType.typeCode == typeCode) {\n                    return precision >= otherType.precision ? 0\n                                                            : 1;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/BinaryType.java",
    "startLineNumber": 557,
    "lines": "if (otherType.typeCode == typeCode) {\n                    return precision >= otherType.precision ? 0\n                                                            : 1;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/CharacterType.java",
    "startLineNumber": 716,
    "lines": "if (otherType.typeCode == typeCode) {\n                    return precision >= otherType.precision ? 0\n                                                            : 1;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/BinaryType.java, /hsqldb/src/org/hsqldb/types/BinaryType.java & more ...",
  "id": 1717,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1695,
    "lines": "if (st != null) try {\n                            st.close();\n                        } catch (SQLException se) {\n                            // Purposefully empty\n                        } finally {\n                            st = null;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3224,
    "lines": "if (st != null) try {\n                st.close();\n            } catch (SQLException se) {\n                // Purposefully doing nothing\n            } finally {\n                st = null;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1718,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 354,
    "lines": "exprSubType == OpTypes.ALL_QUANTIFIED\n                || exprSubType == OpTypes.ANY_QUANTIFIED"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 867,
    "lines": "exprSubType == OpTypes.ALL_QUANTIFIED\n                || exprSubType == OpTypes.ANY_QUANTIFIED"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1719,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 330,
    "lines": "c.core.mainCols = new int[]{ colIndex };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 299,
    "lines": "c.core.mainCols = new int[]{ colIndex };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 1720,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4675,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                    read();\n\n                    continue;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4906,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 602,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                            read();\n\n                            continue;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 834,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4278,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1527,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                    read();\n\n                    continue;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 639,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                            read();\n\n                            continue;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 800,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                    read();\n\n                    continue;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1004,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                    read();\n\n                    continue;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4032,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 1796,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserCommand.java",
    "startLineNumber": 1748,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n\n                continue;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDML.java",
    "startLineNumber": 875,
    "lines": "if (token.tokenType == Tokens.COMMA) {\n                read();\n\n                continue;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 1721,
  "numClones": 13,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 299,
    "lines": "key > Integer.MAX_VALUE || key < Integer.MIN_VALUE"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 381,
    "lines": "key > Integer.MAX_VALUE || key < Integer.MIN_VALUE"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 164,
    "lines": "key > Integer.MAX_VALUE || key < Integer.MIN_VALUE"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java",
    "startLineNumber": 356,
    "lines": "key > Integer.MAX_VALUE || key < Integer.MIN_VALUE"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java, /hsqldb/src/org/hsqldb/lib/DoubleIntIndex.java & more ...",
  "id": 1722,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6954,
    "lines": "row[specific_schema]  = refName.schema.name;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 8236,
    "lines": "row[specific_schema]  = refName.schema.name;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
  "id": 1723,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 205,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 233,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 97,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 269,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 189,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 116,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 88,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 196,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 260,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 107,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 223,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 251,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 242,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 278,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java",
    "startLineNumber": 214,
    "lines": "if (!enumType.isInstance(key))\n            throw new IllegalArgumentException(\n                    \"Key is a \" + key.getClass().getName() + \",not a \"\n                    + enumType.getName() + \":  \" + key);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java, /hsqldb/src/org/hsqldb/lib/ValidatingResourceBundle.java & more ...",
  "id": 1724,
  "numClones": 15,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/IntervalType.java",
    "startLineNumber": 388,
    "lines": "scale > other.scale ? scale\n                                                : other.scale"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 638,
    "lines": "scale > other.scale ? scale\n                                               : other.scale"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 649,
    "lines": "scale > other.scale ? scale\n                                                : other.scale"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/NumberType.java",
    "startLineNumber": 545,
    "lines": "scale > other.scale ? scale\n                                           : other.scale"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/IntervalType.java, /hsqldb/src/org/hsqldb/types/NumberType.java & more ...",
  "id": 1725,
  "numClones": 4,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 2698,
    "lines": "catch (Throwable e) {\n            throw JDBCUtil.sqlException(ErrorCode.JDBC_INPUTSTREAM_ERROR,\n                                    e.toString(), e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 1311,
    "lines": "catch (Throwable e) {\n            throw JDBCUtil.sqlException(ErrorCode.JDBC_INPUTSTREAM_ERROR,\n                                    e.toString(), e);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java",
    "startLineNumber": 2769,
    "lines": "catch (Throwable e) {\n            throw JDBCUtil.sqlException(ErrorCode.JDBC_INPUTSTREAM_ERROR,\n                                    e.toString(), e);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPreparedStatement.java & more ...",
  "id": 1726,
  "numClones": 3,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java",
    "startLineNumber": 983,
    "lines": "switch (targetType.typeCode) {\n\n            case Types.SQL_NUMERIC :\n            case Types.SQL_DECIMAL :\n                break;\n            case Types.TINYINT :\n            case Types.SQL_SMALLINT :\n            case Types.SQL_INTEGER :\n            case Types.SQL_BIGINT :\n                targetType = Type.SQL_DECIMAL;\n\n                break;\n            case Types.SQL_DOUBLE :\n            default :\n                targetType = Type.SQL_DECIMAL_DEFAULT;\n\n                break;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 1989,
    "lines": "switch (targetType.typeCode) {\n\n            case Types.SQL_NUMERIC :\n            case Types.SQL_DECIMAL :\n                break;\n            case Types.TINYINT :\n            case Types.SQL_SMALLINT :\n            case Types.SQL_INTEGER :\n            case Types.SQL_BIGINT :\n                targetType = Type.SQL_DECIMAL;\n\n                break;\n            case Types.SQL_DOUBLE :\n            default :\n                targetType = Type.SQL_DECIMAL_DEFAULT;\n\n                break;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCallableStatement.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 1727,
  "numClones": 2,
  "cloneSize": 15
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferCommon.java",
    "startLineNumber": 110,
    "lines": "for (int i = 0; i < tTable.size(); i++) {\n                t          = (TransferTable) tTable.elementAt(i);\n                t.tracer   = tracer;\n                t.sourceDb = (TransferDb) sourceDb;\n                t.destDb   = targetDb;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferCommon.java",
    "startLineNumber": 135,
    "lines": "for (int i = 0; i < tTable.size(); i++) {\n                t          = (TransferTable) tTable.elementAt(i);\n                t.tracer   = tracer;\n                t.sourceDb = (TransferDb) sourceDb;\n                t.destDb   = targetDb;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferCommon.java, /hsqldb/src/org/hsqldb/util/TransferCommon.java",
  "id": 1728,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2770,
    "lines": "if (!m.matches())\n            throw new BadSpecial(SqltoolRB.pl_malformat.getString());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 2300,
    "lines": "if (!m.matches())\n            throw new BadSpecial(SqltoolRB.pl_malformat.getString());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1729,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 236,
    "lines": "System.out.println(\"Error encountered at command beginning at \"\n                               + sourceName + ':' + startLine);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestUtil.java",
    "startLineNumber": 241,
    "lines": "System.out.println(\"Error encountered at command beginning at \"\n                               + sourceName + ':' + startLine);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestUtil.java, /hsqldb/src/org/hsqldb/test/TestUtil.java",
  "id": 1730,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java",
    "startLineNumber": 179,
    "lines": "{\n            row = new RowAVLDisk(table, (Object[]) object, this);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
    "startLineNumber": 207,
    "lines": "{\n            row = new RowAVLDisk(table, (Object[]) object, this);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/RowStoreAVLDisk.java, /hsqldb/src/org/hsqldb/persist/RowStoreAVLHybrid.java",
  "id": 1731,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3241,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3136,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1413,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3475,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2,\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6727,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4527,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2,\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7283,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1670,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2106,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1544,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1468,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1224,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2,\n            }, false);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 1320,
    "lines": "t.createPrimaryKeyConstraint(name, new int[] {\n                0, 1, 2,\n            }, false);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java & more ...",
  "id": 1732,
  "numClones": 13,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 77,
    "lines": "c.core.updateAction == SchemaObject.ReferentialAction\n                .SET_DEFAULT"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 103,
    "lines": "c.core.updateAction == SchemaObject.ReferentialAction.SET_DEFAULT"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/TableWorks.java",
  "id": 1733,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/Server.java",
    "startLineNumber": 1444,
    "lines": "synchronized (serverConnSet) {\n            array = new ServerConnection[serverConnSet.size()];\n\n            serverConnSet.toArray(array);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/Server.java",
    "startLineNumber": 396,
    "lines": "synchronized (serverConnSet) {\n\n            // snapshot\n            array = new ServerConnection[serverConnSet.size()];\n\n            serverConnSet.toArray(array);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/Server.java, /hsqldb/src/org/hsqldb/server/Server.java",
  "id": 1734,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 2488,
    "lines": "if (lastError == null\n                                    || lastError.getLevel() < ex.getLevel()) {\n                                lastError = ex;\n                            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3658,
    "lines": "if (lastError == null\n                        || lastError.getLevel() < ex.getLevel()) {\n                    lastError = ex;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 3637,
    "lines": "if (lastError == null\n                            || lastError.getLevel() < ex.getLevel()) {\n                        lastError = ex;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5753,
    "lines": "if (lastError == null\n                                || lastError.getLevel() < ex.getLevel()) {\n                            lastError = ex;\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 5165,
    "lines": "if (lastError == null\n                            || lastError.getLevel() < ex.getLevel()) {\n                        lastError = ex;\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDQL.java, /hsqldb/src/org/hsqldb/ParserDQL.java & more ...",
  "id": 1735,
  "numClones": 5,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 714,
    "lines": "if (Boolean.TRUE.equals(value)) {\n                        setAsConstantValue(Boolean.TRUE, parent);\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 707,
    "lines": "if (Boolean.TRUE.equals(value)) {\n                            setAsConstantValue(Boolean.TRUE, parent);\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionLogical.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1736,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 2365,
    "lines": "table.isTemp()\n                                  ? (table.onCommitPreserve() ? \"PRESERVE\"\n                                                              : \"DELETE\")\n                                  : null"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3545,
    "lines": "table.isTemp()\n                                 ? (table.onCommitPreserve() ? \"PRESERVE\"\n                                                             : \"DELETE\")\n                                 : null"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 1737,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterEncode.java",
    "startLineNumber": 64,
    "lines": "try {\n            cryptOut = crypto.getOutputStream(fileStreamOut);\n            fileStreamOut = new GZIPOutputStream(cryptOut);\n            isCrypt       = true;\n        } catch (IOException e) {\n            throw Error.error(e, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_Message_Pair, new Object[] {\n                e.toString(), outFile\n            });\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterEncode.java",
    "startLineNumber": 81,
    "lines": "try {\n            cryptOut = crypto.getOutputStream(fileStreamOut);\n            fileStreamOut = new GZIPOutputStream(cryptOut);\n            isCrypt       = true;\n        } catch (IOException e) {\n            throw Error.error(e, ErrorCode.FILE_IO_ERROR,\n                              ErrorCode.M_Message_Pair, new Object[] {\n                e.toString(), outFile\n            });\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/scriptio/ScriptWriterEncode.java, /hsqldb/src/org/hsqldb/scriptio/ScriptWriterEncode.java",
  "id": 1738,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 3217,
    "lines": "if (rs != null) try {\n                rs.close();\n            } catch (SQLException se) {\n                // Purposefully doing nothing\n            } finally {\n                rs = null;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
    "startLineNumber": 1688,
    "lines": "if (rs != null) try {\n                            rs.close();\n                        } catch (SQLException se) {\n                            // Purposefully empty\n                        } finally {\n                            rs = null;\n                        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/cmdline/SqlFile.java, /hsqldb/src/org/hsqldb/cmdline/SqlFile.java",
  "id": 1739,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestMultiInsert.java",
    "startLineNumber": 79,
    "lines": "rsmd.getColumnLabel(i + 1) + \":\"\n                           + rs.getString(i + 1) + \":\""
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestMerge.java",
    "startLineNumber": 84,
    "lines": "rsmd.getColumnLabel(i + 1) + \":\"\n                          + rs.getString(i + 1) + \":\""
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestSql.java",
    "startLineNumber": 299,
    "lines": "rsmd.getColumnLabel(i + 1) + \":\"\n                                   + rs.getString(i + 1) + \":\""
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestMultiInsert.java, /hsqldb/src/org/hsqldb/test/TestMerge.java & more ...",
  "id": 1740,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 869,
    "lines": "ps.setBlob(1, blob);\n            ps.executeUpdate();\n\n            data[4] = 50;\n            blob    = new JDBCBlob(data);\n\n            ps.setBlob(1, blob);\n            ps.executeUpdate();\n            ps.close();"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestLobs.java",
    "startLineNumber": 107,
    "lines": "ps.setBlob(1, blob);\n            ps.executeUpdate();\n\n            data[4] = 50;\n            blob    = new JDBCBlob(data);\n\n            ps.setBlob(1, blob);\n            ps.executeUpdate();\n            ps.close();"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestLobs.java, /hsqldb/src/org/hsqldb/test/TestLobs.java",
  "id": 1741,
  "numClones": 2,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java",
    "startLineNumber": 110,
    "lines": "catch (Exception e) {\n            e.printStackTrace();\n            System.out.println(\"TestSql.setUp() error: \" + e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestCacheSize.java",
    "startLineNumber": 191,
    "lines": "catch (Exception e) {\n            e.printStackTrace();\n            System.out.println(\"TestSql.setUp() error: \" + e.getMessage());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestAllTypes.java, /hsqldb/src/org/hsqldb/test/TestCacheSize.java",
  "id": 1742,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java",
    "startLineNumber": 438,
    "lines": "if (nodes[LEFT].dataType.typeComparisonGroup\n                        != nodes[RIGHT].dataType.typeComparisonGroup) {\n                    throw Error.error(ErrorCode.X_42562);\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ExpressionLogical.java",
    "startLineNumber": 979,
    "lines": "if (nodes[LEFT].dataType.typeComparisonGroup\n                    != nodes[RIGHT].dataType.typeComparisonGroup) {\n                throw Error.error(ErrorCode.X_42562);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ExpressionArithmetic.java, /hsqldb/src/org/hsqldb/ExpressionLogical.java",
  "id": 1743,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 778,
    "lines": "if (!readonly && database.databaseReadOnly) {\n            throw Error.error(ErrorCode.DATABASE_IS_READONLY);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 792,
    "lines": "if (!readonly && database.databaseReadOnly) {\n            throw Error.error(ErrorCode.DATABASE_IS_READONLY);\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Session.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 1744,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCCommonDataSource.java",
    "startLineNumber": 304,
    "lines": "/**\n     * Return the parent Logger of all the Loggers used by this data source. This\n     * should be the Logger farthest from the root Logger that is\n     * still an ancestor of all of the Loggers used by this data source. Configuring\n     * this Logger will affect all of the log messages generated by the data source.\n     * In the worst case, this may be the root Logger.\n     *\n     * @return the parent Logger for this data source\n     * @throws SQLFeatureNotSupportedException if the data source does not use <code>java.util.logging<code>.\n     * @since JDK 1.7 M11 2010/09/10 (b123), HSQLDB 2.0.1\n     */\n//#ifdef JAVA6\n    public java.util.logging.Logger getParentLogger()\n    throws java.sql.SQLFeatureNotSupportedException {\n        throw (java.sql.SQLFeatureNotSupportedException) JDBCUtil.notSupported();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCPool.java",
    "startLineNumber": 454,
    "lines": "/**\n     * Return the parent Logger of all the Loggers used by this data source. This\n     * should be the Logger farthest from the root Logger that is\n     * still an ancestor of all of the Loggers used by this data source. Configuring\n     * this Logger will affect all of the log messages generated by the data source.\n     * In the worst case, this may be the root Logger.\n     *\n     * @return the parent Logger for this data source\n     * @throws SQLFeatureNotSupportedException if the data source does not use <code>java.util.logging<code>.\n     * @since JDK 1.7 M11 2010/09/10 (b123), HSQLDB 2.2.9\n     */\n//#ifdef JAVA6\n    public java.util.logging.Logger getParentLogger()\n    throws java.sql.SQLFeatureNotSupportedException {\n        throw (java.sql.SQLFeatureNotSupportedException) JDBCUtil.notSupported();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCDriver.java",
    "startLineNumber": 528,
    "lines": "/**\n     * Return the parent Logger of all the Loggers used by this driver. This\n     * should be the Logger farthest from the root Logger that is\n     * still an ancestor of all of the Loggers used by this driver. Configuring\n     * this Logger will affect all of the log messages generated by the driver.\n     * In the worst case, this may be the root Logger.\n     *\n     * @return the parent Logger for this driver\n     * @throws SQLFeatureNotSupportedException if the driver does not use <code>java.util.logging<code>.\n     * @since JDK 1.7 M11 2010/09/10 (b123), HSQLDB 2.0.1\n     */\n//#ifdef JAVA6\n    public java.util.logging\n            .Logger getParentLogger() throws java.sql\n                .SQLFeatureNotSupportedException {\n        throw (java.sql.SQLFeatureNotSupportedException) JDBCUtil.notSupported();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCCommonDataSource.java, /hsqldb/src/org/hsqldb/jdbc/JDBCPool.java & more ...",
  "id": 1745,
  "numClones": 3,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 852,
    "lines": "nodes[0].dataType.compare(\n                                session, data[0], data[1])"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 872,
    "lines": "nodes[0].dataType.compare(\n                                session, data[0], data[1])"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java",
  "id": 1746,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ClientConnection.java",
    "startLineNumber": 317,
    "lines": "data[SessionInterface.INFO_ID] = ValuePool.getInt(id);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Session.java",
    "startLineNumber": 1708,
    "lines": "data[SessionInterface.INFO_ID] = ValuePool.getInt(id);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ClientConnection.java, /hsqldb/src/org/hsqldb/Session.java",
  "id": 1747,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 109,
    "lines": "ColumnSchema col     = table.getColumn(c.core.refCols[i]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 126,
    "lines": "ColumnSchema col = table.getColumn(c.core.refCols[i]);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/TableWorks.java",
    "startLineNumber": 87,
    "lines": "ColumnSchema col = table.getColumn(c.core.refCols[i]);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/TableWorks.java, /hsqldb/src/org/hsqldb/TableWorks.java & more ...",
  "id": 1748,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3131,
    "lines": "// order SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME\n            // false PK, as CATALOG may be null\n            HsqlName name = HsqlNameManager.newInfoSchemaObjectName(\n                sysTableHsqlNames[SEQUENCES].name, false, SchemaObject.INDEX);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3359,
    "lines": "//\n            HsqlName name = HsqlNameManager.newInfoSchemaObjectName(\n                sysTableHsqlNames[SEQUENCES].name, false, SchemaObject.INDEX);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 1749,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java",
    "startLineNumber": 1202,
    "lines": "txtResult.setFont(new Font(\"Courier\", Font.PLAIN, 12));"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
    "startLineNumber": 2327,
    "lines": "txtResult.setFont(new Font(\"Courier\", Font.PLAIN, 12));"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/DatabaseManager.java, /hsqldb/src/org/hsqldb/util/DatabaseManagerSwing.java",
  "id": 1750,
  "numClones": 2,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1218,
    "lines": "{\n                        nodes[0].dataType = nodes[1].dataType;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1371,
    "lines": "{\n                    nodes[0].dataType = nodes[1].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1628,
    "lines": "{\n                        nodes[0].dataType = nodes[1].dataType;\n                    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionSQL.java",
    "startLineNumber": 1397,
    "lines": "{\n                    nodes[0].dataType = nodes[1].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2247,
    "lines": "{\n                    nodes[0].dataType = nodes[1].dataType;\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/FunctionCustom.java",
    "startLineNumber": 2831,
    "lines": "{\n                    nodes[0].dataType = nodes[1].dataType;\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/FunctionSQL.java, /hsqldb/src/org/hsqldb/FunctionSQL.java & more ...",
  "id": 1751,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestMerge.java",
    "startLineNumber": 69,
    "lines": "/**\n     * Prints a table displaying specified columns, and checks the expected\n     * number of rows.\n     */\n    private void printTable(String table, String cols,\n                            int expected) throws SQLException {\n\n        int               rows = 0;\n        ResultSet rs = stmnt.executeQuery(\"SELECT \" + cols + \" FROM \" + table);\n        ResultSetMetaData rsmd = rs.getMetaData();\n        String result = \"Table \" + table + \", expecting \" + expected\n                        + \" rows total:\\n\";\n\n        while (rs.next()) {\n            for (int i = 0; i < rsmd.getColumnCount(); i++) {\n                result += rsmd.getColumnLabel(i + 1) + \":\"\n                          + rs.getString(i + 1) + \":\";\n            }\n\n            result += \"\\n\";\n\n            rows++;\n        }\n\n        rs.close();\n        System.out.println(result);\n        assertEquals(expected, rows);\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestMultiInsert.java",
    "startLineNumber": 69,
    "lines": "private void printTable(String table, String cols, int expected) throws SQLException {\n        int rows = 0;\n        ResultSet rs = stmnt.executeQuery(\"SELECT \" + cols + \" FROM \" + table);\n\n        ResultSetMetaData rsmd = rs.getMetaData();\n        String result = \"Table \" + table + \", expecting \"\n            + expected + \" rows total:\\n\";\n\n        while (rs.next()) {\n            for (int i = 0; i < rsmd.getColumnCount(); i++) {\n                result += rsmd.getColumnLabel(i + 1) + \":\"\n                           + rs.getString(i + 1) + \":\";\n            }\n            result += \"\\n\";\n            rows++;\n        }\n        rs.close();\n        System.out.println(result);\n        assertEquals(expected, rows);\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestMerge.java, /hsqldb/src/org/hsqldb/test/TestMultiInsert.java",
  "id": 1752,
  "numClones": 2,
  "cloneSize": 18
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 470,
    "lines": "if (length > Integer.MAX_VALUE) {\n                JDBCUtil.throwError(Error.error(ErrorCode.X_42561));\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
    "startLineNumber": 794,
    "lines": "if (length > Integer.MAX_VALUE) {\n                JDBCUtil.throwError(Error.error(ErrorCode.X_42561));\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java, /hsqldb/src/org/hsqldb/jdbc/JDBCResultSet.java",
  "id": 1753,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3487,
    "lines": "row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3827,
    "lines": "row[character_maximum_length] = ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4395,
    "lines": "row[character_maximum_length] =\n                            ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4435,
    "lines": "row[character_maximum_length] =\n                            ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3482,
    "lines": "row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3786,
    "lines": "row[character_maximum_length] = ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3442,
    "lines": "row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7934,
    "lines": "row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6018,
    "lines": "row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2738,
    "lines": "row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2689,
    "lines": "row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 2733,
    "lines": "row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 5969,
    "lines": "row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 6013,
    "lines": "row[character_maximum_length] =\n                        ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7977,
    "lines": "row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 4440,
    "lines": "row[character_maximum_length] =\n                            ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 7972,
    "lines": "row[character_maximum_length] =\n                    ValuePool.getLong(type.precision);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java",
    "startLineNumber": 3824,
    "lines": "row[character_maximum_length] = ValuePool.getLong(type.precision);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationFull.java & more ...",
  "id": 1754,
  "numClones": 18,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 806,
    "lines": "Object[] args = new Object[] {\n            object.getName(), ValuePool.getInt(SchemaObject.CONSTRAINT),\n            Boolean.valueOf(cascade), Boolean.valueOf(false)\n        };"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 846,
    "lines": "Object[]     args   = new Object[] {\n            object.getName(), ValuePool.getInt(SchemaObject.CONSTRAINT),\n            Boolean.valueOf(cascade), Boolean.valueOf(false)\n        };"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1755,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 2969,
    "lines": "Constraint c =\n                    new Constraint(constName, set,\n                                   SchemaObject.ConstraintTypes.UNIQUE);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3092,
    "lines": "Constraint c =\n                        new Constraint(constName, set,\n                                       SchemaObject.ConstraintTypes.UNIQUE);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java",
  "id": 1756,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1721,
    "lines": "token.dataType = CharacterType.getCharacterType(\n                        Types.SQL_CHAR, token.tokenString.length());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1796,
    "lines": "token.dataType = CharacterType.getCharacterType(\n                        Types.SQL_CHAR, token.tokenString.length());"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/Scanner.java",
    "startLineNumber": 1663,
    "lines": "token.dataType = CharacterType.getCharacterType(Types.SQL_CHAR,\n                        token.tokenString.length());"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/Scanner.java, /hsqldb/src/org/hsqldb/Scanner.java & more ...",
  "id": 1757,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 431,
    "lines": "if (longKey == 0) {\n                hasZeroKey   = true;\n                zeroKeyIndex = lookup;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 633,
    "lines": "if (longKey == 0) {\n                hasZeroKey   = true;\n                zeroKeyIndex = lookup;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 752,
    "lines": "if (longKey == 0) {\n            hasZeroKey   = true;\n            zeroKeyIndex = lookup;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 438,
    "lines": "if (longKey == 0) {\n                hasZeroKey   = true;\n                zeroKeyIndex = lookup;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java",
    "startLineNumber": 626,
    "lines": "if (longKey == 0) {\n                hasZeroKey   = true;\n                zeroKeyIndex = lookup;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/map/BaseHashMap.java, /hsqldb/src/org/hsqldb/map/BaseHashMap.java & more ...",
  "id": 1758,
  "numClones": 5,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 1658,
    "lines": "try {\n            queryExpression = XreadQueryExpression();\n        } catch (HsqlException e) {\n            queryExpression = XreadJoinedTableAsView();\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDQL.java",
    "startLineNumber": 4531,
    "lines": "try {\n            queryExpression = XreadQueryExpression();\n        } catch (HsqlException e) {\n            queryExpression = XreadJoinedTableAsView();\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDQL.java",
  "id": 1759,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 609,
    "lines": "findSchemaObject(name.name, name.schema.name, name.type)"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/SchemaManager.java",
    "startLineNumber": 612,
    "lines": "findSchemaObject(name.name,\n                                                   name.schema.name,\n                                                   name.type)"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/SchemaManager.java, /hsqldb/src/org/hsqldb/SchemaManager.java",
  "id": 1760,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/FontDialogSwing.java",
    "startLineNumber": 106,
    "lines": "new ActionListener() {\n\n                public void actionPerformed(ActionEvent e) {\n                    setStyle();\n                }\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/FontDialogSwing.java",
    "startLineNumber": 117,
    "lines": "new ActionListener() {\n\n                public void actionPerformed(ActionEvent e) {\n                    setStyle();\n                }\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/FontDialogSwing.java, /hsqldb/src/org/hsqldb/util/FontDialogSwing.java",
  "id": 1761,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 328,
    "lines": "int c = ((int) b[i]) & 0xff;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 253,
    "lines": "int c = ((int) b[i]) & 0xff;"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/StringConverter.java",
    "startLineNumber": 225,
    "lines": "int c = ((int) b[i]) & 0xff;"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/StringConverter.java, /hsqldb/src/org/hsqldb/lib/StringConverter.java & more ...",
  "id": 1762,
  "numClones": 3,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/OracleTransferHelper.java",
    "startLineNumber": 150,
    "lines": "String SeqName   = new String(\"_\" + columnDesc.getString(4) + \"_seq\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/OracleTransferHelper.java",
    "startLineNumber": 99,
    "lines": "String SeqName = new String(\"_\" + columnDesc.getString(4)\n                                        + \"_seq\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java",
    "startLineNumber": 121,
    "lines": "String SeqName = new String(\"_\" + columnDesc.getString(4)\n                                        + \"_seq\");"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/PostgresTransferHelper.java",
    "startLineNumber": 81,
    "lines": "String SeqName   = new String(\"_\" + columnDesc.getString(4) + \"_seq\");"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/OracleTransferHelper.java, /hsqldb/src/org/hsqldb/util/OracleTransferHelper.java & more ...",
  "id": 1763,
  "numClones": 4,
  "cloneSize": 1
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 309,
    "lines": "if (index >= list.length) {\n            index -= list.length;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 212,
    "lines": "if (index >= list.length) {\n                index -= list.length;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 247,
    "lines": "if (index >= list.length) {\n                index -= list.length;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/LongDeque.java",
    "startLineNumber": 275,
    "lines": "if (index >= list.length) {\n                index -= list.length;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/HsqlDeque.java",
    "startLineNumber": 317,
    "lines": "if (index >= list.length) {\n            index -= list.length;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/LongDeque.java, /hsqldb/src/org/hsqldb/lib/LongDeque.java & more ...",
  "id": 1764,
  "numClones": 5,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Charset.java",
    "startLineNumber": 206,
    "lines": "if (SqlInvariants.INFORMATION_SCHEMA.equals(name.schema.name)) {\n            sb.append(name.getStatementName());\n        } else {\n            sb.append(name.getSchemaQualifiedStatementName());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/types/Collation.java",
    "startLineNumber": 512,
    "lines": "if (SqlInvariants.INFORMATION_SCHEMA.equals(name.schema.name)) {\n            sb.append(name.getStatementName());\n        } else {\n            sb.append(name.getSchemaQualifiedStatementName());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/types/Charset.java, /hsqldb/src/org/hsqldb/types/Collation.java",
  "id": 1765,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3216,
    "lines": "addColumn(t, \"SEQUENCE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SEQUENCE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SEQUENCE_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"DATA_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"MAXIMUM_VALUE\", CHARACTER_DATA);\n            addColumn(t, \"MINIMUM_VALUE\", CHARACTER_DATA);\n            addColumn(t, \"INCREMENT\", CHARACTER_DATA);\n            addColumn(t, \"CYCLE_OPTION\", YES_OR_NO);\n            addColumn(t, \"DECLARED_DATA_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"DECLARED_NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"DECLARED_NUMERIC_SCALE\", CARDINAL_NUMBER);\n\n            // HSQLDB-specific\n            addColumn(t, \"START_WITH\", CHARACTER_DATA);\n            addColumn(t, \"NEXT_VALUE\", CHARACTER_DATA);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 3112,
    "lines": "addColumn(t, \"SEQUENCE_CATALOG\", SQL_IDENTIFIER);\n            addColumn(t, \"SEQUENCE_SCHEMA\", SQL_IDENTIFIER);\n            addColumn(t, \"SEQUENCE_NAME\", SQL_IDENTIFIER);\n            addColumn(t, \"DATA_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_PRECISION_RADIX\", CARDINAL_NUMBER);\n            addColumn(t, \"NUMERIC_SCALE\", CARDINAL_NUMBER);\n            addColumn(t, \"MAXIMUM_VALUE\", CHARACTER_DATA);\n            addColumn(t, \"MINIMUM_VALUE\", CHARACTER_DATA);\n            addColumn(t, \"INCREMENT\", CHARACTER_DATA);\n            addColumn(t, \"CYCLE_OPTION\", YES_OR_NO);\n            addColumn(t, \"DECLARED_DATA_TYPE\", CHARACTER_DATA);\n            addColumn(t, \"DECLARED_NUMERIC_PRECISION\", CARDINAL_NUMBER);\n            addColumn(t, \"DECLARED_NUMERIC_SCALE\", CARDINAL_NUMBER);\n\n            // HSQLDB-specific\n            addColumn(t, \"START_WITH\", CHARACTER_DATA);\n            addColumn(t, \"NEXT_VALUE\", CHARACTER_DATA);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 1766,
  "numClones": 2,
  "cloneSize": 16
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 191,
    "lines": "if (init) {\n                System.out.println(\"Start: \" + start.toString());\n                System.out.print(\"Initializing dataset...\");\n                createDatabase(url, user, password);\n\n                double seconds = (System.currentTimeMillis() - start.getTime())\n                                 / 1000D;\n\n                System.out.println(\"done. in \" + seconds + \" seconds\\n\");\n                System.out.println(\"Complete: \"\n                                   + (new java.util.Date()).toString());\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 207,
    "lines": "if (init) {\n                System.out.println(\"Start: \" + start.toString());\n                System.out.print(\"Initializing dataset...\");\n                createDatabase(url, user, password);\n\n                double seconds = (System.currentTimeMillis() - start.getTime())\n                                 / 1000D;\n\n                System.out.println(\"done. in \" + seconds + \" seconds\\n\");\n                System.out.println(\"Complete: \"\n                                   + (new java.util.Date()).toString());\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/JDBCBench.java, /hsqldb/src/org/hsqldb/test/TestBench.java",
  "id": 1767,
  "numClones": 2,
  "cloneSize": 10
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 983,
    "lines": "{\n                    row[icolumn_size] =\n                        ValuePool.getInt(type.getJDBCPrecision());\n                    row[ichar_octet_length] =\n                        ValuePool.getInt(type.getJDBCPrecision());\n                }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
    "startLineNumber": 974,
    "lines": "{\n                    row[icolumn_size] =\n                        ValuePool.getInt(type.getJDBCPrecision());\n\n                    // this is length not octet_length, for character columns\n                    row[ichar_octet_length] =\n                        ValuePool.getInt(type.getJDBCPrecision());\n                }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java, /hsqldb/src/org/hsqldb/dbinfo/DatabaseInformationMain.java",
  "id": 1768,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 279,
    "lines": "if (start < MIN_POS) {\n            throw JDBCUtil.outOfRangeArgument(\"start: \" + start);\n        } else if (start > dlen || pattern == null) {\n            return -1L;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
    "startLineNumber": 236,
    "lines": "if (start < MIN_POS) {\n            throw JDBCUtil.outOfRangeArgument(\"start: \" + start);\n        } else if (start > dlen || pattern == null) {\n            return -1L;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java, /hsqldb/src/org/hsqldb/jdbc/JDBCBlob.java",
  "id": 1769,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 119,
    "lines": "catch (Exception e) {\n\n            //e.printStackTrace();\n            System.out.println(this + \".tearDown() error: \" + e.getMessage());\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
    "startLineNumber": 111,
    "lines": "catch (Exception e) {\n\n            //e.printStackTrace();\n            System.out.println(this + \".tearDown() error: \" + e.getMessage());\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java, /hsqldb/src/org/hsqldb/test/TestJDBCSavepoints.java",
  "id": 1770,
  "numClones": 2,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 1899,
    "lines": "{\n            if (ba[i] == 0) {\n                throw new RuntimeException(\"Null internal to String at offset \"\n                                           + (i - 2));\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/OdbcPacketInputStream.java",
    "startLineNumber": 207,
    "lines": "{\n            if (ba[i] == 0) {\n                throw new RuntimeException(\n                        \"Null internal to String at offset \" + (i - 2));\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/ServerConnection.java, /hsqldb/src/org/hsqldb/server/OdbcPacketInputStream.java",
  "id": 1771,
  "numClones": 2,
  "cloneSize": 6
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 808,
    "lines": "if (token.namePrePrefix != null) {\n            tokenS = token.namePrePrefix;\n        } else if (token.namePrefix != null) {\n            tokenS = token.namePrefix;\n        } else {\n            tokenS = token.tokenString;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 781,
    "lines": "if (token.namePrePrefix != null) {\n            tokenS = token.namePrePrefix;\n        } else if (token.namePrefix != null) {\n            tokenS = token.namePrefix;\n        } else {\n            tokenS = token.tokenString;\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserBase.java",
    "startLineNumber": 826,
    "lines": "if (token.namePrePrefix != null) {\n            tokenS = token.namePrePrefix;\n        } else if (token.namePrefix != null) {\n            tokenS = token.namePrefix;\n        } else {\n            tokenS = token.tokenString;\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserBase.java, /hsqldb/src/org/hsqldb/ParserBase.java & more ...",
  "id": 1772,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 767,
    "lines": "for (int i = 0; i < pgTypes.length; i++) {\n                            pgTypes[i] = PgType.getPgType(colTypes[i],\n                                                          md.isTableColumn(i));\n                        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/server/ServerConnection.java",
    "startLineNumber": 1135,
    "lines": "for (int i = 0; i < pgTypes.length; i++) {\n                        pgTypes[i] = PgType.getPgType(colTypes[i],\n                                                      md.isTableColumn(i));\n                    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/server/ServerConnection.java, /hsqldb/src/org/hsqldb/server/ServerConnection.java",
  "id": 1773,
  "numClones": 2,
  "cloneSize": 4
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java",
    "startLineNumber": 102,
    "lines": "public boolean remove(int key) {\n\n        int oldSize = size();\n\n        super.addOrRemove(key, 0, null, null, true);\n\n        return oldSize != size();\n    }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java",
    "startLineNumber": 99,
    "lines": "public boolean remove(int key) {\n\n        int oldSize = size();\n\n        super.addOrRemove(key, 0, null, null, true);\n\n        return oldSize != size();\n    }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/lib/IntKeyIntValueHashMap.java, /hsqldb/src/org/hsqldb/lib/IntKeyLongValueHashMap.java",
  "id": 1774,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1297,
    "lines": "blockAddresses[i][LOBS.BLOCK_ADDR]\n                - blockAddresses[i][LOBS.BLOCK_OFFSET]\n                + blockOffset"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/persist/LobManager.java",
    "startLineNumber": 1888,
    "lines": "blockAddresses[i][LOBS.BLOCK_ADDR]\n                       - blockAddresses[i][LOBS.BLOCK_OFFSET] + blockOffset"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/persist/LobManager.java, /hsqldb/src/org/hsqldb/persist/LobManager.java",
  "id": 1775,
  "numClones": 2,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1993,
    "lines": "for (int i = 0; i < statements.length; i++) {\n                list.add(statements[i]);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1930,
    "lines": "for (int i = 0; i < statements.length; i++) {\n                list.add(statements[i]);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1946,
    "lines": "for (int i = 0; i < statements.length; i++) {\n                list.add(statements[i]);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 1911,
    "lines": "for (int i = 0; i < statements.length; i++) {\n            list.add(statements[i]);\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 2059,
    "lines": "for (int i = 0; i < statements.length; i++) {\n                list.add(statements[i]);\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserRoutine.java",
    "startLineNumber": 2095,
    "lines": "for (int i = 0; i < statements.length; i++) {\n                list.add(statements[i]);\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserRoutine.java, /hsqldb/src/org/hsqldb/ParserRoutine.java & more ...",
  "id": 1776,
  "numClones": 6,
  "cloneSize": 3
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 3637,
    "lines": "return new StatementSchema(sql, StatementTypes.RENAME_OBJECT, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4333,
    "lines": "return new StatementSchema(sql, StatementTypes.RENAME_OBJECT, args,\n                                   null, writeLockNames);"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/ParserDDL.java",
    "startLineNumber": 4313,
    "lines": "return new StatementSchema(sql, StatementTypes.RENAME_OBJECT, args,\n                                   null, writeLockNames);"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/ParserDDL.java, /hsqldb/src/org/hsqldb/ParserDDL.java & more ...",
  "id": 1777,
  "numClones": 3,
  "cloneSize": 2
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 443,
    "lines": "if (WTextRead == null) {\n            try {\n                WTextRead = new BufferedReader(new FileReader(sFileName));\n            } catch (IOException e) {\n                throw new DataAccessPointException(e.getMessage());\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 704,
    "lines": "if (WTextRead == null) {\n            try {\n                WTextRead = new BufferedReader(new FileReader(sFileName));\n            } catch (IOException e) {\n                throw new DataAccessPointException(e.getMessage());\n            }\n        }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java",
    "startLineNumber": 376,
    "lines": "if (WTextRead == null) {\n            try {\n                WTextRead = new BufferedReader(new FileReader(sFileName));\n            } catch (IOException e) {\n                throw new DataAccessPointException(e.getMessage());\n            }\n        }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/util/TransferSQLText.java, /hsqldb/src/org/hsqldb/util/TransferSQLText.java & more ...",
  "id": 1778,
  "numClones": 3,
  "cloneSize": 7
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/TestBench.java",
    "startLineNumber": 395,
    "lines": "if (accountsnb == (naccounts * tps)) {\n                System.out.println(\"Already initialized\");\n                connectClose(Conn);\n\n                return;\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/test/JDBCBench.java",
    "startLineNumber": 417,
    "lines": "if (accountsnb == (naccounts * tps)) {\n                System.out.println(\"Already initialized\");\n                connectClose(Conn);\n\n                return;\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/test/TestBench.java, /hsqldb/src/org/hsqldb/test/JDBCBench.java",
  "id": 1779,
  "numClones": 2,
  "cloneSize": 5
 },
 {
  "clones": [
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1606,
    "lines": "for (int i = 0; i < rangeIterators.length; i++) {\n                rangeIterators[i].reset();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1591,
    "lines": "for (int i = 0; i < rangeIterators.length; i++) {\n                rangeIterators[i].reset();\n            }"
   },
   {
    "fileName": "/hsqldb/src/org/hsqldb/RangeVariable.java",
    "startLineNumber": 1615,
    "lines": "for (int i = 0; i < rangeIterators.length; i++) {\n                rangeIterators[i].reset();\n            }"
   }
  ],
  "title": "/hsqldb/src/org/hsqldb/RangeVariable.java, /hsqldb/src/org/hsqldb/RangeVariable.java & more ...",
  "id": 1780,
  "numClones": 3,
  "cloneSize": 3
 }
]